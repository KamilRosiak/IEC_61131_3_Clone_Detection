<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario21">
  <resources name="Scenario21">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.36" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PPU_EngineStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_qlvmcL34EequD661lQoFzA" text="xPPU();&#xA;xPPU.Stack();&#xA;xPPU.Crane();&#xA;xPPU.Stamp();&#xA;xPPU.LargeSortingConveyor();&#xA;xPPU.PicAlphaConveyor();&#xA;xPPU.SmallSortingConveyor();&#xA;xPPU.RefillConveyor();&#xA;xPPU.PicAlpha();&#xA;xPPU.SafetyDoor();&#xA;xPPU.LightGrid();&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := xPPU.Crane.Table.AtStack.DI_SwitchTrue AND xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;//PPU&#xA;&#x9;PPU_EngineStop := xPPU.ManuelMode;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmcb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="6" structuredText="_qlvmcL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmcr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="12" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmc734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="12" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmdL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="12" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmdb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="27" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmdr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="23" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmd734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="27" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmeL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmeb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="15" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvmer34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="17" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlvme734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="16" structuredText="_qlvmcL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LightGrid"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="91" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_qlvmfL34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="42" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmfr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmgL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmgr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmhL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmhr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmiL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmi734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmir34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmjL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="47" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmjr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="47" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="53" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmkr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="71" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmlL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvml734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="103" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmlr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="43" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="45" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmmr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="73" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="59" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmoL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlvmq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qlvmqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="72" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNgL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="66" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNgr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="63" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNhL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="61" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNhr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="51" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNiL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNi734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="53" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNir34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="4" endColumnPos="54" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNjL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNjr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNkr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNlL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="52" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNlr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="50" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="42" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNmr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="58" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="72" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="129" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_qlwNoL34EequD661lQoFzA" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="89" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="67" absEndLine="67" relStartLine="67" relEndLine="67" startColumnPos="1" endColumnPos="122" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="94" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="108" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="113" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNrb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="70" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNrL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="73" absEndLine="73" relStartLine="73" relEndLine="73" startColumnPos="1" endColumnPos="102" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNrr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNsb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="76" absEndLine="76" relStartLine="76" relEndLine="76" startColumnPos="1" endColumnPos="90" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNsL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNs734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="96" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNsr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNtb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="85" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qlwNtL34EequD661lQoFzA" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="90" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNtr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="96" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNuL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNu734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="114" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNur34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNvb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="70" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNvL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNv734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="100" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNvr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNwb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="94" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNwL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="106" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNwr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="112" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNxL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNx734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="88" absEndLine="88" relStartLine="88" relEndLine="88" startColumnPos="1" endColumnPos="108" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNxr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="91" absEndLine="91" relStartLine="91" relEndLine="91" startColumnPos="1" endColumnPos="90" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNyL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNy734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="96" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNyr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNzb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="88" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNzL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwNz734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="94" absEndLine="94" relStartLine="94" relEndLine="94" startColumnPos="1" endColumnPos="121" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwNzr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN0b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="96" absEndLine="96" relStartLine="96" relEndLine="96" startColumnPos="1" endColumnPos="78" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN0L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="108" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN0r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="113" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN1L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN1734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="102" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN1r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN2b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="100" absEndLine="100" relStartLine="100" relEndLine="100" startColumnPos="1" endColumnPos="70" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN2L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN2734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="103" absEndLine="103" relStartLine="103" relEndLine="103" startColumnPos="1" endColumnPos="88" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN2r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN3b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="94" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN3L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN3734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="150" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qlwN3r34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="88" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN4L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN4734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="107" absEndLine="107" relStartLine="107" relEndLine="107" startColumnPos="1" endColumnPos="112" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN4r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN5b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="109" absEndLine="109" relStartLine="109" relEndLine="109" startColumnPos="1" endColumnPos="66" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN5L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN5734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="96" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN5r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN6b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="102" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN6L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN6734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="108" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN6r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="58" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN7L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN7734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="114" absEndLine="114" relStartLine="114" relEndLine="114" startColumnPos="1" endColumnPos="104" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN7r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN8b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="117" absEndLine="117" relStartLine="117" relEndLine="117" startColumnPos="1" endColumnPos="78" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN8L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN8734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="118" absEndLine="118" relStartLine="118" relEndLine="118" startColumnPos="1" endColumnPos="103" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN8r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN9b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="120" absEndLine="120" relStartLine="120" relEndLine="120" startColumnPos="1" endColumnPos="54" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN9L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="78" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN9r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="123" absEndLine="123" relStartLine="123" relEndLine="123" startColumnPos="1" endColumnPos="34" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN-L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlwN-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="129" absEndLine="129" relStartLine="129" relEndLine="129" startColumnPos="1" endColumnPos="78" structuredText="_qlvmcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlwN-r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.35" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.33 //@resources.0/@pous.34" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="InductiveSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_InductiveSwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.25 //@resources.0/@pous.27 //@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.17 //@resources.0/@pous.27 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.33" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stopped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningClockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningCounterclockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="AI_Position" scope="VAR_OUTPUT" type="UINT" typeName="UINT">
          <location type="I" dataType="None"/>
        </outputVariables>
        <outputVariables name="AI_Speed" scope="VAR_OUTPUT" type="UDINT" typeName="UDINT">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_qlwN_L34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlwN_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qlwN_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwN_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOAL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qlwN_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwN_734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_qlwN_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qlwOAb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qlwN_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOA734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOBr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qlwN_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOBb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_qlwOB734EequD661lQoFzA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlwOCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qlwOB734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOCL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qlwOB734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOCr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwODb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qlwOB734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qlwODL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_qlwOB734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwODr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qlwOB734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_qlwOEr34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlwOFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qlwOEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOE734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_qlwOEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qlwOEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qlwOF734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qlwOEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlwOHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_qlwOEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qlwOG734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_qlw0kL34EequD661lQoFzA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;">
        <statements xsi:type="ST:Assignment" id="_qlw0kr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qlw0kL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qlw0kb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0lL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qlw0kL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qlw0k734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0lr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qlw0kL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qlw0lb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0mL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qlw0kL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qlw0l734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qlwOHb34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlwOH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qlwOHb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qlwOHr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qlwOIL34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlwOIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qlwOIL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qlwOIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_qlwOI734EequD661lQoFzA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlwOJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qlwOI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qlwOJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_qlwOJr34EequD661lQoFzA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlwOKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qlwOJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qlwOJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.31 //@resources.0/@pous.32" identifier="OperationPanelExtended" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanelExtended">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StopButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ResetButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Reset" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanelExtended" id="_qlw0pb34EequD661lQoFzA" text="EmergencyStop := NOT DI_StopButton;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;&#xA;Reset := DI_ResetButton;">
        <statements xsi:type="ST:Assignment" id="_qlw0p734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qlw0pb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qlw0pr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StopButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0qb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qlw0pb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qlw0qL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0q734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qlw0pb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qlw0qr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0rb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qlw0pb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qlw0rL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlw0r734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="23" structuredText="_qlw0pb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Reset"/>
          <right xsi:type="STE:VariableExpression" id="_qlw0rr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ResetButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qlw0mb34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlw0m734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qlw0mb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qlw0mr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qlw0nL34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlw0nr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qlw0nL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qlw0nb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_Off" id="_qlw0n734EequD661lQoFzA" text="DO_LampReset:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlw0ob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qlw0n734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qlw0oL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_On" id="_qlw0or34EequD661lQoFzA" text="DO_LampReset:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlw0pL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qlw0or34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qlw0o734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.33 //@resources.0/@pous.34" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.28" identifier="PositionTransmitter" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PositionTransmitter">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_PositionReached" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="Potentiometer" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Potentiometer">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_Position" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="delta" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qlw0sL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
        </internalVariables>
        <internalVariables name="iPosStack" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qlw0sb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="24310"/>
        </internalVariables>
        <internalVariables name="iPosConveyor" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qlw0sr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="15930"/>
        </internalVariables>
        <internalVariables name="iPosStamp" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qlw0s734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7845"/>
        </internalVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Potentiometer" id="_qlw0tL34EequD661lQoFzA" text="IF((iPosStack-delta) &lt; AI_Position AND AI_Position &lt; (iPosStack+delta)) THEN&#xA;&#x9;AtStack := TRUE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;ELSIF((iPosConveyor-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyor+delta)) THEN&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := TRUE;&#xA;&#x9;AtStamp := FALSE;&#xA;ELSIF((iPosStamp-delta) &lt; AI_Position AND AI_Position &lt; (iPosStamp+delta)) THEN&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := TRUE;&#xA;ELSE&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := FALSE;&#x9;&#xA;END_IF">
        <statements xsi:type="ST:If" id="_qlw03b34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="17" relStartLine="1" relEndLine="17" endColumnPos="5" structuredText="_qlw0tL34EequD661lQoFzA">
          <conditionalBlocks id="_qlw0v734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="4" relStartLine="1" relEndLine="4" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qlw0uL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qlw0t734EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0tb34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0tr34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qlw0ur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="16" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qlw0ub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw0vL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="20" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qlw0u734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw0vr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qlw0vb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qlw0yr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="5" absEndLine="8" relStartLine="5" relEndLine="8" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qlw0w734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qlw0wr34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0wL34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0wb34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qlw0xb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qlw0xL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw0x734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="19" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qlw0xr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw0yb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qlw0yL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qlw01b34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="9" absEndLine="12" relStartLine="9" relEndLine="12" endColumnPos="16" structuredText="_qlw0tL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qlw0zr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qlw0zb34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0y734EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qlw0zL34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qlw00L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qlw0z734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw00r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qlw00b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw01L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="16" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qlw00734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qlw03L34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="13" absEndLine="16" relStartLine="13" relEndLine="16" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
            <substatements xsi:type="ST:Assignment" id="_qlw01734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qlw01r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw02b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="20" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qlw02L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qlw02734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="17" structuredText="_qlw0tL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qlw02r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.27 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.33" identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.35" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.35" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.12" callers="//@resources.0/@pous.27 //@resources.0/@pous.33" identifier="Ramp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="RampFull" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <comment identifier="Ramp">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.33" identifier="Switch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Switch">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.16/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.16/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.16/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.16/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.16/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.16/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.4 //@resources.0/@pous.11 //@resources.0/@pous.3" callers="//@resources.0/@pous.25" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="Motor" scope="VAR" type="DERIVED" typeName="Motor">
          <location/>
        </internalVariables>
        <internalVariables name="AtStack" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyor" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStamp" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="Potentiometer" scope="VAR" type="DERIVED" typeName="Potentiometer">
          <location/>
        </internalVariables>
        <internalVariables name="AtStackInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenStackConveyor" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyorInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenConveyorStamp" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStampInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="UltrasonicSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_UltraSonic" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.21 //@resources.0/@pous.22" callers="//@resources.0/@pous.25" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.19/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.19/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.19/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.19/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.19/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.19/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.19/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.19/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.19/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.19/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.19/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.19/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.19/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.19/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.21 //@resources.0/@pous.22" callers="//@resources.0/@pous.28" identifier="VacuumGripperExtended" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripperExtended">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="VacuumHit" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn AND TurnVacuumOff.t>T#250ms" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.19 //@resources.0/@pous.20" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_TakenIn" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.19 //@resources.0/@pous.20" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_qlxboL34EequD661lQoFzA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlxbor34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qlxboL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qlxbob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_qlxbo734EequD661lQoFzA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlxbpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qlxbo734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qlxbpL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="ValveBlock" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_SetBlockPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_BlockadeBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_BlockadeBlockPressure" id="_qlxbpr34EequD661lQoFzA" text="DO_SetBlockPressure := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlxbqL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qlxbpr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_qlxbp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ReleaseBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReleaseBlockPressure" id="_qlxbqb34EequD661lQoFzA" text="DO_SetBlockPressure := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlxbq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qlxbqb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_qlxbqr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.34" identifier="WeightModule" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_WPWeight" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.19 //@resources.0/@pous.17" callers="//@resources.0/@pous.36" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_qlyCvb34EequD661lQoFzA" text="Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Table.Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qlyCv734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="47" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCvr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCwb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="51" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCwL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCwr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="57" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCxL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCx734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="75" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCxr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="107" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCyL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCy734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCyr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCzb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCzL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyCz734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="77" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlyCzr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyC0b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="69" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qlyC0L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlyC0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="39" structuredText="_qlyCvb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlyC0r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qlyC1734EequD661lQoFzA" statementType="IF" absStartLine="12" absEndLine="14" relStartLine="12" relEndLine="14" endColumnPos="5" structuredText="_qlyCvb34EequD661lQoFzA">
          <conditionalBlocks id="_qlyC1r34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="12" absEndLine="13" relStartLine="12" relEndLine="13" endColumnPos="23" structuredText="_qlyCvb34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qlyC1L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qlyC1b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="23" structuredText="_qlyCvb34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </invokingVariable>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_qlxbrL34EequD661lQoFzA" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlxbrr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qlxbrL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxbrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_qlxbr734EequD661lQoFzA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlxbsb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qlxbr734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxbsL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qlxbsr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlxbtL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlxbs734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbtr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qlxbtb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxbt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxbub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qlxbu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qlxbvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_qlxbv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_qlxbwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_qlxbw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbxr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qlxbxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbyL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qlxbx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbyr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qlxbyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbzL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qlxby734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxbzr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qlxbzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb0L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_qlxbsr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qlxbz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_qlxb0b34EequD661lQoFzA" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlxb0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qlxb0b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxb0r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_qlxb1L34EequD661lQoFzA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlxb1r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qlxb1L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlxb1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_qlxb1734EequD661lQoFzA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qlxb2b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb2L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb2734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb2r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb3b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb3L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb3734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb3r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb4L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlxb4734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qlxb1734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qlxb4r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_qlyCsL34EequD661lQoFzA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qlyCsr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCsb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyCtL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCs734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyCtr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCtb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyCuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCt734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyCur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCub34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyCvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qlyCsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qlyCu734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.4 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.25/@actions.7/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC.t>T#8s AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_Clockwise_MTM.t>T#8s" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTS" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTS.t>T#8s" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.10/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.25/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.25/@actions.10/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Turn_On_Vacuum_PWU.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.25/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.25/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.25/@actions.11/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPLight.t>T#0ms" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPMedium.t>T#1000ms" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPHeavy.t>T#2000ms" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.8" targetStep="//@resources.0/@pous.25/@actions.11/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.12/@implementation/@transitions.12" local_ID="6" stepLevel="2"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.10 //@resources.0/@pous.25/@actions.12/@implementation/@transitions.11" local_ID="31" stepLevel="10"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.25/@actions.12/@implementation/@transitions.22" local_ID="41" stepLevel="3"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.14" local_ID="45" stepLevel="4"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.15" local_ID="48" stepLevel="5"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.16" local_ID="51" stepLevel="6"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.17" local_ID="54" stepLevel="7"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.18" local_ID="57" stepLevel="8"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.19 //@resources.0/@pous.25/@actions.12/@implementation/@transitions.20" local_ID="60" stepLevel="9"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.21" local_ID="68" stepLevel="10"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.25/@actions.12/@implementation/@transitions.23" local_ID="73" stepLevel="4"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="Short_Delay.t>T#50ms" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.9" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.10" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.1" local_ID="34"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.10" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.19" local_ID="36"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.11" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.12" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.13" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.14" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.15" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.16" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.17" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.18" local_ID="63"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.17" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.3" local_ID="65"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.18" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.4" local_ID="70"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.11" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.19" targetStep="//@resources.0/@pous.25/@actions.12/@implementation/@steps.4" local_ID="75"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.13/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.13/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.13/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.14/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.10"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.6 //@resources.0/@pous.25/@actions.14/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.25/@actions.14/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.25/@actions.14/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.13 //@resources.0/@pous.37 //@resources.0/@pous.38 //@resources.0/@pous.39 //@resources.0/@pous.40 //@resources.0/@pous.41 //@resources.0/@pous.42 //@resources.0/@pous.43 //@resources.0/@pous.44" callers="//@resources.0/@pous.36" identifier="EnergyMonitor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="EnergyMonitor">
          <statements>//Hardware Input Variables</statements>
          <statements>//Hardware Output Variables</statements>
        </comment>
        <internalVariables name="BK_1_6_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_2_3_7_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_4_5_8_9_10_11_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_80l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_120l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor_4bar" scope="VAR" type="DERIVED" typeName="PressureSensor_4bar">
          <location/>
        </internalVariables>
        <internalVariables name="Flow_2to200l_min" scope="VAR" type="DERIVED" typeName="FlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="Transducer_0to10AC_0to10V" scope="VAR" type="DERIVED" typeName="A_to_V_Transducer">
          <location/>
        </internalVariables>
        <internalVariables name="ExtSensor_0to10V" scope="VAR" type="DERIVED" typeName="V_Sensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor" scope="VAR" type="DERIVED" typeName="PressureSensor">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_left" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_right" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="ChangeoverMagnetVaveRelay" scope="VAR" type="DERIVED" typeName="MagnetValve">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.12 //@resources.0/@pous.9 //@resources.0/@pous.2 //@resources.0/@pous.15 //@resources.0/@pous.18 //@resources.0/@pous.16" callers="//@resources.0/@pous.36" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptBeginning" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_qlzQ0L34EequD661lQoFzA" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_qlzQ0b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qlzQ0L34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qlzQ0r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qlzQ0L34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ1L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ0734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ1r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="30" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ1b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ2L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ1734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="36" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ2b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ3L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="74" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ2734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="96" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ3b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ4L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="120" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ3734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="39" structuredText="_qlzQ0L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ4b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qlzQ5r34EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="13" relStartLine="11" relEndLine="13" endColumnPos="5" structuredText="_qlzQ0L34EequD661lQoFzA">
          <conditionalBlocks id="_qlzQ5b34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="12" relStartLine="11" relEndLine="12" endColumnPos="17" structuredText="_qlzQ0L34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qlzQ4734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qlzQ5L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="17" structuredText="_qlzQ0L34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qlyC2L34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlyC2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qlyC2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlyC2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qlypwL34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlypwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlypwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlypw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypxr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlypxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypyL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qlypx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypyr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qlypyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypzL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qlypy734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlypzr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qlypzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp0L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qlypz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp0r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qlyp0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp1L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qlyp0734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp1r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qlyp1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp2L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_qlyp1734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qlyp2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp3L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_qlyp2734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlyp3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_qlypwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_qlyp3b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qlyp3734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlyp4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qlyp3734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlyp4L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_qlyp4r34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_qlyp5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qlyp4r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qlyp4734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qlyp5b34EequD661lQoFzA" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_qlyp5734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qlyp5b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qlyp5r34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qlyp6L34EequD661lQoFzA" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_qlyp6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlyp6L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qlyp6b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qlyp6734EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qlyp7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qlyp6734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qlyp7L34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_qlyp7r34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_qlyp8L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qlyp7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qlyp7734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_qlyp8b34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_qlyp8734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qlyp8b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qlyp8r34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_qlyp9L34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_qlyp9r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qlyp9L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qlyp9b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.27/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.27/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.27/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.27/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.27/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.27/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.27/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.27/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.27/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.27/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.27/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.20" local_ID="21" stepLevel="6"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.7" local_ID="25" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="26" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.8" local_ID="30" stepLevel="8"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.11" local_ID="38" stepLevel="7"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.17" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.18" local_ID="60" stepLevel="8"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.21" local_ID="68" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="69" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.9 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.15 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.19 //@resources.0/@pous.27/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.27/@actions.13/@implementation/@transitions.22" local_ID="74" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="76" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.19" local_ID="35"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.10" local_ID="37"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.19" local_ID="52"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.15" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.16" local_ID="59"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.18" local_ID="67"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.27/@actions.13/@implementation/@steps.0" local_ID="79"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.27/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.27/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.27/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.27/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.27/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.6 //@resources.0/@pous.20 //@resources.0/@pous.5" callers="//@resources.0/@pous.36" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_qlzQ-r34EequD661lQoFzA" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qlzQ_L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qlzQ-r34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ-734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzQ_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_qlzQ-r34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ_b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlzRAL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="39" structuredText="_qlzQ-r34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlzQ_734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qlzRBL34EequD661lQoFzA" statementType="IF" absStartLine="4" absEndLine="6" relStartLine="4" relEndLine="6" endColumnPos="5" structuredText="_qlzQ-r34EequD661lQoFzA">
          <conditionalBlocks id="_qlzRA734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="17" structuredText="_qlzQ-r34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qlzRAb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qlzRAr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="17" structuredText="_qlzQ-r34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qlzQ5734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlzQ6b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlzQ6L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ6734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlzQ6r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qlzQ7L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ7734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qlzQ7r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ8b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qlzQ8L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ8734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_qlzQ8r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ9b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_qlzQ9L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_qlzQ9r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlzQ-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_qlzQ5734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_qlzQ-L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.16 //@resources.0/@pous.6" callers="//@resources.0/@pous.36" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_qlz4A734EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qlz4Bb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4BL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlz4B734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4Br34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlz4Cb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4CL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlz4C734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4Cr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlz4Db34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4DL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qlz4D734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="39" structuredText="_qlz4A734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qlz4Dr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qlz4E734EequD661lQoFzA" statementType="IF" absStartLine="7" absEndLine="9" relStartLine="7" relEndLine="9" endColumnPos="5" structuredText="_qlz4A734EequD661lQoFzA">
          <conditionalBlocks id="_qlz4Er34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="8" relStartLine="7" relEndLine="8" endColumnPos="17" structuredText="_qlz4A734EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qlz4EL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qlz4Eb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_qlz4A734EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_qlzRBb34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs+1;">
          <statements xsi:type="ST:Assignment" id="_qlzRB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qlzRBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qlzRBr34EequD661lQoFzA" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qlzRCL34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qlzRCr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qlzRCL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qlzRCb34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qlz34L34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz34r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qlz34L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlz34b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qlz34734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz35b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qlz34734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz35L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qlz35r34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz36L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz35734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz36r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlz36b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz37L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz36734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz37r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz37b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz38L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz37734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz38r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qlz38b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz39L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qlz38734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz39r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz39b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz3-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_qlz39734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz3-r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_qlz3-b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz3_L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_qlz35r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz3-734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qlz3_b34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlz3_734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qlz3_b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlz3_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qlz4AL34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qlz4Ar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qlz4AL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz4Ab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.16 //@resources.0/@pous.6" callers="//@resources.0/@pous.36" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_ql0e_734EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_ql0fAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fAL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fA734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fAr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fBL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fBr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fCL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fCr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_ql0e_734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fDL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_ql0fEb34EequD661lQoFzA" statementType="IF" absStartLine="8" absEndLine="10" relStartLine="8" relEndLine="10" endColumnPos="5" structuredText="_ql0e_734EequD661lQoFzA">
          <conditionalBlocks id="_ql0fEL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="17" structuredText="_ql0e_734EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_ql0fDr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_ql0fD734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_ql0e_734EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qlz4FL34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qlz4Fr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qlz4FL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qlz4Fb34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qlz4F734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz4Gb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qlz4F734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlz4GL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qlz4Gr34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz4HL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qlz4Gr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz4G734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qlz4Hb34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qlz4H734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz4Hr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4Ib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qlz4IL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4I734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz4Ir34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4Jb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qlz4JL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4J734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz4Jr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4Kb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qlz4KL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4K734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qlz4Kr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qlz4Lb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qlz4Hb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qlz4LL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_ql0e8L34EequD661lQoFzA" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql0e8r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_ql0e8L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_ql0e8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_ql0e8734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql0e9b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_ql0e8734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_ql0e9L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_ql0e9r34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql0e-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_ql0e9r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_ql0e9734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_ql0e-b34EequD661lQoFzA" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_ql0e-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_ql0e-b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_ql0e-r34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_ql0e_L34EequD661lQoFzA" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql0e_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_ql0e_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_ql0e_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.36" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_ql0fEr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_ql0fE734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_ql0fEr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_ql0fEr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fFL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_ql0fEr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fFr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_ql0fEr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fGL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_ql0fEr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fGr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.36" identifier="LightGrid" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="LightGrid">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LightGrid" id="_ql0fHL34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_ql0fHb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_ql0fHL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_ql0fHL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fHr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_ql0fHL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fIL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_ql0fHL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fIr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql0fJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_ql0fHL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql0fJL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.16 //@resources.0/@pous.6 //@resources.0/@pous.15" callers="//@resources.0/@pous.36" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_ql1GDL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_ql1GDr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_ql1GDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_ql1GDb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1GEL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_ql1GDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_ql1GD734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1GEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_ql1GDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_ql1GEb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1GFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_ql1GDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_ql1GE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1GFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="39" structuredText="_ql1GDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql1GFb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_ql1GGr34EequD661lQoFzA" statementType="IF" absStartLine="6" absEndLine="8" relStartLine="6" relEndLine="8" endColumnPos="5" structuredText="_ql1GDL34EequD661lQoFzA">
          <conditionalBlocks id="_ql1GGb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="17" structuredText="_ql1GDL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_ql1GF734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_ql1GGL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="17" structuredText="_ql1GDL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_ql0fJr34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql0fKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_ql0fJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_ql0fJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_ql0fKb34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql0fK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_ql0fKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_ql0fLL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_ql0fLr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_ql0fML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_ql0fMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_ql0fNL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_ql0fNr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_ql0fOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fO734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_ql0fOr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fPb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_ql0fPL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fP734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_ql0fPr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_ql0fQL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fQ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_ql0fQr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql0fRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_ql0fKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_ql0fRL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_ql1GAL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql1GAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_ql1GAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_ql1GAb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_ql1GA734EequD661lQoFzA" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_ql1GBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_ql1GA734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_ql1GBL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_ql1GBr34EequD661lQoFzA" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_ql1GCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_ql1GBr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_ql1GB734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_ql1GCb34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_ql1GC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_ql1GCb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_ql1GCr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.33/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.33/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.33/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.33/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.33/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.33/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.33/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.33/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.33/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.33/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.33/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.33/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.33/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.33/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.33/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.33/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" actionVariable="//@resources.0/@pous.33/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.33/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.33/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.33/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.33/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.33/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.33/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.33/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.33/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.7 //@resources.0/@pous.4 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.24" callers="//@resources.0/@pous.36" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_ql1tTr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_ql1tT734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_ql1tTr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1tUb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_ql1tTr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_ql1tUL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1tU734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_ql1tTr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql1tUr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1tVb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_ql1tTr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql1tVL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1tV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_ql1tTr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql1tVr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql1tWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="47" structuredText="_ql1tTr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_ql1tWL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_ql1GG734EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql1GHb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_ql1GG734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql1GHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_ql1GHr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql1GIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_ql1GH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_ql1GIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GJL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_ql1GI734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_ql1GJb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_ql1GJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GKr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_ql1GKb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GLL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_ql1GK734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1GLr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_ql1GHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_ql1GLb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_ql1GL734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql1tEr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_ql1GL734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql1tEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql1tEb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_ql1tE734EequD661lQoFzA" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_ql1tL734EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_ql1tE734EequD661lQoFzA">
            <conditionalBlocks id="_ql1tHL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tFb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql1tFL34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_ql1tFr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_ql1tGL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_ql1tGr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_ql1tJb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tHr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql1tHb34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_ql1tH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_ql1tIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tJL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_ql1tI734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_ql1tLr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tJ734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_ql1tJr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_ql1tKL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_ql1tKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_ql1tLL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_ql1tS734EequD661lQoFzA" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_ql1tE734EequD661lQoFzA">
            <conditionalBlocks id="_ql1tOL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tMb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql1tML34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_ql1tMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_ql1tNL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_ql1tNr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_ql1tQb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tOr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql1tOb34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_ql1tO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_ql1tPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_ql1tP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_ql1tSr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_ql1tE734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql1tQ734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql1tQr34EequD661lQoFzA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql1tRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_ql1tRL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_ql1tRr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql1tSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_ql1tE734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_ql1tSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql1tTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_ql1tE734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_ql1tTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.34/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.34/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.34/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.13 //@resources.0/@pous.14 //@resources.0/@pous.4 //@resources.0/@pous.5 //@resources.0/@pous.1" callers="//@resources.0/@pous.36" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_ql2UUr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_ql2UU734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_ql2UUr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UVb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UVL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UVr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UWL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UW734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UWr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UXb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="61" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UXL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UX734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UXr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UYb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UYL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_ql2UY734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="47" structuredText="_ql2UUr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_ql2UYr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_ql1tWr34EequD661lQoFzA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql1tW734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_ql1tWr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql1tXr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_ql1tWr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql1tXL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql1tXb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_ql1tX734EequD661lQoFzA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_ql1tYb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_ql1tX734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql1tYL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_ql2UIL34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql2UIr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_ql2UIL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql2UIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_ql2UI734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql2UJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_ql2UJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_ql2UJr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql2UKL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_ql2UKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2ULb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_ql2ULL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_ql2ULr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_ql2UML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_ql2UMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_ql2UNL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_ql2UNr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_ql2UI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_ql2UOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_ql2UOr34EequD661lQoFzA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_ql2UPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_ql2UOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql2UO734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_ql2UPb34EequD661lQoFzA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_ql2UP734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_ql2UPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql2UPr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_ql2UQL34EequD661lQoFzA" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_ql2UQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_ql2UQL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql2UQb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_ql2UQ734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql2URr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_ql2UQ734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql2URL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql2URb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_ql2UR734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql2USr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_ql2UR734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql2USL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql2USb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_ql2US734EequD661lQoFzA" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_ql2UTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_ql2US734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_ql2UTL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UT734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_ql2US734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_ql2UTr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql2UUb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_ql2US734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_ql2UUL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.35/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.35/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.35/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.7"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.34 //@resources.0/@pous.25 //@resources.0/@pous.27 //@resources.0/@pous.35 //@resources.0/@pous.30 //@resources.0/@pous.33 //@resources.0/@pous.29 //@resources.0/@pous.28 //@resources.0/@pous.31 //@resources.0/@pous.32 //@resources.0/@pous.26 //@resources.0/@pous.23" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="LightGrid" scope="VAR_INPUT" type="DERIVED" typeName="LightGrid">
          <location/>
        </inputVariables>
        <inputVariables name="EngergyMonitoringHardware" scope="VAR_INPUT" type="DERIVED" typeName="EnergyMonitor">
          <location/>
        </inputVariables>
        <inputVariables name="Block_LSCSep1_LSCSep2" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_SSC_PAC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stack_Crane" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stamp_RC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="DI_NO_EMERGENCY" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.2 //@resources.0/@pous.36/@implementations.0/@transitions.3" local_ID="6" stepLevel="2"/>
        <steps name="ManuelMode_active" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.4" local_ID="12" stepLevel="3"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.5 //@resources.0/@pous.36/@implementations.0/@transitions.6 //@resources.0/@pous.36/@implementations.0/@transitions.7" local_ID="17" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.8 //@resources.0/@pous.36/@implementations.0/@transitions.9 //@resources.0/@pous.36/@implementations.0/@transitions.10" local_ID="28" stepLevel="4"/>
        <steps name="ManuelMode_Active2" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.10" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.11" local_ID="37" stepLevel="5"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.12" local_ID="42" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.12" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.13" local_ID="45" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.13" outgoingTransitions="//@resources.0/@pous.36/@implementations.0/@transitions.14" local_ID="48" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton AND AutomaticMode" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.4" local_ID="9"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.3" local_ID="11"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.2" local_ID="14"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.7" local_ID="22"/>
        <transitions condition="ManuelMode" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.3" local_ID="25"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.7" local_ID="31"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.0" local_ID="33"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.6" local_ID="36"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.5" local_ID="39"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.8" local_ID="44"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.8" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.9" local_ID="47"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.36/@implementations.0/@steps.9" targetStep="//@resources.0/@pous.36/@implementations.0/@steps.0" local_ID="50"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_ql27ML34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_ql27Mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_ql27ML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Mb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CheckManuelMode">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckManuelMode" id="_ql27M734EequD661lQoFzA" text="ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_ql27Nb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="134" structuredText="_ql27M734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27NL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27N734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="156" structuredText="_ql27M734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Nr34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_ql27OL34EequD661lQoFzA" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_ql27Or34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="140" structuredText="_ql27OL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Ob34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27PL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="134" structuredText="_ql27OL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27O734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27Pr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="156" structuredText="_ql27OL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Pb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_ql27P734EequD661lQoFzA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_ql27Qb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_ql27P734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_ql27QL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Qr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Q734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27RL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Rb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Rr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27R734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_ql27P734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_ql27SL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();&#xA;ACT_FaultAirPressureDetection();">
          <statements xsi:type="ST:Assignment" id="_ql27Sr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_ql27SL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Sb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27TL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_ql27SL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27S734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27Tr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="134" structuredText="_ql27SL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27Tb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql27UL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="156" structuredText="_ql27SL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql27T734EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Ub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Ur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27U734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="28" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27VL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Vb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="39" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Vr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="43" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27V734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="37" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27WL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="31" structuredText="_ql27SL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Wb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="31" structuredText="_ql27SL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_FaultAirPressureDetection"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_ql27Wr34EequD661lQoFzA" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_ql27XL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_ql27Wr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_ql27W734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Xb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Xr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27X734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27YL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Yb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Yr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_ql27Wr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_ql27Y734EequD661lQoFzA" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_ql27Zb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_ql27Y734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_ql27ZL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Zr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27Z734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27aL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27ab34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27ar34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql27a734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_ql27Y734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="LightBlinking">
        <implementation xsi:type="ST:StructuredText" label="LightBlinking" id="_ql3iQL34EequD661lQoFzA" text="Timer(IN := NOT Timer.Q, PT:=T#1500ms);&#xA;&#xA;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;//GREEN&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;ELSE&#xA;&#x9;//WHITE&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;END_IF&#xA;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3iQ734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_ql3iQL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:UnaryExpression" id="_ql3iQb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                  </subexpression>
                </assignedValue>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3iQr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:If" id="_ql3iXL34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="27" relStartLine="3" relEndLine="27" endColumnPos="5" structuredText="_ql3iQL34EequD661lQoFzA">
            <conditionalBlocks id="_ql3iUL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="14" relStartLine="3" relEndLine="14" endColumnPos="40" structuredText="_ql3iQL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql3iRb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql3iRL34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="DIV">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iRr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="35" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iR734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="50" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iSL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="35" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iSb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="40" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iSr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iS734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="36" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iTL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iTb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="36" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iTr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="41" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iT734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="40" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_ql3iW734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="26" relStartLine="15" relEndLine="26" endColumnPos="39" structuredText="_ql3iQL34EequD661lQoFzA">
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iUb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iUr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iU734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="36" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iVL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="41" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iVb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="40" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iVr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="35" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iV734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iWL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="35" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iWb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="40" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql3iWr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="39" structuredText="_ql3iQL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql3iXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="156" structuredText="_ql3iQL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_ql3iXb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_ql3iX734EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_ql3iYb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_ql3iX734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_ql3iYL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql3iY734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_ql3iX734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_ql3iYr34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_ql3ibb34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_ql3iX734EequD661lQoFzA">
            <conditionalBlocks id="_ql3ibL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_ql3iX734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql3iZb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_ql3iZL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql3iZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_ql3iX734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_ql3iZr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql3iab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_ql3iX734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_ql3iaL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_ql3ia734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_ql3iX734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_ql3iar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_ql3ibr34EequD661lQoFzA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql3icL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_ql3ibr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_ql3ib734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql3icr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_ql3ibr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_ql3icb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3idL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ic734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3idr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3idb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ieL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3id734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ier34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ieb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ifL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ie734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ifr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ifb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3igL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3if734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3igr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3igb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ihL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ig734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ihr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ihb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3iiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ih734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3iir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3iib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ijL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ii734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ijr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ijb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ikL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ij734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ikr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ikb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql3ilL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ik734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JUL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql3ilb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JUr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JVL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JU734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JVr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JWL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JV734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JWr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JWb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JXL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JXr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JYL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JX734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JYr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JZL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JY734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JZr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JZb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JaL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4JZ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jar34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JbL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Ja734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jbr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jbb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JcL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jcr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jcb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JdL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jc734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jdr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jdb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JeL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_ql3ibr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jd734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jer34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jeb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JfL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Je734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jfr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jfb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JgL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jf734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jgr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jgb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JhL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jg734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jhb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_ql3ibr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jh734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4Jir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_ql3ibr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_ql4Jib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_ql4Ji734EequD661lQoFzA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql4Jjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_ql4Ji734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_ql4JjL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4Jj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_ql4Ji734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4Jjr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_ql4JkL34EequD661lQoFzA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jkb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JlL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jk734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jlr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jlb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jl734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jmr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jmb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JnL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jm734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jnr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jnb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4JoL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Jn734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4Jor34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4Job34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wYL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wYb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wYr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wY734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wZr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wZb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4waL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wZ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4war34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wbL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wa734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wbr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wbb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wcL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wcb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wcr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wc734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wdL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wd734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wdr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4web34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4weL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4we734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wer34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wfb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wfL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wfr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wgL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wf734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wgr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wgb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4whL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wg734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4whr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4whb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wh734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wjL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wi734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wjb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wkL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wj734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wkb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wlL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wk734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wlr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wlb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wl734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wmr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wmb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wnL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wm734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wnr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wnb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4woL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wn734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wor34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wpL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wpr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wpb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wqL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wqr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wrL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wrr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wsL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_ql4JkL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wtL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4ws734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wtr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wtb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wvL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wvr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_ql4wwL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_ql4JkL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_ql4wv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_ql4ww734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wxr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_ql4JkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_ql4wxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_ql4wx734EequD661lQoFzA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_ql4wyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_ql4wx734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_ql4wyL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_ql4wy734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_ql4wx734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wyr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_ql4wzL34EequD661lQoFzA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_ql4wzr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_ql4wzL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_ql4wzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_FaultAirPressureDetection">
        <implementation xsi:type="ST:StructuredText" label="ACT_FaultAirPressureDetection" id="_ql5XcL34EequD661lQoFzA" text="IF(&#xA;&#x9;Block_LSCSep1_LSCSep2.DI_BoundaryPressure = FALSE &#xA;&#x9;OR Block_SSC_PAC.DI_BoundaryPressure = FALSE&#xA;&#x9;OR Block_Stack_Crane.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR Block_Stamp_RC.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR EngergyMonitoringHardware.PressureSensor_4bar.DI_PressureReached = FALSE &#xA;)&#xA;THEN&#xA; EmergencyStop := TRUE; &#xA; Timer(IN := NOT Timer.Q, PT:=T#500MS);&#xA;&#x9;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;&#x9;//GREEN&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;ELSE&#xA;&#x9;&#x9;//WHITE&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;&#x9;END_IF&#xA;END_IF">
          <statements xsi:type="ST:If" id="_ql5Xkr34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="36" relStartLine="1" relEndLine="36" endColumnPos="5" structuredText="_ql5XcL34EequD661lQoFzA">
            <conditionalBlocks id="_ql5Xkb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="35" relStartLine="1" relEndLine="35" endColumnPos="6" structuredText="_ql5XcL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_ql5Xcr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_ql5Xcb34EequD661lQoFzA" operator="OR">
                  <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_LSCSep1_LSCSep2">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_SSC_PAC">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                      </left>
                      <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stack_Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stamp_RC">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                          </left>
                          <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="EngergyMonitoringHardware">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PressureSensor_4bar">
                              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_PressureReached"/>
                            </innerVariable>
                          </left>
                          <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_ql5XdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="22" structuredText="_ql5XcL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                <right xsi:type="STE:Literal" id="_ql5Xc734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xd734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="38" structuredText="_ql5XcL34EequD661lQoFzA">
                <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
                  <parameters>
                    <assignedValue xsi:type="STE:UnaryExpression" id="_ql5Xdb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                      </subexpression>
                    </assignedValue>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
                  </parameters>
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_ql5Xdr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500MS"/>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                  </parameters>
                </functionCall>
              </substatements>
              <substatements xsi:type="ST:If" id="_ql5XkL34EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="35" relStartLine="11" relEndLine="35" startColumnPos="1" endColumnPos="6" structuredText="_ql5XcL34EequD661lQoFzA">
                <conditionalBlocks id="_ql5XhL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="22" relStartLine="11" relEndLine="22" startColumnPos="1" endColumnPos="41" structuredText="_ql5XcL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_ql5Xeb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_ql5XeL34EequD661lQoFzA" operator="LESSER_THAN">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="DIV">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                      </right>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xer34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="2" endColumnPos="36" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xe734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="2" endColumnPos="51" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5XfL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="36" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xfb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="41" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xfr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="40" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xf734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="37" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5XgL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="52" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xgb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="37" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xgr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="2" endColumnPos="42" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xg734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="2" endColumnPos="41" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_ql5Xj734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="34" relStartLine="23" relEndLine="34" startColumnPos="1" endColumnPos="40" structuredText="_ql5XcL34EequD661lQoFzA">
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xhb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="2" endColumnPos="37" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="2" endColumnPos="52" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="2" endColumnPos="37" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5XiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="2" endColumnPos="42" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="2" endColumnPos="41" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="2" endColumnPos="36" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xi734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="2" endColumnPos="51" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5XjL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="2" endColumnPos="36" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xjb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="2" endColumnPos="41" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_ql5Xjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="2" endColumnPos="40" structuredText="_ql5XcL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.36/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.15/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.36/@actions.16/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.8" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.9" targetStep="//@resources.0/@pous.36/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="FaultAirPressureDetection" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.6" local_ID="29"/>
          <steps name="EmergencyChecking" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.6" local_ID="30"/>
          <steps name="ManuelModeCehcking" incomingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.17/@implementation/@transitions.6" local_ID="31" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.12" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.4 //@resources.0/@pous.36/@actions.17/@implementation/@steps.5 //@resources.0/@pous.36/@actions.17/@implementation/@steps.6 //@resources.0/@pous.36/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.9 //@resources.0/@pous.36/@actions.17/@implementation/@steps.10 //@resources.0/@pous.36/@actions.17/@implementation/@steps.11 //@resources.0/@pous.36/@actions.17/@implementation/@steps.12" targetStep="//@resources.0/@pous.36/@actions.17/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="A_to_V_Transducer" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_AmperToVolt" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="FlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Flow" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="GearPointFlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_ReachedGearPoint" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="MagnetValve" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Changeover" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="PressureSensor_4bar" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_PressureReached" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="ProtectiveContact" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Plug" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="V_Sensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Voltage" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26" identifier="Wattmeter" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Energy" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
  </resources>
</C:Configuration>

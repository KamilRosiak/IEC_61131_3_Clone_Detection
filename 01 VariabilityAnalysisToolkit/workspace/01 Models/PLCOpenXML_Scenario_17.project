<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario_17">
  <resources name="Scenario_17">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.31" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_qj_6AL34EequD661lQoFzA" text="MAIN.xPPU();&#xA;MAIN.xPPU.Stack();&#xA;MAIN.xPPU.Crane();&#xA;MAIN.xPPU.Stamp();&#xA;MAIN.xPPU.LargeSortingConveyor();&#xA;MAIN.xPPU.PicAlphaConveyor();&#xA;MAIN.xPPU.SmallSortingConveyor();&#xA;MAIN.xPPU.RefillConveyor();&#xA;MAIN.xPPU.PicAlpha();&#xA;MAIN.xPPU.SafetyDoor();&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := MAIN.xPPU.Crane.Table.AtStack.DI_SwitchTrue AND MAIN.xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := MAIN.xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := MAIN.xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := MAIN.xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := MAIN.xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := MAIN.xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := MAIN.xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := MAIN.xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := MAIN.xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := MAIN.xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := MAIN.xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := MAIN.xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := MAIN.xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := MAIN.xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := MAIN.xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := MAIN.xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := MAIN.xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := MAIN.xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := MAIN.xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := MAIN.xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := MAIN.xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := MAIN.xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := MAIN.xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := MAIN.xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := MAIN.xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= MAIN.xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := MAIN.xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := MAIN.xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= MAIN.xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := MAIN.xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := MAIN.xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := MAIN.xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := MAIN.xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := MAIN.xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := MAIN.xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := MAIN.xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := MAIN.xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := MAIN.xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := MAIN.xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= MAIN.xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := MAIN.xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := MAIN.xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := MAIN.xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := MAIN.xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := MAIN.xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := MAIN.xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := MAIN.xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := MAIN.xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := MAIN.xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := MAIN.xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := MAIN.xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Ab34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="11" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Ar34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="17" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6A734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="17" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6BL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="17" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Bb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="32" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Br34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6B734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="32" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6CL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="26" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Cb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qj_6Cr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="22" structuredText="_qj_6AL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          </invokingVariable>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6DL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="101" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_qj_6C734EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                    </innerVariable>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
                </innerVariable>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="47" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Db34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6EL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6D734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Er34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Eb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6FL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6E734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Fr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Fb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6GL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6F734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Gr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Gb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6HL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="43" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6G734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Hr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="47" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Hb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6IL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="47" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6H734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Ir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="53" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Ib34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6JL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="71" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6I734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Jr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="103" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Jb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6KL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="43" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6J734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Kr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="45" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Kb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6LL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="73" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6K734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Lr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="59" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Lb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6ML34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6L734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Mb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6NL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6M734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Nr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Nb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6OL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6N734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Or34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Ob34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6PL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="77" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6O734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Pr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="71" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Pb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6QL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="68" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6P734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Qr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="61" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Qb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6RL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Q734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Rr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="53" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Rb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6SL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="4" endColumnPos="54" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6R734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Sr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Sb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6TL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="51" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6S734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Tr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Tb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6UL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6T734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Ur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="57" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Ub34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6VL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="55" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6U734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Vr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="47" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Vb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6WL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="63" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6V734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Wr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="77" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Wb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6XL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="129" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_qj_6W734EequD661lQoFzA" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Xr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="89" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Xb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6YL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="122" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6X734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Yr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" startColumnPos="1" endColumnPos="99" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Yb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6ZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="113" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Y734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6Zr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="118" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Zb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6aL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="75" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6Z734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6ar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="107" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6ab34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6bL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="75" absEndLine="75" relStartLine="75" relEndLine="75" startColumnPos="1" endColumnPos="90" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6a734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6br34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="76" absEndLine="76" relStartLine="76" relEndLine="76" startColumnPos="1" endColumnPos="96" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6bb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6cL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="85" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qj_6b734EequD661lQoFzA" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6cr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="90" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6cb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6dL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="96" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6c734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="114" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6db34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6eL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="75" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6d734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6er34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="105" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6eb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6fL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="99" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6e734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6fr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="111" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6fb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6gL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="117" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6f734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6gr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="113" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6gb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6hL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" startColumnPos="1" endColumnPos="90" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6g734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6hr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="91" absEndLine="91" relStartLine="91" relEndLine="91" startColumnPos="1" endColumnPos="96" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6hb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6iL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="88" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6h734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6ir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="121" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6ib34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6jL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="95" absEndLine="95" relStartLine="95" relEndLine="95" startColumnPos="1" endColumnPos="83" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6i734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6jr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="96" absEndLine="96" relStartLine="96" relEndLine="96" startColumnPos="1" endColumnPos="113" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6jb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6kL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="118" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6j734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6kr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="107" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6kb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6lL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="75" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6k734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6lr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="102" absEndLine="102" relStartLine="102" relEndLine="102" startColumnPos="1" endColumnPos="88" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6lb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6mL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="103" absEndLine="103" relStartLine="103" relEndLine="103" startColumnPos="1" endColumnPos="94" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6l734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="150" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qj_6mb34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6nL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="88" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6m734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6nr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="112" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6nb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6oL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="108" absEndLine="108" relStartLine="108" relEndLine="108" startColumnPos="1" endColumnPos="71" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6n734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6or34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="109" absEndLine="109" relStartLine="109" relEndLine="109" startColumnPos="1" endColumnPos="101" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6ob34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6pL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="107" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6o734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6pr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="113" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6pb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6qL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="63" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6p734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6qr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="109" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6qb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6rL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="116" absEndLine="116" relStartLine="116" relEndLine="116" startColumnPos="1" endColumnPos="78" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6q734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6rr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="117" absEndLine="117" relStartLine="117" relEndLine="117" startColumnPos="1" endColumnPos="103" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6rb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6sL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="119" absEndLine="119" relStartLine="119" relEndLine="119" startColumnPos="1" endColumnPos="59" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6r734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6sr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="120" absEndLine="120" relStartLine="120" relEndLine="120" startColumnPos="1" endColumnPos="83" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6sb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qj_6tL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="83" structuredText="_qj_6AL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qj_6s734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.30" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.23 //@resources.0/@pous.28 //@resources.0/@pous.29" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.29 //@resources.0/@pous.30" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.22 //@resources.0/@pous.23 //@resources.0/@pous.24 //@resources.0/@pous.29 //@resources.0/@pous.30" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.4/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.4/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.4/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.4/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.23 //@resources.0/@pous.24 //@resources.0/@pous.25 //@resources.0/@pous.26 //@resources.0/@pous.28" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="Stopped" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="TurningClockwise" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="TurningCounterclockwise" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_qj_6tb34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qj_6t734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qj_6tb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qj_6tr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qj_6ub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qj_6tb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qj_6uL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qj_6u734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_qj_6tb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qj_6ur34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qj_6vb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qj_6tb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qj_6vL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qj_6v734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qj_6tb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qj_6vr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_qkAhEL34EequD661lQoFzA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkAhEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkAhEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhEb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qkAhEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhE734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qkAhEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qkAhFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_qkAhEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhF734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qkAhEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_qkAhG734EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkAhHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qkAhG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_qkAhG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhHr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qkAhG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qkAhIL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qkAhG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhIr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkAhJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_qkAhG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qkAhJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.23 //@resources.0/@pous.29 //@resources.0/@pous.30" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ManuelButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_qkAhMr34EequD661lQoFzA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := DI_ManuelButton;">
        <statements xsi:type="ST:Assignment" id="_qkAhNL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkAhMr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qkAhM734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkAhNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkAhMr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkAhNb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkAhOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="29" structuredText="_qkAhMr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qkAhN734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ManuelButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qkAhJr34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkAhKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qkAhJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qkAhJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qkAhKb34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkAhK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qkAhKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qkAhKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_qkAhLL34EequD661lQoFzA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkAhLr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkAhLL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qkAhLb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_qkAhL734EequD661lQoFzA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkAhMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qkAhL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qkAhML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="OperationPanelExtended" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanelExtended">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ManuelButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StopButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ResetButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Reset" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanelExtended" id="_qkAhRb34EequD661lQoFzA" text="EmergencyStop := NOT DI_StopButton;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := DI_ManuelButton;&#xA;Reset := DI_ResetButton;">
        <statements xsi:type="ST:Assignment" id="_qkAhR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qkAhRb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qkAhRr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StopButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkAhSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkAhRb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkAhSL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkAhS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="29" structuredText="_qkAhRb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qkAhSr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ManuelButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkAhTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="23" structuredText="_qkAhRb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Reset"/>
          <right xsi:type="STE:VariableExpression" id="_qkAhTL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ResetButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qkAhOb34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkAhO734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qkAhOb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qkAhOr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qkAhPL34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkAhPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qkAhPL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qkAhPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_Off" id="_qkAhP734EequD661lQoFzA" text="DO_LampReset:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkAhQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkAhP734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qkAhQL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_On" id="_qkAhQr34EequD661lQoFzA" text="DO_LampReset:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkAhRL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qkAhQr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qkAhQ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.23 //@resources.0/@pous.28 //@resources.0/@pous.29" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.24" identifier="PositionTransmitter" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PositionTransmitter">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_PositionReached" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.13 //@resources.0/@pous.23 //@resources.0/@pous.25 //@resources.0/@pous.26 //@resources.0/@pous.28" identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.30" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.30" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.10" callers="//@resources.0/@pous.23 //@resources.0/@pous.28" identifier="Ramp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="RampFull" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <comment identifier="Ramp">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.23 //@resources.0/@pous.25 //@resources.0/@pous.26 //@resources.0/@pous.28" identifier="Switch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Switch">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.14/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.14/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.14/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.14/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.14/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.14/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.14/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.14/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.14/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.14/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.14/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.14/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.14/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.14/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.14/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.14/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.3" callers="//@resources.0/@pous.22" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="Motor" scope="VAR" type="DERIVED" typeName="Motor">
          <location/>
        </internalVariables>
        <internalVariables name="AtStack" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyor" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStamp" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.23" identifier="UltrasonicSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_UltraSonic" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.19 //@resources.0/@pous.20" callers="//@resources.0/@pous.22" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.19 //@resources.0/@pous.20" callers="//@resources.0/@pous.24" identifier="VacuumGripperExtended" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripperExtended">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <internalVariables name="DO_VacuumHit" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.18/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.18/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.18/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.18/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.18/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.18/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn AND TurnVacuumOff.t>T#250ms" sourceStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.17 //@resources.0/@pous.18" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_TakenIn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17 //@resources.0/@pous.18" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_qkBIIL34EequD661lQoFzA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkBIIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qkBIIL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qkBIIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_qkBII734EequD661lQoFzA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkBIJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkBII734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qkBIJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.29" identifier="WeightModule" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_WPWeight" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.4 //@resources.0/@pous.17 //@resources.0/@pous.15" callers="//@resources.0/@pous.31" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_qkCWQL34EequD661lQoFzA" text="Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;">
        <statements xsi:type="ST:Assignment" id="_qkCWQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="47" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWQb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWRL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="51" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWQ734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWRr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWRb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWSL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="57" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWR734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWSr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="75" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWSb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWTL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="107" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWS734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWTr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWTb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWT734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="77" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkCWVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="69" structuredText="_qkCWQL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qkCWU734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_qkBIJr34EequD661lQoFzA" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkBIKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qkBIJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBIJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_qkBIKb34EequD661lQoFzA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkBIK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qkBIKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBIKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qkBILL34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBILr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qkBILL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBILb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkBIL734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkBIMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkBIML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkBIMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBINb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBINL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBINr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qkBIOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIO734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qkBIOr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIPb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_qkBIPL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIP734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_qkBIPr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_qkBIQL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIQ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qkBIQr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qkBIRL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkBIRr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBISb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qkBISL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBIS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qkBISr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBITb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_qkBIL734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qkBITL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_qkBITr34EequD661lQoFzA" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkBIUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qkBITr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBIT734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_qkBIUb34EequD661lQoFzA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkBIU734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qkBIUb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkBIUr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer0ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer0ms" id="_qkBIVL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#0ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBIV734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="26" structuredText="_qkBIVL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIVr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#0ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_qkBIWL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBIW734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qkBIWL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIWb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIWr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer2000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer2000ms" id="_qkBIXL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#2000ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBIX734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qkBIXL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIXr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#2000ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer50ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer50ms" id="_qkBIYL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#50MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBIY734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qkBIYL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBIYr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#50MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_qkBvML34EequD661lQoFzA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qkBvMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvMb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvNL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvM734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvNb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvN734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvOb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qkBvML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvO734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_qkBvPb34EequD661lQoFzA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qkBvP734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvPr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvQL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvQ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvQr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvRL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvRr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkBvSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qkBvPb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qkBvSL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnClockwise_AND_Timer8000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnClockwise_AND_Timer8000ms" id="_qkBvSr34EequD661lQoFzA" text="Table.Motor.ACT_TurnClockwise();&#xA;Timer(IN:=TRUE, PT:=T#8000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvS734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qkBvSr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnClockwise"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvTr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkBvSr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvTb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#8000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnCounterclockwise_AND_Timer8000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnCounterclockwise_AND_Timer8000ms" id="_qkBvT734EequD661lQoFzA" text="Table.Motor.ACT_TurnCounterclockwise();&#xA;Timer(IN:=TRUE, PT:=T#8000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvUL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qkBvT734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnCounterclockwise"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvU734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkBvT734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvUr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#8000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnVacuumOn_AND_Timer2000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnVacuumOn_AND_Timer2000ms" id="_qkBvVL34EequD661lQoFzA" text="Gripper.ACT_Intake();&#xA;Timer(IN:=TRUE, PT:=T#2000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvVb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qkBvVL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Intake"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkBvWL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkBvVL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvVr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkBvV734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#2000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.3 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.6 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.4 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.6 //@resources.0/@pous.22/@actions.15/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.22/@actions.15/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="Timer.Q AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.7" targetStep="//@resources.0/@pous.22/@actions.15/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.16/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.16/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.16/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTS" incomingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.17/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise" incomingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.17/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.17/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.18/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.3 //@resources.0/@pous.22/@actions.18/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.6 //@resources.0/@pous.22/@actions.18/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@inputVariables.3"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.22/@actions.18/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.6" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.7" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.8" targetStep="//@resources.0/@pous.22/@actions.18/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.19/@implementation/@transitions.3 //@resources.0/@pous.22/@actions.19/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.19/@implementation/@transitions.4 //@resources.0/@pous.22/@actions.19/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.22/@actions.19/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.6" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.7" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.8" targetStep="//@resources.0/@pous.22/@actions.19/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.20/@implementation/@transitions.12" local_ID="6" stepLevel="2"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.10 //@resources.0/@pous.22/@actions.20/@implementation/@transitions.11" local_ID="31" stepLevel="10"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.13 //@resources.0/@pous.22/@actions.20/@implementation/@transitions.22" local_ID="41" stepLevel="3"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.14" local_ID="45" stepLevel="4"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.15" local_ID="48" stepLevel="5"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.16" local_ID="51" stepLevel="6"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.17" local_ID="54" stepLevel="7"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.18" local_ID="57" stepLevel="8"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.19 //@resources.0/@pous.22/@actions.20/@implementation/@transitions.20" local_ID="60" stepLevel="9"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.21" local_ID="68" stepLevel="10"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.22/@actions.20/@implementation/@transitions.23" local_ID="73" stepLevel="4"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.6" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.7" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.8" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.9" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.10" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.1" local_ID="34"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.10" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.19" local_ID="36"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.11" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.12" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.13" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.14" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.15" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.16" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.17" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.18" local_ID="63"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.17" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.3" local_ID="65"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.18" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.4" local_ID="70"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.11" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.19" targetStep="//@resources.0/@pous.22/@actions.20/@implementation/@steps.4" local_ID="75"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.21/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.2 //@resources.0/@pous.22/@actions.21/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.21/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.21/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.22/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.22/@declaration/@internalVariables.10"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.1 //@resources.0/@pous.22/@actions.22/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.6 //@resources.0/@pous.22/@actions.22/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.22/@actions.22/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" actionVariable="//@resources.0/@pous.22/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.0" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.1" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.2" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.3" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.4" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.5" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.6" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.7" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.8" targetStep="//@resources.0/@pous.22/@actions.22/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.4 //@resources.0/@pous.10 //@resources.0/@pous.8 //@resources.0/@pous.2 //@resources.0/@pous.13 //@resources.0/@pous.16 //@resources.0/@pous.14" callers="//@resources.0/@pous.31" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_qkC9UL34EequD661lQoFzA" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qkC9Ub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qkC9UL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qkC9Ur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qkC9UL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkC9VL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_qkC9UL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkC9U734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkC9Vr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qkC9UL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qkC9Vb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkC9WL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="74" structuredText="_qkC9UL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qkC9V734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkC9Wr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="96" structuredText="_qkC9UL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkC9Wb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkC9XL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="120" structuredText="_qkC9UL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkC9W734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qkCWVb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkCWV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qkCWVb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkCWVr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkCWWL34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkCWWr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkCWWb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkCWW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkCWXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkCWX734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qkCWYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qkCWY734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWZr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qkCWZb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWaL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qkCWZ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qkCWab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWbL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qkCWa734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWbr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkCWbb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWcL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_qkCWb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWcr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qkCWcb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_qkCWc734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkCWdr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_qkCWWL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_qkCWdb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qkCWd734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkCWeb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qkCWd734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkCWeL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_qkCWer34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_qkCWfL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkCWer34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qkCWe734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qkCWfb34EequD661lQoFzA" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_qkCWf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkCWfb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qkCWfr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qkCWgL34EequD661lQoFzA" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_qkCWgr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkCWgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkCWgb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qkCWg734EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qkCWhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkCWg734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qkCWhL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_qkCWhr34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_qkCWiL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkCWhr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qkCWh734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_qkCWib34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_qkCWi734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkCWib34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qkCWir34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_qkCWjL34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_qkCWjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkCWjL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qkCWjb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.23/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.23/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.23/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.23/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.23/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.23/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.23/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.23/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.23/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.23/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.23/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.8"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.20" local_ID="21" stepLevel="6"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.7" local_ID="25" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="26" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.8" local_ID="30" stepLevel="8"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.11" local_ID="38" stepLevel="7"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.17" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.18" local_ID="60" stepLevel="8"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.21" local_ID="68" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="69" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.9 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.15 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.19 //@resources.0/@pous.23/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.23/@actions.13/@implementation/@transitions.22" local_ID="74" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.8"/>
            <actions xsi:type="SFC:SimpleAction" localId="76" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.19" local_ID="35"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.10" local_ID="37"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.19" local_ID="52"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.15" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.16" local_ID="59"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.18" local_ID="67"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.23/@actions.13/@implementation/@steps.0" local_ID="79"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.23/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.23/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.23/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.23/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.23/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.9 //@resources.0/@pous.5 //@resources.0/@pous.18 //@resources.0/@pous.4" callers="//@resources.0/@pous.31" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_qkDkYL34EequD661lQoFzA" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;">
        <statements xsi:type="ST:Assignment" id="_qkDkYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qkDkYL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qkDkYb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkDkZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_qkDkYL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkDkY734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkC9Xb34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkC9X734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkC9Xr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9Yb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkC9YL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9Y734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkC9Yr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9Zb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qkC9ZL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9Z734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qkC9Zr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9ab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_qkC9aL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9a734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_qkC9ar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9bb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_qkC9bL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkC9b734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_qkC9Xb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_qkC9br34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.24/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.24/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.24/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.24/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.24/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.24/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.24/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.24/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.24/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.24/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.24/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.24/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.24/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.24/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.24/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.24/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.24/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.14 //@resources.0/@pous.5" callers="//@resources.0/@pous.31" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_qkELcL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;">
        <statements xsi:type="ST:Assignment" id="_qkELcr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qkELcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qkELcb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkELdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_qkELcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qkELc734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkELdr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_qkELcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qkELdb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkELeL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_qkELcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkELd734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkELer34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_qkELcL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkELeb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_qkDkZb34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs+1;">
          <statements xsi:type="ST:Assignment" id="_qkDkZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qkDkZb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qkDkZr34EequD661lQoFzA" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qkDkaL34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qkDkar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qkDkaL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qkDkab34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qkDka734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkDkbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkDka734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkDkbL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qkDkbr34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkDkcL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qkDkbr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkDkb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkDkcb34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkDkc734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkDkcr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkDkdL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkDkdr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkeb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qkDkeL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDke734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qkDker34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qkDkfL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qkDkfr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkDkgL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_qkDkgr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_qkDkhL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkDkh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_qkDkcb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkDkhr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qkDkiL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkDkir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qkDkiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkDkib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qkDki734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkDkjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qkDki734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkDkjL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.25/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.25/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.25/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.25/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.25/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" actionVariable="//@resources.0/@pous.25/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.25/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.14 //@resources.0/@pous.5" callers="//@resources.0/@pous.31" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_qkEyib34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;">
        <statements xsi:type="ST:Assignment" id="_qkEyi734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qkEyir34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEyjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qkEyjL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEyj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qkEyjr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEykb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkEykL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEyk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkEykr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEylb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_qkEyib34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkEylL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qkELe734EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qkELfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qkELe734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qkELfL34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qkELfr34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkELgL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkELfr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkELf734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qkELgb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkELg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qkELgb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkELgr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkELhL34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkELhr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkELhb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELiL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkELh734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkELib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELjL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkELi734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qkELjb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELkL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qkELj734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qkELkb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkELlL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qkELhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qkELk734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_qkELlb34EequD661lQoFzA" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkELl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qkELlb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkELlr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qkELmL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkELmr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qkELmL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkELmb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qkEygL34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkEygr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qkEygL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkEygb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_qkEyg734EequD661lQoFzA" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_qkEyhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qkEyg734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qkEyhL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_qkEyhr34EequD661lQoFzA" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkEyiL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qkEyhr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkEyh734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.5/@actions.0"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.7" callers="//@resources.0/@pous.31" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_qkEylr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qkEyl734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qkEylr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEymb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qkEylr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkEymL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkEym734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qkEylr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qkEymr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.2 //@resources.0/@pous.8 //@resources.0/@pous.14 //@resources.0/@pous.5 //@resources.0/@pous.13" callers="//@resources.0/@pous.31" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_qkFZmb34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;">
        <statements xsi:type="ST:Assignment" id="_qkFZm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_qkFZmb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qkFZmr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkFZnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_qkFZmb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qkFZnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkFZn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_qkFZmb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkFZnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkFZob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_qkFZmb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qkFZoL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qkEynL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkEynr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qkEynL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkEynb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkEyn734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkEyob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkEyoL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkEyor34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEypb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkEypL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkEypr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qkEyqL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qkEyqr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyrb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qkEyrL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qkEyrr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEysb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qkEysL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEys734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qkEysr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEytb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkEytL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qkEytr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_qkEyuL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkEyu734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_qkEyn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qkEyur34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qkEyvL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkEyvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qkEyvL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qkEyvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qkFZkL34EequD661lQoFzA" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_qkFZkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkFZkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qkFZkb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qkFZk734EequD661lQoFzA" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_qkFZlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkFZk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkFZlL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qkFZlr34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qkFZmL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qkFZlr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qkFZl734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.28/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.4 //@resources.0/@pous.6 //@resources.0/@pous.3 //@resources.0/@pous.2 //@resources.0/@pous.8 //@resources.0/@pous.21" callers="//@resources.0/@pous.31" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_qkGA2734EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qkGA3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qkGA2734EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGA3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qkGA2734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkGA3b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGA4L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qkGA2734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qkGA3734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGA4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="47" structuredText="_qkGA2734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qkGA4b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qkFZor34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkFZpL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qkFZor34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkFZo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkFZpb34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkFZp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkFZpr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkFZqL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qkFZqr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZrb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qkFZrL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkFZrr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZsb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qkFZsL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZs734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qkFZsr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkFZtb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_qkFZpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qkFZtL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_qkFZtr34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkFZub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qkFZtr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkFZt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkFZuL34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_qkGAoL34EequD661lQoFzA" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_qkGAvL34EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_qkGAoL34EequD661lQoFzA">
            <conditionalBlocks id="_qkGAqb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGAor34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qkGAob34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGApL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qkGAo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGApr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qkGApb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAqL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qkGAp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qkGAsr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGAq734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qkGAqr34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGArb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qkGArL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qkGArr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAsb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qkGAsL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qkGAu734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGAtL34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qkGAs734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGAtr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qkGAtb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qkGAt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qkGAub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qkGA2L34EequD661lQoFzA" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_qkGAoL34EequD661lQoFzA">
            <conditionalBlocks id="_qkGAxb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGAvr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qkGAvb34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGAwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qkGAv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qkGAwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qkGAw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qkGAzr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGAx734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qkGAxr34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGAyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qkGAyL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAy734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qkGAyr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGAzb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qkGAzL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qkGA1734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_qkGAoL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkGA0L34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qkGAz734EequD661lQoFzA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkGA0r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qkGA0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGA1L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qkGA0734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkGA1r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_qkGAoL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qkGA1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGA2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_qkGAoL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_qkGA2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.11 //@resources.0/@pous.12 //@resources.0/@pous.3 //@resources.0/@pous.4 //@resources.0/@pous.1" callers="//@resources.0/@pous.31" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_qkGn3734EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qkGn4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qkGn3734EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn4b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn4734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn5r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="61" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn5b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn6L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="47" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn5734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn6b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qkGn7L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qkGn3734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qkGn6734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_qkGA4734EequD661lQoFzA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkGA5L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qkGA4734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkGA5734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qkGA4734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGA5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGA5r34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_qkGA6L34EequD661lQoFzA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_qkGA6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qkGA6L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkGA6b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qkGA6734EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkGA7b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qkGA6734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGA7L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qkGnsL34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkGnsr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkGnsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGntL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkGns734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGntr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkGntb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_qkGnt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_qkGnub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qkGnu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qkGnvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qkGnv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qkGnwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qkGnw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGnxr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_qkGnsL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qkGnxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_qkGnx734EequD661lQoFzA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_qkGnyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qkGnx734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkGnyL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_qkGnyr34EequD661lQoFzA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_qkGnzL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qkGnyr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkGny734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_qkGnzb34EequD661lQoFzA" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_qkGnz734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qkGnzb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkGnzr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_qkGn0L34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkGn0734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qkGn0L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGn0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGn0r34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_qkGn1L34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkGn1734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qkGn1L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGn1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkGn1r34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_qkGn2L34EequD661lQoFzA" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qkGn2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qkGn2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qkGn2b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGn3L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_qkGn2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qkGn2734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkGn3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_qkGn2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qkGn3b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.5"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.29 //@resources.0/@pous.22 //@resources.0/@pous.23 //@resources.0/@pous.30 //@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.25 //@resources.0/@pous.24 //@resources.0/@pous.27" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.2" local_ID="6" stepLevel="2"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.3 //@resources.0/@pous.31/@implementations.0/@transitions.4" local_ID="9" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.5 //@resources.0/@pous.31/@implementations.0/@transitions.6" local_ID="17" stepLevel="4"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.7" local_ID="25" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.8" local_ID="28" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.31/@implementations.0/@transitions.9" local_ID="31" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.3" local_ID="8"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.4" local_ID="12"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.5" local_ID="14"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.0" local_ID="22"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.6" local_ID="27"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.7" local_ID="30"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.31/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.31/@implementations.0/@steps.0" local_ID="33"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_qkGn7b34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_qkGn7734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="209" structuredText="_qkGn7b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qkGn7r34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_qkHOwL34EequD661lQoFzA" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton;">
          <statements xsi:type="ST:Assignment" id="_qkHOwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="115" structuredText="_qkHOwL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qkHOwb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_qkHOw734EequD661lQoFzA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_qkHOxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_qkHOw734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkHOxL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOx734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOyL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOyb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOyr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHOy734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_qkHOw734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_qkHOzL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();">
          <statements xsi:type="ST:Assignment" id="_qkHOzr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="209" structuredText="_qkHOzL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qkHOzb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkHO0L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="89" structuredText="_qkHOzL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qkHOz734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO0b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="28" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO0r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="28" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO0734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO1L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="43" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO1b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO1r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO1734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="37" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO2L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="31" structuredText="_qkHOzL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_qkHO2b34EequD661lQoFzA" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qkHO2734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_qkHO2b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_qkHO2r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO3b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO3r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO3734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO4b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qkHO2b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_qkHO4r34EequD661lQoFzA" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qkHO5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qkHO4r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkHO4734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO5b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO5r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO5734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO6L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO6b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkHO6r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qkHO4r34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_qkHO6734EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_qkHO7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="209" structuredText="_qkHO6734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qkHO7L34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkHO7734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="115" structuredText="_qkHO6734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qkHO7r34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_qkHO-b34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_qkHO6734EequD661lQoFzA">
            <conditionalBlocks id="_qkHO-L34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_qkHO6734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qkHO8b34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qkHO8L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qkHO8734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_qkHO6734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qkHO8r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkHO9b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_qkHO6734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qkHO9L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qkHO9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_qkHO6734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qkHO9r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_qkH10L34EequD661lQoFzA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkH10r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_qkH10L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qkH10b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkH11L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_qkH10L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qkH10734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH11r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH11b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH12L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH11734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH12r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH12b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH13L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH12734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH13r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH13b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH14L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH13734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH14r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH14b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH15L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH14734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH15r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH15b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH16L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH15734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH16r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH16b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH17L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH16734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH17r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH17b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH18L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH17734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH18r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH18b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH19L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH18734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH19r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH19b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH1-L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH19734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH1-r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH1-b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH1_L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH1-734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH1_r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH1_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2AL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH1_734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Ar34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Ab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2BL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2A734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Br34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Bb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2CL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2B734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Cr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Cb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2DL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2C734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Dr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Db34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2EL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2D734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Er34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Eb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2FL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2E734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Fr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Fb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2GL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2F734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Gr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Gb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2HL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2G734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Hr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Hb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2IL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_qkH10L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2H734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Ir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Ib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2JL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2I734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Jr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Jb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2KL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2J734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Kr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Kb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2LL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2K734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2Lr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2Lb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkH2ML34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_qkH10L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkH2L734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkH2Mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_qkH10L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qkH2Mb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_qkH2M734EequD661lQoFzA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkH2Nb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qkH2M734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qkH2NL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkH2N734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qkH2M734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkH2Nr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_qkIc4L34EequD661lQoFzA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc4r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc4b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc5L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc4734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc5r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc6L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc5734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc6r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc6b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc7L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc6734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc7r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc7b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc8L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc7734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc8r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc8734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc9L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc9b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIc9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIc9r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc-b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc-L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc-734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc-r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc_b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc_L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIc_734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIc_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdAb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdAL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdA734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdAr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdBL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdBb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdBr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdB734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdCr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdCb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdDL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdC734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdDr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdDb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdEL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdD734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdEb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdEr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdFb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdFL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdF734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdFr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdGb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdGL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdG734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdGr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdHL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdHb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdHr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdIb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdIL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdI734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdIr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdJb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdJ734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdJr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdKL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdK734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdLb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdLL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdL734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdLr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdMb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdM734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdNb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdNL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdNr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdOb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdO734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdOr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdPb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdPL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdP734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdPr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdQL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdQ734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_qkIc4L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdQr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdRb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdRL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdR734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdRr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdSb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdS734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdSr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdTb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdT734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdTr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdUb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdUL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qkIdU734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_qkIc4L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qkIdUr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdVb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdVL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qkIdVr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_qkIc4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qkIdWL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_qkIdWr34EequD661lQoFzA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qkIdXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qkIdWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qkIdW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qkIdXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qkIdWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_qkIdX734EequD661lQoFzA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qkIdYb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qkIdX734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qkIdYL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.31/@actions.13/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.31/@actions.13/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.1"/>
          </steps>
          <steps name="EmergencyChecking" incomingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.14/@implementation/@transitions.6" local_ID="29" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.10" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.4 //@resources.0/@pous.31/@actions.14/@implementation/@steps.5 //@resources.0/@pous.31/@actions.14/@implementation/@steps.6 //@resources.0/@pous.31/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.9 //@resources.0/@pous.31/@actions.14/@implementation/@steps.10" targetStep="//@resources.0/@pous.31/@actions.14/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
  </resources>
</C:Configuration>

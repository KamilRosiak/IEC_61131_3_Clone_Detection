<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario23">
  <resources name="Scenario23">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.37" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PPU_EngineStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_qmNggL34EequD661lQoFzA" text="xPPU();&#xA;xPPU.Stack();&#xA;xPPU.Crane();&#xA;xPPU.Stamp();&#xA;xPPU.LargeSortingConveyor();&#xA;xPPU.PicAlphaConveyor();&#xA;xPPU.SmallSortingConveyor();&#xA;xPPU.RefillConveyor();&#xA;xPPU.PicAlpha();&#xA;xPPU.SafetyDoor();&#xA;xPPU.LightGrid();&#xA;&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := xPPU.Crane.Table.AtStack.DI_SwitchTrue AND xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;//PPU&#xA;&#x9;PPU_EngineStop := xPPU.ManuelMode;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNggb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="6" structuredText="_qmNggL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNggr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="12" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgg734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="12" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNghL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="12" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNghb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="27" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNghr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="23" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="27" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="15" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="17" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmNgi734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="16" structuredText="_qmNggL34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LightGrid"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="91" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_qmNgjL34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="42" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgjr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgkr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNglb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmNglL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmNglr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgmr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="47" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="47" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgoL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="53" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="71" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="103" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="45" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgrb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="73" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgrL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="1" endColumnPos="59" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgrr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgsb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgsL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgs734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgsr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgtb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgtL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgtr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmNguL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgu734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgur34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgvb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="72" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgvL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgv734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="66" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgvr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgwb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="63" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgwL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="61" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgwr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="51" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgxL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgx734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="53" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgxr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="4" endColumnPos="54" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgyL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgy734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgyr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgzb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="46" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgzL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNgz734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmNgzr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg0b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg0L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="52" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg0r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="50" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg1L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg1734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="42" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg1r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg2b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="58" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg2L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg2734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="72" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg2r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg3b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="129" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_qmNg3L34EequD661lQoFzA" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg3734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="67" absEndLine="67" relStartLine="67" relEndLine="67" startColumnPos="1" endColumnPos="89" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg3r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" startColumnPos="1" endColumnPos="122" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg4L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg4734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="94" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg4r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg5b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="108" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg5L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg5734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="113" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg5r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg6b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="73" absEndLine="73" relStartLine="73" relEndLine="73" startColumnPos="1" endColumnPos="70" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg6L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg6734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="102" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg6r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="90" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg7L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg7734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="96" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg7r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg8b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="85" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qmNg8L34EequD661lQoFzA" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg8734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="90" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg8r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg9b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="96" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg9L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="114" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg9r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="70" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg-L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="100" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg-r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="94" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg_L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNg_734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="106" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNg_r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="88" absEndLine="88" relStartLine="88" relEndLine="88" startColumnPos="1" endColumnPos="112" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhAL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhA734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" startColumnPos="1" endColumnPos="108" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhAr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="90" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhBL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="96" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhBr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="94" absEndLine="94" relStartLine="94" relEndLine="94" startColumnPos="1" endColumnPos="88" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhCL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="95" absEndLine="95" relStartLine="95" relEndLine="95" startColumnPos="1" endColumnPos="121" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhCr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="78" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhDL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="108" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhDr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="113" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhEL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="100" absEndLine="100" relStartLine="100" relEndLine="100" startColumnPos="1" endColumnPos="102" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhEr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="101" absEndLine="101" relStartLine="101" relEndLine="101" startColumnPos="1" endColumnPos="70" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhFL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="88" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhFr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="94" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhGL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="150" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qmNhGr34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="107" absEndLine="107" relStartLine="107" relEndLine="107" startColumnPos="1" endColumnPos="88" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhHL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="108" absEndLine="108" relStartLine="108" relEndLine="108" startColumnPos="1" endColumnPos="112" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhHr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="66" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhIL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="96" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhIr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="102" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhJL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="108" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhJr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="114" absEndLine="114" relStartLine="114" relEndLine="114" startColumnPos="1" endColumnPos="58" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhKL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="115" absEndLine="115" relStartLine="115" relEndLine="115" startColumnPos="1" endColumnPos="104" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhKr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="118" absEndLine="118" relStartLine="118" relEndLine="118" startColumnPos="1" endColumnPos="78" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhLL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="119" absEndLine="119" relStartLine="119" relEndLine="119" startColumnPos="1" endColumnPos="103" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhLr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="54" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhML34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="122" absEndLine="122" relStartLine="122" relEndLine="122" startColumnPos="1" endColumnPos="78" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhMr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="124" absEndLine="124" relStartLine="124" relEndLine="124" startColumnPos="1" endColumnPos="34" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhNL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmNhN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="130" absEndLine="130" relStartLine="130" relEndLine="130" startColumnPos="1" endColumnPos="78" structuredText="_qmNggL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmNhNr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="InductiveSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_InductiveSwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stopped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningClockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningCounterclockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="AI_Position" scope="VAR_OUTPUT" type="UINT" typeName="UINT">
          <location type="I" dataType="None"/>
        </outputVariables>
        <outputVariables name="AI_Speed" scope="VAR_OUTPUT" type="UDINT" typeName="UDINT">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_qmNhOL34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmNhOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmNhOL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhOb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmNhOL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_qmNhOL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmNhPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qmNhOL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qmNhOL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhQb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_qmNhQ734EequD661lQoFzA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmNhRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmNhQ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhRL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmNhQ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhRr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qmNhQ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmNhSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_qmNhQ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhSr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qmNhQ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_qmNhTr34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmNhUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmNhTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhT734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_qmNhTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qmNhTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmNhU734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qmNhTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmNhWL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_qmNhTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmNhV734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_qmOHnL34EequD661lQoFzA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;">
        <statements xsi:type="ST:Assignment" id="_qmOHnr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmOHnL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qmOHnb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHoL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qmOHnL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmOHn734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHor34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qmOHnL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qmOHob34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHpL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmOHnL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmOHo734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qmOHkL34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmOHkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qmOHkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmOHkb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qmOHk734EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmOHlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmOHk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmOHlL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_qmOHlr34EequD661lQoFzA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmOHmL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmOHlr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qmOHl734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_qmOHmb34EequD661lQoFzA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmOHm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qmOHmb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qmOHmr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.32 //@resources.0/@pous.33" identifier="OperationPanelExtended" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanelExtended">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StopButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ResetButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Reset" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanelExtended" id="_qmOHsb34EequD661lQoFzA" text="EmergencyStop := NOT DI_StopButton;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;&#xA;Reset := DI_ResetButton;">
        <statements xsi:type="ST:Assignment" id="_qmOHs734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qmOHsb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qmOHsr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StopButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHtb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qmOHsb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmOHtL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qmOHsb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qmOHtr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmOHsb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmOHuL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmOHu734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="23" structuredText="_qmOHsb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Reset"/>
          <right xsi:type="STE:VariableExpression" id="_qmOHur34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ResetButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qmOHpb34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmOHp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qmOHpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmOHpr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qmOHqL34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmOHqr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmOHqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmOHqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_Off" id="_qmOHq734EequD661lQoFzA" text="DO_LampReset:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmOHrb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmOHq734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qmOHrL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_On" id="_qmOHrr34EequD661lQoFzA" text="DO_LampReset:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmOHsL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qmOHrr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qmOHr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.29" identifier="PositionTransmitter" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PositionTransmitter">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_PositionReached" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="Potentiometer" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Potentiometer">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_Position" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="delta" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmOHvL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
        </internalVariables>
        <internalVariables name="iPosStack" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmOHvb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="24310"/>
        </internalVariables>
        <internalVariables name="iPosConveyor" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmOHvr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="15930"/>
        </internalVariables>
        <internalVariables name="iPosStamp" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmOHv734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7845"/>
        </internalVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Potentiometer" id="_qmOuoL34EequD661lQoFzA" text="IF((iPosStack-delta) &lt; AI_Position AND AI_Position &lt; (iPosStack+delta)) THEN&#xA;&#x9;AtStack := TRUE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;ELSIF((iPosConveyor-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyor+delta)) THEN&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := TRUE;&#xA;&#x9;AtStamp := FALSE;&#xA;ELSIF((iPosStamp-delta) &lt; AI_Position AND AI_Position &lt; (iPosStamp+delta)) THEN&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := TRUE;&#xA;ELSE&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtStamp := FALSE;&#x9;&#xA;END_IF">
        <statements xsi:type="ST:If" id="_qmOuyb34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="17" relStartLine="1" relEndLine="17" endColumnPos="5" structuredText="_qmOuoL34EequD661lQoFzA">
          <conditionalBlocks id="_qmOuq734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="4" relStartLine="1" relEndLine="4" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmOupL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmOuo734EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOuob34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOuor34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmOupr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="16" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmOupb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOuqL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="20" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmOup734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOuqr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmOuqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmOutr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="5" absEndLine="8" relStartLine="5" relEndLine="8" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmOur734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmOurr34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOurL34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOurb34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmOusb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmOusL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOus734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="19" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmOusr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOutb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmOutL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmOuwb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="9" absEndLine="12" relStartLine="9" relEndLine="12" endColumnPos="16" structuredText="_qmOuoL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmOuur34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmOuub34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOut734EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmOuuL34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmOuvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmOuu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOuvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmOuvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOuwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="16" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmOuv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmOuyL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="13" absEndLine="16" relStartLine="13" relEndLine="16" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
            <substatements xsi:type="ST:Assignment" id="_qmOuw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmOuwr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOuxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="20" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmOuxL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmOux734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="17" structuredText="_qmOuoL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmOuxr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.36" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.12" callers="//@resources.0/@pous.28 //@resources.0/@pous.34" identifier="Ramp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="RampFull" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <comment identifier="Ramp">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28" identifier="RFID" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="bAntenneOn" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RFID">
          <statements>//Read old data</statements>
          <statements>//write new Data</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//IO_Link Port2_out Antenna on(0)/off(255)</statements>
          <statements>//IO_Link Port2_in UID Byte 0 = 224</statements>
          <statements>//IO_Link Port2_in UID Byte 4</statements>
          <statements>//IO_Link Port2_in UID Byte 5</statements>
          <statements>//IO_Link Port2_in UID Byte 6</statements>
          <statements>//IO_Link Port2_in UID Byte 7</statements>
          <statements>//IO_Link Port2_out Reserved</statements>
          <statements>//IO_Link Port2_out Reserved_1</statements>
          <statements>//IO_Link Port2_out Reserved_2</statements>
          <statements>//IO_Link Port2_out Reserved_3</statements>
          <statements>//IO_Link Port2_out Reserved_4</statements>
          <statements>//IO_Link Port2_out Reserved_5</statements>
          <statements>//IO_Link Port2_out Reserved_6</statements>
        </comment>
        <internalVariables name="Antenne_On" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WP_Available" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="ReadData_1" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="ReadData_2" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="ReadData_3" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="ReadData_4" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write1" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write2" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write3" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write4" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write5" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Write6" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="F1" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F2" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F3" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F4" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F5" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F6" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <internalVariables name="F7" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
        </internalVariables>
        <outputVariables xsi:type="C:ArrayVariable" name="aRfidData_old" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE" array="true">
          <location/>
          <lowerBound xsi:type="STE:Literal" id="_qmPVsL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          <upperBound xsi:type="STE:Literal" id="_qmPVsb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
        </outputVariables>
        <outputVariables xsi:type="C:ArrayVariable" name="aRfidData_new" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE" array="true">
          <location/>
          <lowerBound xsi:type="STE:Literal" id="_qmPVsr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          <upperBound xsi:type="STE:Literal" id="_qmPVs734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RFID" id="_qmP8wL34EequD661lQoFzA" text="IF(bAntenneOn)THEN&#xA;&#x9;Antenne_On := 0;&#xA;ELSE&#xA;&#x9;Antenne_On := 255;&#xA;END_IF&#xA;&#xA;IF(WP_Available=224)THEN&#xA;&#x9;//Read old data&#xA;&#x9;aRfidData_old[1] := ReadData_1;&#xA;&#x9;aRfidData_old[2] := ReadData_2;&#xA;&#x9;aRfidData_old[3] := ReadData_3;&#xA;&#x9;aRfidData_old[4] := ReadData_4;&#xA;&#x9;&#xA;&#x9;//write new Data&#xA;&#x9;Write := F1;&#xA;&#x9;Write1 := F2;&#xA;&#x9;Write2 := F3;&#xA;&#x9;Write3 := F4;&#xA;&#x9;Write4 := F5;&#xA;&#x9;Write5 := F6;&#xA;&#x9;Write6 := F7;&#xA;&#x9;&#xA;&#x9;aRfidData_new[1] := ReadData_1;&#xA;&#x9;aRfidData_new[2] := ReadData_2;&#xA;&#x9;aRfidData_new[3] := ReadData_3;&#xA;&#x9;aRfidData_new[4] := ReadData_4;&#xA;END_IF">
        <statements xsi:type="ST:If" id="_qmP8yb34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="5" relStartLine="1" relEndLine="5" endColumnPos="5" structuredText="_qmP8wL34EequD661lQoFzA">
          <conditionalBlocks id="_qmP8xb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="2" relStartLine="1" relEndLine="2" endColumnPos="16" structuredText="_qmP8wL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmP8wr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:VariableExpression" id="_qmP8wb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="bAntenneOn"/>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmP8xL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="16" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Antenne_On"/>
              <right xsi:type="STE:Literal" id="_qmP8w734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmP8yL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="4" relStartLine="3" relEndLine="4" endColumnPos="18" structuredText="_qmP8wL34EequD661lQoFzA">
            <substatements xsi:type="ST:Assignment" id="_qmP8x734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="18" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Antenne_On"/>
              <right xsi:type="STE:Literal" id="_qmP8xr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="255"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_qmP88734EequD661lQoFzA" statementType="IF" absStartLine="7" absEndLine="27" relStartLine="7" relEndLine="27" endColumnPos="5" structuredText="_qmP8wL34EequD661lQoFzA">
          <conditionalBlocks id="_qmP88r34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="26" relStartLine="7" relEndLine="26" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmP8y734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmP8yr34EequD661lQoFzA" operator="EQUAL">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WP_Available"/>
                <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="224"/>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmP8zr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_old">
                <arrayIndices xsi:type="STE:Literal" id="_qmP8zL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP8zb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_1"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP80b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_old">
                <arrayIndices xsi:type="STE:Literal" id="_qmP8z734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP80L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_2"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP81L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_old">
                <arrayIndices xsi:type="STE:Literal" id="_qmP80r34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP80734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_3"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP81734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_old">
                <arrayIndices xsi:type="STE:Literal" id="_qmP81b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP81r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_4"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP82b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="12" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write"/>
              <right xsi:type="STE:VariableExpression" id="_qmP82L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F1"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP82734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write1"/>
              <right xsi:type="STE:VariableExpression" id="_qmP82r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F2"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP83b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write2"/>
              <right xsi:type="STE:VariableExpression" id="_qmP83L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F3"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP83734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write3"/>
              <right xsi:type="STE:VariableExpression" id="_qmP83r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F4"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP84b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write4"/>
              <right xsi:type="STE:VariableExpression" id="_qmP84L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F5"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP84734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write5"/>
              <right xsi:type="STE:VariableExpression" id="_qmP84r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F6"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP85b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="13" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Write6"/>
              <right xsi:type="STE:VariableExpression" id="_qmP85L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="F7"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP86L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_new">
                <arrayIndices xsi:type="STE:Literal" id="_qmP85r34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP85734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_1"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP86734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_new">
                <arrayIndices xsi:type="STE:Literal" id="_qmP86b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP86r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_2"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP87r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_new">
                <arrayIndices xsi:type="STE:Literal" id="_qmP87L34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP87b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_3"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmP88b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="31" structuredText="_qmP8wL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="aRfidData_new">
                <arrayIndices xsi:type="STE:Literal" id="_qmP87734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
              </left>
              <right xsi:type="STE:VariableExpression" id="_qmP88L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReadData_4"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Switch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Switch">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.4 //@resources.0/@pous.11 //@resources.0/@pous.3" callers="//@resources.0/@pous.26" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="Motor" scope="VAR" type="DERIVED" typeName="Motor">
          <location/>
        </internalVariables>
        <internalVariables name="AtStack" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyor" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStamp" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="Potentiometer" scope="VAR" type="DERIVED" typeName="Potentiometer">
          <location/>
        </internalVariables>
        <internalVariables name="AtStackInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenStackConveyor" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyorInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenConveyorStamp" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStampInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.28" identifier="UltrasonicSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_UltraSonic" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.26" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.29" identifier="VacuumGripperExtended" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripperExtended">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="VacuumHit" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn AND TurnVacuumOff.t>T#250ms" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_TakenIn" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_qmQj0L34EequD661lQoFzA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmQj0r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmQj0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qmQj0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_qmQj0734EequD661lQoFzA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmQj1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmQj0734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qmQj1L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.37" identifier="ValveBlock" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_BlockPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_BlockadeBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_BlockadeBlockPressure" id="_qmQj1r34EequD661lQoFzA" text="DO_BlockPressure := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmQj2L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmQj1r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_BlockPressure"/>
            <right xsi:type="STE:Literal" id="_qmQj1734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ReleaseBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReleaseBlockPressure" id="_qmQj2b34EequD661lQoFzA" text="DO_BlockPressure := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmQj2734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmQj2b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_BlockPressure"/>
            <right xsi:type="STE:Literal" id="_qmQj2r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.35" identifier="WeightModule" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_WPWeight" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.20 //@resources.0/@pous.18 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_qmRLH734EequD661lQoFzA" text="Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Table.Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qmRLIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="47" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLIL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="51" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLIr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLJL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="57" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLJr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="75" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLKL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="107" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLKr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLLL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLLr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="77" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLML34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="69" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLMr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmRLNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="39" structuredText="_qmRLH734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmRLNL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmRx8b34EequD661lQoFzA" statementType="IF" absStartLine="12" absEndLine="14" relStartLine="12" relEndLine="14" endColumnPos="5" structuredText="_qmRLH734EequD661lQoFzA">
          <conditionalBlocks id="_qmRx8L34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="12" absEndLine="13" relStartLine="12" relEndLine="13" endColumnPos="23" structuredText="_qmRLH734EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmRLNr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmRLN734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="23" structuredText="_qmRLH734EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </invokingVariable>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_qmQj3L34EequD661lQoFzA" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmQj3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qmQj3L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmQj3b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_qmQj3734EequD661lQoFzA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmQj4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qmQj3734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmQj4L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmRK4L34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmRK4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmRK4b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmRK4734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK5r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRK5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK6L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRK5734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qmRK6b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK7L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qmRK6734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK7r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_qmRK7b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK8L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_qmRK7734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK8r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_qmRK8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK9L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qmRK8734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK9r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qmRK9b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmRK9734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK-r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qmRK-b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK_L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qmRK-734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRK_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_qmRK4L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qmRK_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_qmRK_734EequD661lQoFzA" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmRLAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qmRK_734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRLAL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_qmRLAr34EequD661lQoFzA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmRLBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qmRLAr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRLA734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_qmRLBb34EequD661lQoFzA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qmRLB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLBr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLCL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLCr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLDL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLDr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qmRLBb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLEL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_qmRLEr34EequD661lQoFzA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qmRLFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLFb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLF734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLGb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLG734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRLHr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qmRLEr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qmRLHb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC.t>T#8s AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_Clockwise_MTM.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTS" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTS.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@inputVariables.4"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Turn_On_Vacuum_PWU.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPLight.t>T#0ms" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPMedium.t>T#1000ms" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPHeavy.t>T#2000ms" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.12" local_ID="6" stepLevel="2"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.10 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.11" local_ID="31" stepLevel="10"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.22" local_ID="41" stepLevel="3"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.14" local_ID="45" stepLevel="4"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.15" local_ID="48" stepLevel="5"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.16" local_ID="51" stepLevel="6"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.17" local_ID="54" stepLevel="7"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.18" local_ID="57" stepLevel="8"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.19 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.20" local_ID="60" stepLevel="9"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.21" local_ID="68" stepLevel="10"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.23" local_ID="73" stepLevel="4"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="Short_Delay.t>T#50ms" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.9" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.10" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" local_ID="34"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.10" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.19" local_ID="36"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.13" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.14" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.15" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.16" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.17" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.18" local_ID="63"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.17" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="65"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.18" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="70"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.19" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="75"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.10"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.13 //@resources.0/@pous.38 //@resources.0/@pous.39 //@resources.0/@pous.40 //@resources.0/@pous.41 //@resources.0/@pous.42 //@resources.0/@pous.43 //@resources.0/@pous.44 //@resources.0/@pous.45" callers="//@resources.0/@pous.37" identifier="EnergyMonitor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="EnergyMonitor">
          <statements>//Hardware Input Variables</statements>
          <statements>//Hardware Output Variables</statements>
        </comment>
        <internalVariables name="BK_1_6_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_2_3_7_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_4_5_8_9_10_11_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_80l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_120l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor_4bar" scope="VAR" type="DERIVED" typeName="PressureSensor_4bar">
          <location/>
        </internalVariables>
        <internalVariables name="Flow_2to200l_min" scope="VAR" type="DERIVED" typeName="FlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="Transducer_0to10AC_0to10V" scope="VAR" type="DERIVED" typeName="A_to_V_Transducer">
          <location/>
        </internalVariables>
        <internalVariables name="ExtSensor_0to10V" scope="VAR" type="DERIVED" typeName="V_Sensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor" scope="VAR" type="DERIVED" typeName="PressureSensor">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_left" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_right" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="ChangeoverMagnetVaveRelay" scope="VAR" type="DERIVED" typeName="MagnetValve">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.12 //@resources.0/@pous.9 //@resources.0/@pous.2 //@resources.0/@pous.15 //@resources.0/@pous.19 //@resources.0/@pous.17 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="OptBeginning" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_qmSZAL34EequD661lQoFzA" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmSZAb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qmSZAL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmSZAr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qmSZAL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZA734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZBr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="30" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZBb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZB734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZCr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="36" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZCb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZDL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="74" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZC734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZDr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="96" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZDb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZEL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="120" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZD734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmSZEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="39" structuredText="_qmSZAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmSZEb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmSZFr34EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="13" relStartLine="11" relEndLine="13" endColumnPos="5" structuredText="_qmSZAL34EequD661lQoFzA">
          <conditionalBlocks id="_qmSZFb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="12" relStartLine="11" relEndLine="12" endColumnPos="17" structuredText="_qmSZAL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmSZE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmSZFL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="17" structuredText="_qmSZAL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qmRx8r34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmRx9L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qmRx8r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRx8734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmRx9b34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmRx9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmRx9r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRx-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmRx-L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRx-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRx-r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRx_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmRx_L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRx_734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qmRx_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qmRyAL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyA734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qmRyAr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qmRyBL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qmRyBr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qmRyCL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmRyCr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_qmRyDL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qmRyDr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_qmRyEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmRyE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_qmRx9b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_qmRyEr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qmRyFL34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmRyFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qmRyFL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmRyFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_qmRyF734EequD661lQoFzA" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_qmRyGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmRyF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qmRyGL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qmRyGr34EequD661lQoFzA" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_qmRyHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmRyGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qmRyG734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qmRyHb34EequD661lQoFzA" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_qmRyH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmRyHb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmRyHr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qmRyIL34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qmRyIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmRyIL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qmRyIb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_qmRyI734EequD661lQoFzA" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_qmRyJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmRyI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qmRyJL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_qmRyJr34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_qmRyKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmRyJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qmRyJ734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_qmRyKb34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_qmRyK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmRyKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qmRyKr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.20" local_ID="21" stepLevel="6"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7" local_ID="25" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="26" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" local_ID="30" stepLevel="8"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.11" local_ID="38" stepLevel="7"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.17" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" local_ID="60" stepLevel="8"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" local_ID="68" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="69" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.15 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.19 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.22" local_ID="74" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="76" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="35"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" local_ID="37"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="52"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" local_ID="59"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" local_ID="67"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="72"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" local_ID="79"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.6 //@resources.0/@pous.21 //@resources.0/@pous.5" callers="//@resources.0/@pous.37" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_qmTAEL34EequD661lQoFzA" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qmTAEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qmTAEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmTAEb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTAFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_qmTAEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmTAE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTAFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="39" structuredText="_qmTAEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmTAFb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmTAGr34EequD661lQoFzA" statementType="IF" absStartLine="4" absEndLine="6" relStartLine="4" relEndLine="6" endColumnPos="5" structuredText="_qmTAEL34EequD661lQoFzA">
          <conditionalBlocks id="_qmTAGb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="17" structuredText="_qmTAEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmTAF734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmTAGL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="17" structuredText="_qmTAEL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmSZF734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmSZGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmSZGL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmSZGr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmSZHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qmSZHr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qmSZIL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_qmSZIr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_qmSZJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_qmSZJr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmSZKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_qmSZF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_qmSZKL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_qmTnIL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qmTnIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnIb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTnJL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnI734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTnJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnJb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTnKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnJ734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTnKr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnKb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmTnLL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="39" structuredText="_qmTnIL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmTnK734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmTnML34EequD661lQoFzA" statementType="IF" absStartLine="7" absEndLine="9" relStartLine="7" relEndLine="9" endColumnPos="5" structuredText="_qmTnIL34EequD661lQoFzA">
          <conditionalBlocks id="_qmTnL734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="8" relStartLine="7" relEndLine="8" endColumnPos="17" structuredText="_qmTnIL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmTnLb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmTnLr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_qmTnIL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_qmTAG734EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs+1;">
          <statements xsi:type="ST:Assignment" id="_qmTAHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qmTAG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qmTAHL34EequD661lQoFzA" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qmTAHr34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qmTAIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qmTAHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qmTAH734EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qmTAIb34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTAI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmTAIb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTAIr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qmTAJL34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTAJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qmTAJL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTAJb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmTAJ734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTAKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTAKL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTAKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTALb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTALL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTALr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTAML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qmTAMr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTANb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qmTANL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTANr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_qmTAOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAO734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_qmTAOr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTAPb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_qmTAJ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTAPL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qmTAPr34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmTAQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qmTAPr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTAP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qmTAQb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmTAQ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qmTAQb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTAQr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_qmUOML34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qmUOMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOMb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUONL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOM734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUONr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qmUONb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmUON734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOOb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOO734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_qmUOML34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOPb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmUOQr34EequD661lQoFzA" statementType="IF" absStartLine="8" absEndLine="10" relStartLine="8" relEndLine="10" endColumnPos="5" structuredText="_qmUOML34EequD661lQoFzA">
          <conditionalBlocks id="_qmUOQb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="17" structuredText="_qmUOML34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmUOP734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmUOQL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_qmUOML34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qmTnMb34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qmTnM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qmTnMb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qmTnMr34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qmTnNL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTnNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmTnNL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTnNb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qmTnN734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTnOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qmTnN734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmTnOr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTnPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTnO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTnPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnQb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnRL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTnQ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnRr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qmTnRb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnSL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qmTnR734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmTnSr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qmTnOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qmTnSb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_qmTnS734EequD661lQoFzA" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmTnTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qmTnS734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qmTnTr34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmTnUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qmTnTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmTnT734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qmTnUb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmTnU734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qmTnUb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnUr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_qmTnVL34EequD661lQoFzA" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_qmTnVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qmTnVL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qmTnVb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_qmTnV734EequD661lQoFzA" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmTnWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qmTnV734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmTnWL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_qmUOQ734EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmUORL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qmUOQ734EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUORr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmUOQ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmUORb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOSL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qmUOQ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOR734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOSr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qmUOQ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOSb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOTL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qmUOQ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOS734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="LightGrid" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="LightGrid">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LightGrid" id="_qmUOTb34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmUOTr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qmUOTb34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmUOTb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOT734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qmUOTb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qmUOTb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOU734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmUOVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qmUOTb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmUOVb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.17 //@resources.0/@pous.6 //@resources.0/@pous.15" callers="//@resources.0/@pous.37" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_qmU1QL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qmU1Qr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_qmU1QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmU1Qb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmU1RL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_qmU1QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmU1Q734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmU1Rr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_qmU1QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmU1Rb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmU1SL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_qmU1QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmU1R734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmU1Sr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="39" structuredText="_qmU1QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmU1Sb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qmU1Tr34EequD661lQoFzA" statementType="IF" absStartLine="6" absEndLine="8" relStartLine="6" relEndLine="8" endColumnPos="5" structuredText="_qmU1QL34EequD661lQoFzA">
          <conditionalBlocks id="_qmU1Tb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="17" structuredText="_qmU1QL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qmU1S734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qmU1TL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="17" structuredText="_qmU1QL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qmUOV734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmUOWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmUOV734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmUOWL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmUOWr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmUOXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmUOW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmUOXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmUOX734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmUOYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qmUOY734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOZr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qmUOZb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOaL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qmUOZ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qmUOab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUObL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qmUOa734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUObr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qmUObb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOcL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmUOb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOcr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qmUOcb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_qmUOc734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmUOdr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_qmUOWr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qmUOdb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qmUOd734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmUOeb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qmUOd734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qmUOeL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qmUOer34EequD661lQoFzA" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_qmUOfL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmUOer34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qmUOe734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qmUOfb34EequD661lQoFzA" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_qmUOf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmUOfb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmUOfr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qmUOgL34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qmUOgr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmUOgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qmUOgb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.7 //@resources.0/@pous.4 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.25" callers="//@resources.0/@pous.37" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_qmVcoL34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmVcob34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qmVcoL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmVco734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmVcoL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmVcor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmVcpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qmVcoL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmVcpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmVcp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qmVcoL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmVcpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmVcqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qmVcoL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmVcqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmVcq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="47" structuredText="_qmVcoL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qmVcqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qmU1T734EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmU1Ub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qmU1T734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmU1UL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmVcUL34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmVcUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmVcUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmVcU734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qmVcVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcWL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qmVcV734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcWr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmVcWb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qmVcW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qmVcXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_qmVcUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qmVcX734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_qmVcYb34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmVcZL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qmVcYb34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmVcYr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmVcY734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_qmVcZb34EequD661lQoFzA" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_qmVcgb34EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_qmVcZb34EequD661lQoFzA">
            <conditionalBlocks id="_qmVcbr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVcZ734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmVcZr34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVcab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qmVcaL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVca734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qmVcar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qmVcbL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmVcd734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVccL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmVcb734EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVccr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qmVccb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qmVcc734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcdr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qmVcdb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmVcgL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVceb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qmVceL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVce734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qmVcer34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qmVcfL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qmVcfr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmVcnb34EequD661lQoFzA" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_qmVcZb34EequD661lQoFzA">
            <conditionalBlocks id="_qmVcir34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVcg734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmVcgr34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVchb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qmVchL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVch734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qmVchr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qmVciL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmVck734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVcjL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmVci734EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVcjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qmVcjb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVckL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qmVcj734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVckr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qmVckb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmVcnL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_qmVcZb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmVclb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmVclL34EequD661lQoFzA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmVcl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qmVclr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qmVcmL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmVcm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_qmVcZb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qmVcmr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmVcn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_qmVcZb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_qmVcnr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.13 //@resources.0/@pous.14 //@resources.0/@pous.4 //@resources.0/@pous.5 //@resources.0/@pous.1" callers="//@resources.0/@pous.37" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_qmWDmr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmWDm734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qmWDmr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDoL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="61" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmWDq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="47" structuredText="_qmWDmr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmWDqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_qmWDYL34EequD661lQoFzA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWDYb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qmWDYL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWDZL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qmWDYL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDYr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDY734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_qmWDZb34EequD661lQoFzA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_qmWDZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qmWDZb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmWDZr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qmWDaL34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWDar34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qmWDaL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qmWDa734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmWDbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmWDbL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDb734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmWDbr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDcb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmWDcL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDc734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_qmWDcr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_qmWDdL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qmWDdr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDeb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qmWDeL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDe734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qmWDer34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qmWDfL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qmWDfr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_qmWDa734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qmWDgL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_qmWDgr34EequD661lQoFzA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_qmWDhL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qmWDgr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmWDg734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_qmWDhb34EequD661lQoFzA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_qmWDh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qmWDhb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmWDhr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_qmWDiL34EequD661lQoFzA" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_qmWDir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qmWDiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmWDib34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_qmWDi734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWDjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qmWDi734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDjL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDjb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_qmWDj734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWDkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qmWDj734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDkL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmWDkb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_qmWDk734EequD661lQoFzA" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qmWDlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qmWDk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qmWDlL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_qmWDk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qmWDlr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWDmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_qmWDk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qmWDmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" actionVariable="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.35 //@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.36 //@resources.0/@pous.31 //@resources.0/@pous.34 //@resources.0/@pous.30 //@resources.0/@pous.29 //@resources.0/@pous.32 //@resources.0/@pous.33 //@resources.0/@pous.27 //@resources.0/@pous.24" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="LightGrid" scope="VAR_INPUT" type="DERIVED" typeName="LightGrid">
          <location/>
        </inputVariables>
        <inputVariables name="EngergyMonitoringHardware" scope="VAR_INPUT" type="DERIVED" typeName="EnergyMonitor">
          <location/>
        </inputVariables>
        <inputVariables name="Block_LSCSep1_LSCSep2" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_SSC_PAC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stack_Crane" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stamp_RC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="DI_NO_EMERGENCY" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2 //@resources.0/@pous.37/@implementations.0/@transitions.3" local_ID="6" stepLevel="2"/>
        <steps name="ManuelMode_active" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.4" local_ID="12" stepLevel="3"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5 //@resources.0/@pous.37/@implementations.0/@transitions.6 //@resources.0/@pous.37/@implementations.0/@transitions.7" local_ID="17" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8 //@resources.0/@pous.37/@implementations.0/@transitions.9 //@resources.0/@pous.37/@implementations.0/@transitions.10" local_ID="28" stepLevel="4"/>
        <steps name="ManuelMode_Active2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.10" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.11" local_ID="37" stepLevel="5"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" local_ID="42" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" local_ID="45" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.14" local_ID="48" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton AND AutomaticMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.4" local_ID="9"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="11"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="14"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="22"/>
        <transitions condition="ManuelMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="25"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="31"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="33"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.6" local_ID="36"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="39"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.8" local_ID="44"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.8" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.9" local_ID="47"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.9" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="50"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_qmWqcL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_qmWqcr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qmWqcL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqcb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CheckManuelMode">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckManuelMode" id="_qmWqc734EequD661lQoFzA" text="ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_qmWqdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="134" structuredText="_qmWqc734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqdL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="156" structuredText="_qmWqc734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqdr34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_qmWqeL34EequD661lQoFzA" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_qmWqer34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="140" structuredText="_qmWqeL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqeb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqfL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="134" structuredText="_qmWqeL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqe734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqfr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="156" structuredText="_qmWqeL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqfb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_qmWqf734EequD661lQoFzA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_qmWqgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_qmWqf734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmWqgL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqgr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqg734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqhL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqhb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_qmWqf734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_qmWqiL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();&#xA;ACT_FaultAirPressureDetection();">
          <statements xsi:type="ST:Assignment" id="_qmWqir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qmWqiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqib34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqjL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_qmWqiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqi734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="134" structuredText="_qmWqiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqjb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmWqkL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="156" structuredText="_qmWqiL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmWqj734EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqkb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqk734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="28" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqlL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqlb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="39" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqlr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="43" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWql734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="37" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="31" structuredText="_qmWqiL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqmb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="31" structuredText="_qmWqiL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_FaultAirPressureDetection"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_qmWqmr34EequD661lQoFzA" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qmWqnL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_qmWqmr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_qmWqm734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqnb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqnr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqn734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqoL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqob34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqor34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qmWqmr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_qmWqo734EequD661lQoFzA" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qmWqpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmWqo734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmWqpL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqpr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqp734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqqL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqqb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqqr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmWqq734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qmWqo734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="LightBlinking">
        <implementation xsi:type="ST:StructuredText" label="LightBlinking" id="_qmXRgL34EequD661lQoFzA" text="Timer(IN := NOT Timer.Q, PT:=T#1500ms);&#xA;&#xA;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;//GREEN&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;ELSE&#xA;&#x9;//WHITE&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;END_IF&#xA;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRg734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qmXRgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:UnaryExpression" id="_qmXRgb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                  </subexpression>
                </assignedValue>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRgr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:If" id="_qmXRnL34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="27" relStartLine="3" relEndLine="27" endColumnPos="5" structuredText="_qmXRgL34EequD661lQoFzA">
            <conditionalBlocks id="_qmXRkL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="14" relStartLine="3" relEndLine="14" endColumnPos="40" structuredText="_qmXRgL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmXRhb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmXRhL34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="DIV">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="35" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="50" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="35" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="40" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRi734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="36" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRjL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRjb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="36" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="41" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRj734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="40" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmXRm734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="26" relStartLine="15" relEndLine="26" endColumnPos="39" structuredText="_qmXRgL34EequD661lQoFzA">
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRkb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRk734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="36" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRlL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="41" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRlb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="40" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRlr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="35" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRl734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="35" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRmb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="40" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmXRmr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="39" structuredText="_qmXRgL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmXRnr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="156" structuredText="_qmXRgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qmXRnb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_qmXRn734EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_qmXRob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qmXRn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qmXRoL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmXRo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_qmXRn734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qmXRor34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_qmXRrb34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_qmXRn734EequD661lQoFzA">
            <conditionalBlocks id="_qmXRrL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_qmXRn734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmXRpb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qmXRpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmXRp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_qmXRn734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qmXRpr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmXRqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_qmXRn734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qmXRqL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmXRq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_qmXRn734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qmXRqr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_qmXRrr34EequD661lQoFzA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmXRsL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_qmXRrr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qmXRr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmXRsr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_qmXRrr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qmXRsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRtL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRs734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRtr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRtb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRvL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRvr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRwL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRwr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRxL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRyL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRyr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRzL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRy734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXRzr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmXR0L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmXRz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4kb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4kL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4k734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4kr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4lb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4lL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4l734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4lr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4mb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4mL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4m734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4mr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4nb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4nL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4n734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4nr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4ob34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4oL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4o734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4or34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4pb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4pL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4p734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4pr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4qb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4qL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4q734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4qr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4rb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4rL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4r734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4rr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4sb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4sL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4s734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4sr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4tb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4tL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4t734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4tr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4ub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4uL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4u734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4ur34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4vb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_qmXRrr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4vL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4v734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4vr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4wb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4wL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4w734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4wr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4xb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4xL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4x734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4xr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4yb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4yL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4y734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4yr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4zb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_qmXRrr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4zL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX4z734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_qmXRrr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qmX4zr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_qmX40L34EequD661lQoFzA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmX40r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmX40L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qmX40b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX41L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qmX40L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX40734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_qmX41b34EequD661lQoFzA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX41734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX41r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX42b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX42L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX42734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX42r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX43b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX43L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX43734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX43r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX44b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX44L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX44734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX44r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX45b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX45L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX45734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX45r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX46L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX46b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX46r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX47L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX46734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX47r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX47b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX48L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX47734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX48r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX48b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX49L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX48734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX49r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX49b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4-L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX49734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4-b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4-r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4-734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX4_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX4_L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX4_734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX4_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Ab34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5AL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5A734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Ar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Bb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5BL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Br34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5CL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5B734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Cr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Cb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5DL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5C734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Dr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Db34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5EL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5D734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Eb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Er34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5FL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5E734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Fr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Fb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5GL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5F734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Gr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Gb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5HL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5G734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5Hr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5Hb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5IL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5H734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Ir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Ib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5JL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5I734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Jr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Jb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5KL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5J734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Kr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Kb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5LL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5K734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Lr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Lb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5ML34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5L734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Mr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Mb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5NL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5M734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5Nr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5Nb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5OL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_qmX41b34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5N734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Or34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Ob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5PL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5O734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Pr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Pb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5QL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5P734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Qr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Qb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5RL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Q734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5Rr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5Rb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qmX5SL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_qmX41b34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmX5R734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5Sr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmX5Sb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5TL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qmX5S734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmX5Tr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_qmX41b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qmX5Tb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_qmYfoL34EequD661lQoFzA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmYfor34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qmYfoL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qmYfob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmYfpL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qmYfoL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmYfo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_qmYfpb34EequD661lQoFzA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmYfp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmYfpb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qmYfpr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_FaultAirPressureDetection">
        <implementation xsi:type="ST:StructuredText" label="ACT_FaultAirPressureDetection" id="_qmYfqL34EequD661lQoFzA" text="IF(&#xA;&#x9;Block_LSCSep1_LSCSep2.DI_BoundaryPressure = FALSE &#xA;&#x9;OR Block_SSC_PAC.DI_BoundaryPressure = FALSE&#xA;&#x9;OR Block_Stack_Crane.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR Block_Stamp_RC.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR EngergyMonitoringHardware.PressureSensor_4bar.DI_PressureReached = FALSE &#xA;)&#xA;THEN&#xA; EmergencyStop := TRUE; &#xA; Timer(IN := NOT Timer.Q, PT:=T#500MS);&#xA;&#x9;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;&#x9;//GREEN&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;ELSE&#xA;&#x9;&#x9;//WHITE&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;&#x9;END_IF&#xA;END_IF">
          <statements xsi:type="ST:If" id="_qmYfyr34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="36" relStartLine="1" relEndLine="36" endColumnPos="5" structuredText="_qmYfqL34EequD661lQoFzA">
            <conditionalBlocks id="_qmYfyb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="35" relStartLine="1" relEndLine="35" endColumnPos="6" structuredText="_qmYfqL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmYfqr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmYfqb34EequD661lQoFzA" operator="OR">
                  <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_LSCSep1_LSCSep2">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_SSC_PAC">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                      </left>
                      <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stack_Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stamp_RC">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                          </left>
                          <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="EngergyMonitoringHardware">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PressureSensor_4bar">
                              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_PressureReached"/>
                            </innerVariable>
                          </left>
                          <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmYfrL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="22" structuredText="_qmYfqL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                <right xsi:type="STE:Literal" id="_qmYfq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfr734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="38" structuredText="_qmYfqL34EequD661lQoFzA">
                <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
                  <parameters>
                    <assignedValue xsi:type="STE:UnaryExpression" id="_qmYfrb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                      </subexpression>
                    </assignedValue>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
                  </parameters>
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_qmYfrr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500MS"/>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                  </parameters>
                </functionCall>
              </substatements>
              <substatements xsi:type="ST:If" id="_qmYfyL34EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="35" relStartLine="11" relEndLine="35" startColumnPos="1" endColumnPos="6" structuredText="_qmYfqL34EequD661lQoFzA">
                <conditionalBlocks id="_qmYfvL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="22" relStartLine="11" relEndLine="22" startColumnPos="1" endColumnPos="41" structuredText="_qmYfqL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qmYfsb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmYfsL34EequD661lQoFzA" operator="LESSER_THAN">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="DIV">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                      </right>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="2" endColumnPos="36" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfs734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="2" endColumnPos="51" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYftL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="36" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYftb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="41" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYftr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="40" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYft734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="37" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="52" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="37" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="2" endColumnPos="42" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfu734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="2" endColumnPos="41" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_qmYfx734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="34" relStartLine="23" relEndLine="34" startColumnPos="1" endColumnPos="40" structuredText="_qmYfqL34EequD661lQoFzA">
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfvb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="2" endColumnPos="37" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfvr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="2" endColumnPos="52" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfv734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="2" endColumnPos="37" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfwL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="2" endColumnPos="42" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfwb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="2" endColumnPos="41" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfwr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="2" endColumnPos="36" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfw734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="2" endColumnPos="51" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfxL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="2" endColumnPos="36" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfxb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="2" endColumnPos="41" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qmYfxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="2" endColumnPos="40" structuredText="_qmYfqL34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="FaultAirPressureDetection" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="29"/>
          <steps name="EmergencyChecking" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="30"/>
          <steps name="ManuelModeCehcking" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="31" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.12" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.4 //@resources.0/@pous.37/@actions.17/@implementation/@steps.5 //@resources.0/@pous.37/@actions.17/@implementation/@steps.6 //@resources.0/@pous.37/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9 //@resources.0/@pous.37/@actions.17/@implementation/@steps.10 //@resources.0/@pous.37/@actions.17/@implementation/@steps.11 //@resources.0/@pous.37/@actions.17/@implementation/@steps.12" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="A_to_V_Transducer" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_AmperToVolt" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="FlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Flow" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="GearPointFlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_ReachedGearPoint" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="MagnetValve" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Changeover" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="PressureSensor_4bar" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_PressureReached" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="ProtectiveContact" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Plug" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="V_Sensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Voltage" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="Wattmeter" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Energy" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
  </resources>
</C:Configuration>

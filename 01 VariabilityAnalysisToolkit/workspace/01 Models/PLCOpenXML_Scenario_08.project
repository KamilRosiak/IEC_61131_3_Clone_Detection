<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario_8">
  <resources name="Scenario_8">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.18" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//WPType</statements>
          <statements>//Stack WPType</statements>
          <statements>//Crane WPType</statements>
          <statements>//Stamp WPType</statements>
          <statements>//Free Signale for follow plant section</statements>
          <statements>//Stack</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//WPType</statements>
          <statements>//Stack WPType</statements>
          <statements>//Crane WPType</statements>
          <statements>//Stamp WPType</statements>
          <statements>//Free Signale for follow plant section</statements>
          <statements>//Stack</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
        </comment>
        <internalVariables name="PPU" scope="VAR" type="DERIVED" typeName="PPU">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Allow_Stamp_to_Operate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_PickedUpStackWP" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_qft28L34EequD661lQoFzA" text="PPU();&#xA;PPU.Stack();&#xA;PPU.Crane();&#xA;PPU.Stamp();&#xA;&#xA;&#xA;//WPType&#xA;&#x9;//Stack WPType&#xA;&#x9;Stack_WPType_Black := PPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := PPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := PPU.Stack.WPType_Metallic;&#xA;&#x9;//Crane WPType&#xA;&#x9;Crane_WPType_Black := PPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := PPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := PPU.Crane.WPType_Metallic;&#xA;&#x9;//Stamp WPType&#xA;&#x9;Stamp_WPType_Black := PPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := PPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := PPU.Stamp.WPType_Metallic;&#xA;&#x9;&#xA;//Free Signale for follow plant section&#xA;&#x9;//Stack&#xA;&#x9;Stack_WPProvided := PPU.Stack.WPProvided;&#xA;&#x9;//Crane&#xA;&#x9;Crane_Allow_Stamp_to_Operate := PPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_PickedUpStackWP := PPU.Crane.Table.AtStack.DI_SwitchTrue AND PPU.Crane.WPPickedUp;&#xA;&#x9;//Stamp&#xA;&#x9;Stamp_IsStamping := PPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := PPU.Stamp.WPAvailable.DI_SwitchTrue;&#x9;&#xA;&#x9;Stamp_AutomaticExecuteCompleted := PPU.Stamp.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qft28b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="5" structuredText="_qft28L34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="PPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qft28r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="11" structuredText="_qft28L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qft28734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="11" structuredText="_qft28L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qft29L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="11" structuredText="_qft28L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft29r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qft29b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft2-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qft29734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft2-r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qft2-b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft2_L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qft2-734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft2_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qft2_b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3AL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="51" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qft2_734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3Ar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qft3Ab34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3BL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="45" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qft3A734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3Br34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="51" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qft3Bb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3CL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="41" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qft3B734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3Cr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="65" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Allow_Stamp_to_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_qft3Cb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3DL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="88" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_PickedUpStackWP"/>
          <right xsi:type="STE:BinaryExpression" id="_qft3C734EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3Dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="41" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qft3Db34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3EL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="57" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qft3D734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qft3Er34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="71" structuredText="_qft28L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qft3Eb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.16" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.11 //@resources.0/@pous.16 //@resources.0/@pous.17" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.16 //@resources.0/@pous.17" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.4/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.4/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.4/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.4/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.4/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.4/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.4/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.4/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.11" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="Stopped" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="TurningClockwise" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="TurningCounterclockwise" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_qfueAL34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfueAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qfueAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qfueAb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qfueAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfueA734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueBr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_qfueAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qfueBb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qfueAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qfueB734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueCr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qfueAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfueCb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_qfueC734EequD661lQoFzA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfueDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qfueC734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qfueDL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qfueC734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfueDr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qfueC734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qfueEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_qfueC734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qfueEr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfueFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qfueC734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfueFL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_qfvFEL34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qfvFEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qfvFEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qfvFEb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfvFFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_qfvFEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfvFE734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfvFFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qfvFEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qfvFFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfvFGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qfvFEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qfvFF734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfvFGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_qfvFEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qfvFGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.16 //@resources.0/@pous.17" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ManuelButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_qfvFJ734EequD661lQoFzA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := DI_ManuelButton;">
        <statements xsi:type="ST:Assignment" id="_qfvFKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qfvFJ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qfvFKL34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfvFK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qfvFJ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qfvFKr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfvFLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="29" structuredText="_qfvFJ734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qfvFLL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ManuelButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qfvFG734EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfvFHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qfvFG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qfvFHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qfvFHr34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qfvFIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qfvFHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qfvFH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_qfvFIb34EequD661lQoFzA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfvFI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qfvFIb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qfvFIr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_qfvFJL34EequD661lQoFzA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qfvFJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qfvFJL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qfvFJb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.16" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.17" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.3" callers="//@resources.0/@pous.15" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="Motor" scope="VAR" type="DERIVED" typeName="Motor">
          <location/>
        </internalVariables>
        <internalVariables name="AtStack" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtRamp" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStamp" scope="VAR" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.13 //@resources.0/@pous.14" callers="//@resources.0/@pous.15" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.12/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.12/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.12/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.12/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.12/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.12/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.12/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.12/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.12/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.12/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.12" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_TakenIn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.12" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_qfvsIL34EequD661lQoFzA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfvsIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qfvsIL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qfvsIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_qfvsI734EequD661lQoFzA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qfvsJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qfvsI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qfvsJL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.4 //@resources.0/@pous.12 //@resources.0/@pous.11" callers="//@resources.0/@pous.18" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp_WPStamped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="EmergencyHandled" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPutDown" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ReachedStack" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ReachedRamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ReachedStamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_White" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Black" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Metallic" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_qfxhUL34EequD661lQoFzA" text="Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;">
        <statements xsi:type="ST:Assignment" id="_qfxhUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="47" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="51" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhU734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhVb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhWL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="57" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhV734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhWr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="47" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhWb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhW734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfxhXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="77" structuredText="_qfxhUL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qfxhXb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_qfvsJr34EequD661lQoFzA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfvsKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qfvsJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qfvsJ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qfvsKb34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfvsK734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qfvsKb34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfvsKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qfwTML34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedRamp := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfwTMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qfwTMb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTNL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qfwTM734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="31" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qfwTNb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qfwTN734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qfwTOb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_qfwTO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedRamp"/>
            <right xsi:type="STE:Literal" id="_qfwTPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_qfwTP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qfwTQb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTRL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qfwTQ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTRr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="24" structuredText="_qfwTML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qfwTRb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_qfwTR734EequD661lQoFzA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qfwTSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qfwTR734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qfwTSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer50ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer50ms" id="_qfwTSr34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#50MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfwTTb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qfwTSr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfwTS734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfwTTL34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#50MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_qfwTTr34EequD661lQoFzA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;">
          <statements xsi:type="ST:Assignment" id="_qfwTUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qfwTTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTT734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qfwTTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qfwTTr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTU734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_qfwTVb34EequD661lQoFzA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;">
          <statements xsi:type="ST:Assignment" id="_qfwTV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qfwTVb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTVr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qfwTVb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTWL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfwTW734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qfwTVb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qfwTWr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnClockwise_AND_Timer8000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnClockwise_AND_Timer8000ms" id="_qfwTXL34EequD661lQoFzA" text="Table.Motor.ACT_TurnClockwise();&#xA;Timer(IN:=TRUE, PT:=T#8000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfwTXb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qfwTXL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnClockwise"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qfwTYL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qfwTXL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfwTXr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfwTX734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#8000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnCounterclockwise_AND_Timer8000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnCounterclockwise_AND_Timer8000ms" id="_qfw6QL34EequD661lQoFzA" text="Table.Motor.ACT_TurnCounterclockwise();&#xA;Timer(IN:=TRUE, PT:=T#8000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfw6Qb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qfw6QL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnCounterclockwise"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qfw6RL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qfw6QL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfw6Qr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfw6Q734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#8000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="TurnVacuumOn_AND_Timer2000ms">
        <implementation xsi:type="ST:StructuredText" label="TurnVacuumOn_AND_Timer2000ms" id="_qfw6Rb34EequD661lQoFzA" text="Gripper.ACT_Intake();&#xA;Timer(IN:=TRUE, PT:=T#2000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfw6Rr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qfw6Rb34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Intake"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qfw6Sb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qfw6Rb34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfw6R734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfw6SL34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#2000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToRamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToRamp">
          <steps name="Init_MoveToRamp" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.15/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedRamp" incomingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.15/@actions.10/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtRamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtRamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtRamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="Timer.Q AND Not Table.AtRamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtRamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedRamp" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.10/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.11/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.11/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.11/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTS" incomingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.12/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise" incomingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.12/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.13/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.3 //@resources.0/@pous.15/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.15/@actions.13/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@inputVariables.7"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.13/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPType_Metallic=Main.Stack_WPType_Metallic" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPType_Metallic=Main.Stamp_WPType_Metallic" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.15/@actions.13/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.14/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.14/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.15/@implementation/@transitions.10" local_ID="6" stepLevel="2"/>
          <steps name="Crane_To_Stack_1" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Crane_Turning_To_Ramp_1" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.8 //@resources.0/@pous.15/@actions.15/@implementation/@transitions.9" local_ID="25" stepLevel="8"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.11 //@resources.0/@pous.15/@actions.15/@implementation/@transitions.19" local_ID="35" stepLevel="3"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.12" local_ID="39" stepLevel="4"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.13" local_ID="42" stepLevel="5"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.14" local_ID="45" stepLevel="6"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.15" local_ID="48" stepLevel="7"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.16 //@resources.0/@pous.15/@actions.15/@implementation/@transitions.17" local_ID="51" stepLevel="8"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.18" local_ID="59" stepLevel="9"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.15/@actions.15/@implementation/@transitions.20" local_ID="64" stepLevel="4"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="ReachedRamp" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.8" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.1" local_ID="28"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.8" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.16" local_ID="30"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.9" local_ID="34"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.9" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.10" local_ID="38"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.10" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.11" local_ID="41"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.13" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.14" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.15" local_ID="54"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.14" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.3" local_ID="56"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.15" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.4" local_ID="61"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.9" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.16" local_ID="63"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.16" targetStep="//@resources.0/@pous.15/@actions.15/@implementation/@steps.4" local_ID="66"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.16/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.15/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.16/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@inputVariables.8"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.16/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.17/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Turn_To_Ramp" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Ramp_Init" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.15/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.6 //@resources.0/@pous.15/@actions.17/@implementation/@transitions.7" local_ID="21" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.8" local_ID="27" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.9" local_ID="30" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.15/@actions.17/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.15/@declaration/@inputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedRamp" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.4" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.6" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.3" local_ID="32"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.15/@actions.17/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.4 //@resources.0/@pous.6 //@resources.0/@pous.3 //@resources.0/@pous.2 //@resources.0/@pous.7" callers="//@resources.0/@pous.18" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="StartButton" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="EmergencyStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="EmergencyHandled" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Crane_PickedUpWp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="WPProvided" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_White" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Black" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Metallic" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_qfyvjr34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Crane_PickedUpWP := Main.Crane_PickedUpStackWP;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qfyvj734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qfyvjr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfyvkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qfyvjr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qfyvkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfyvk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qfyvjr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qfyvkr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qfyvlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="52" structuredText="_qfyvjr34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Crane_PickedUpWP"/>
          <right xsi:type="STE:VariableExpression" id="_qfyvlL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_PickedUpStackWP"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qfyIYL34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfyIYr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qfyIYL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfyIYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qfyIY734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfyIZb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qfyIY734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qfyIZL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfyIZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qfyIY734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qfyIZr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfyIab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_qfyIY734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qfyIaL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfyIa734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qfyIY734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qfyIar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfyIbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_qfyIY734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qfyIbL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_qfyIbr34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfyIcb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qfyIbr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfyIb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfyIcL34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_qfyIcr34EequD661lQoFzA" text="IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_qfyvi734EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="13" relStartLine="1" relEndLine="13" endColumnPos="5" structuredText="_qfyIcr34EequD661lQoFzA">
            <conditionalBlocks id="_qfyveL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="4" relStartLine="1" relEndLine="4" endColumnPos="23" structuredText="_qfyIcr34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qfyvcb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qfyvcL34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qfyvc734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="19" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qfyvcr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="20" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qfyvdL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="23" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qfyvdr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qfyvgb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="5" absEndLine="8" relStartLine="5" relEndLine="8" endColumnPos="23" structuredText="_qfyIcr34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qfyver34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qfyveb34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qfyvfL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="20" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qfyve734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvfr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="19" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qfyvfb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvgL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="23" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qfyvf734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qfyvir34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="9" absEndLine="12" relStartLine="9" relEndLine="12" endColumnPos="22" structuredText="_qfyIcr34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qfyvg734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qfyvgr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qfyvhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="20" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qfyvhL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qfyvhr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qfyvib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="22" structuredText="_qfyIcr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qfyviL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfyvjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="16" structuredText="_qfyIcr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_qfyvjL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.6" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.3" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.5" local_ID="21" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.7" local_ID="28" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.3 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.16/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.16/@actions.4/@implementation/@transitions.8" local_ID="34" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="35" qualifier="S" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.5" local_ID="27"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" local_ID="32"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.16/@actions.4/@implementation/@steps.0" local_ID="38"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_Crane_PickedUpWP" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@inputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@inputVariables.6"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.6 //@resources.0/@pous.9 //@resources.0/@pous.10 //@resources.0/@pous.3 //@resources.0/@pous.4 //@resources.0/@pous.1" callers="//@resources.0/@pous.18" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="StartButton" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="EmergencyStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="EmergencyHandled" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="PressureVar" scope="VAR_INPUT" type="INT" typeName="INT">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Allowed_To_Operate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPStamped" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_White" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Black" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPType_Metallic" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_qf0koL34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Crane_Allow_Stamp_to_Operate;&#xA;Check_WPType_White:=Main.Crane_WPType_White;&#xA;Check_WPType_Black:=Main.Crane_WPType_Black;&#xA;Check_WPType_Metallic:=Main.Crane_WPType_Metallic;&#xA;Check_Stamp_WPAvailable:=Main.Stamp_WPAvailable;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qf0kob34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qf0koL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0ko734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qf0kor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0kpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qf0kpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0kp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="61" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_qf0kpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Allow_Stamp_to_Operate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0kqb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qf0kqL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0kq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="43" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qf0kqr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0krb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="49" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qf0krL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qf0kr734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="47" structuredText="_qf0koL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qf0krr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_qfyvlr34EequD661lQoFzA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfzWgL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qfyvlr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qfzWg734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qfyvlr34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfzWgb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfzWgr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_qfzWhL34EequD661lQoFzA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_qfzWhr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qfzWhL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qfzWhb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qfzWh734EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfzWib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qfzWh734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfzWiL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qfzWir34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qfzWjL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qfzWi734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qfzWjb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWkL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qfzWj734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_qfzWkb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWlL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_qfzWk734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWlr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qfzWlb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWmL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qfzWl734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfzWmr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qfzWir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qfzWmb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_qfzWm734EequD661lQoFzA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_qfzWnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qfzWm734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qfzWnL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_qfzWnr34EequD661lQoFzA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_qfzWoL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qfzWnr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qfzWn734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_qfz9kL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfz9k734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qfz9kL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfz9kb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfz9kr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_qfz9lL34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qfz9l734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qfz9lL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfz9lb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qfz9lr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPType">
        <implementation xsi:type="ST:StructuredText" label="Set_WPType" id="_qfz9mL34EequD661lQoFzA" text="WPType_White := Check_WPType_White;&#xA;WPType_Black := Check_WPType_Black;&#xA;WPType_Metallic := Check_WPType_Metallic;">
          <statements xsi:type="ST:Assignment" id="_qfz9mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qfz9mL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qfz9mb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_White"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfz9nL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qfz9mL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qfz9m734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_Black"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qfz9nr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qfz9mL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qfz9nb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPType_Metallic"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPType_From_Crane" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.2 //@resources.0/@pous.17/@actions.9/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.3 //@resources.0/@pous.17/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.6 //@resources.0/@pous.17/@actions.9/@implementation/@transitions.11" local_ID="19" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.7 //@resources.0/@pous.17/@actions.9/@implementation/@transitions.9" local_ID="23" stepLevel="5"/>
          <steps name="MetallicPressureOk" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.8" local_ID="27" stepLevel="6"/>
          <steps name="WhitePressureOk" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.12" local_ID="38" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="39" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@inputVariables.10"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.8 //@resources.0/@pous.17/@actions.9/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.13" local_ID="45" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.14" local_ID="48" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.15" local_ID="51" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.16" local_ID="54" stepLevel="10"/>
          <steps name="Dummy" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.17" local_ID="57" stepLevel="11"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.17/@actions.9/@implementation/@transitions.18" local_ID="60" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="61" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="62" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_Black=Check_WPType_Black AND WPType_White=Check_WPType_White AND WPType_Metallic=Check_WPType_Metallic" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND NOT WPType_Metallic" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPType_Metallic" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPType_Metallic" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.7" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.10" local_ID="29"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND NOT WPType_Metallic" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.8" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.9" local_ID="37"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.9" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.0" local_ID="42"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.10" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.11" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.12" local_ID="50"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.12" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.13" local_ID="53"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.13" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.14" local_ID="56"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.14" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.15" local_ID="59"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.15" targetStep="//@resources.0/@pous.17/@actions.9/@implementation/@steps.0" local_ID="65"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.17/@actions.10/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@inputVariables.8"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.17/@actions.10/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Extending" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.17/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@inputVariables.11"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.17/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.17/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.17/@actions.12/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.16 //@resources.0/@pous.15 //@resources.0/@pous.17" callers="//@resources.0/@pous.0" identifier="PPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="PPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="PPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="PPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.2" local_ID="6" stepLevel="2"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.3 //@resources.0/@pous.18/@implementations.0/@transitions.4" local_ID="9" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.5 //@resources.0/@pous.18/@implementations.0/@transitions.6" local_ID="17" stepLevel="4"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.7" local_ID="25" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.7" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.8" local_ID="28" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.18/@implementations.0/@transitions.9" local_ID="31" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.3" local_ID="8"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.4" local_ID="12"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.5" local_ID="14"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.0" local_ID="22"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.6" local_ID="27"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.7" local_ID="30"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.18/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.18/@implementations.0/@steps.0" local_ID="33"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_qf0ksL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR Stamp.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_qf0ksr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="113" structuredText="_qf0ksL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qf0ksb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_qf0ks734EequD661lQoFzA" text="StartButton := Stack.StartButton OR Stamp.StartButton;">
          <statements xsi:type="ST:Assignment" id="_qf0ktb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="53" structuredText="_qf0ks734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qf0ktL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_qf0ktr34EequD661lQoFzA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_qf0kuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_qf0ktr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qf0kt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf0kub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="35" structuredText="_qf0ktr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf0kur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qf0ktr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf0ku734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_qf0ktr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf0kvL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="34" structuredText="_qf0ktr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_qf0kvb34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR Stamp.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR Stamp.StartButton;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();">
          <statements xsi:type="ST:Assignment" id="_qf0kv734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="113" structuredText="_qf0kvb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qf0kvr34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf0kwb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="53" structuredText="_qf0kvb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qf0kwL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1LsL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="28" structuredText="_qf0kvb34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lsb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="28" structuredText="_qf0kvb34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_qf0kvb34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_qf1Ls734EequD661lQoFzA" text="EmergencyHandled:=FALSE;&#xA;&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qf1Ltb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_qf1Ls734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_qf1LtL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Ltr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="35" structuredText="_qf1Ls734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lt734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qf1Ls734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1LuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qf1Ls734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="35" structuredText="_qf1Ls734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_qf1Lur34EequD661lQoFzA" text="InitCompleted:=FALSE;&#xA;&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qf1LvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qf1Lur34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qf1Lu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lvb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qf1Lur34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lvr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qf1Lur34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1Lv734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qf1Lur34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1LwL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="35" structuredText="_qf1Lur34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_qf1Lwb34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR Stamp.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR Stamp.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_qf1Lw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="113" structuredText="_qf1Lwb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qf1Lwr34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf1Lxb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="53" structuredText="_qf1Lwb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qf1LxL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_qf1Lzb34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="5" structuredText="_qf1Lwb34EequD661lQoFzA">
            <conditionalBlocks id="_qf1LzL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="5" relStartLine="3" relEndLine="5" endColumnPos="31" structuredText="_qf1Lwb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qf1Lx734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qf1Lxr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qf1Lyb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_qf1Lwb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qf1LyL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qf1Ly734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_qf1Lwb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qf1Lyr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_qf1ywL34EequD661lQoFzA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#x9;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToRamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qf1ywr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_qf1ywL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qf1ywb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf1yxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_qf1ywL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qf1yw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1yxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_qf1ywL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1yyL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1yyr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1yzL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yy734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1yzr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="37" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToRamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y0L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1yz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y0r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y1L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y0734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y1r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y2L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="22" structuredText="_qf1ywL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y1734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y2r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="31" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="43" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y2734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y3r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="36" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y3b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="22" structuredText="_qf1ywL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y3734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y4r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="31" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y4b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y5L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="43" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y4734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf1y5r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="32" structuredText="_qf1ywL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf1y5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf1y6L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="23" structuredText="_qf1ywL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qf1y5734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_qf1y6b34EequD661lQoFzA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qf1y6734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qf1y6b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qf1y6r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf1y7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qf1y6b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf1y7L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_qf2Z0L34EequD661lQoFzA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToRamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.InitCompleted:=FALSE;&#xA;&#x9;Crane.AutomaticExecuteCompleted:=FALSE;&#xA;&#x9;Crane.Stamp_AllowedToOperate:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.EmergencyHandled:=FALSE;&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.InitCompleted:=FALSE;&#xA;&#x9;Stack.AutomaticExecuteCompleted:=FALSE;&#x9;&#xA;&#x9;Stack.EmergencyHandled:=FALSE;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.InitCompleted:=FALSE;&#xA;&#x9;Stamp.AutomaticExecuteCompleted:=FALSE;&#x9;&#xA;&#x9;Stamp.EmergencyHandled:=FALSE;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z0r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_qf2Z0L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z1L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z0734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z1r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z2L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z1734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z2r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="38" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToRamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z2734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z3r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z3b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z3734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf2Z4r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf2Z4b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A4b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A4r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="27" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A4734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A5r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="39" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A6L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A5734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="31" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A6b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A7L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="30" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A6734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A7r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="22" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A7b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A8L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="23" structuredText="_qf2Z0L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3A7734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A8r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="32" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3A8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A9L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="44" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3A8734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A9r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="37" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3A9b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3A9734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="30" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="27" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A-L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="39" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A-r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="30" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A_L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3A_734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3A_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BAb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="23" structuredText="_qf2Z0L34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3BAL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BA734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="32" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3BAr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BBb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="1" endColumnPos="44" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3BBL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BB734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qf3BBr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BCL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="37" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qf3BCb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="35" structuredText="_qf2Z0L34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="27" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BCr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="39" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BDL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="30" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BDr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="22" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" endColumnPos="28" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qf3BEr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" endColumnPos="23" structuredText="_qf2Z0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qf3BFL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_qf3BFr34EequD661lQoFzA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qf3BGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qf3BFr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qf3BF734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qf3BGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qf3BFr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_qf3BG734EequD661lQoFzA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qf3BHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qf3BG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qf3BHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.18/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.12/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@actions.13/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.18/@actions.13/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.2" local_ID="9"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.3" local_ID="12"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.4" local_ID="15">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="N" actionVariable="//@resources.0/@pous.18/@declaration/@outputVariables.1"/>
          </steps>
          <steps name="EmergencyChecking" incomingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.18/@actions.14/@implementation/@transitions.4" local_ID="18" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.5" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.4 //@resources.0/@pous.18/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.18/@actions.14/@implementation/@steps.0" local_ID="21"/>
        </implementation>
      </actions>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
  </resources>
</C:Configuration>

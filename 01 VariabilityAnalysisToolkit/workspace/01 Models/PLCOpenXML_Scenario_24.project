<?xml version="1.0" encoding="ASCII"?>
<C:Configuration xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C="http://www.example.org/ppuIECScenario/config" xmlns:SFC="http://www.example.org/ppuIECScenario/SFC" xmlns:ST="http://www.example.org/ppuIECScenario/ST" xmlns:STE="http://www.example.org/ppuIECScenario/STE" identifier="Scenario24">
  <resources name="Scenario24">
    <globalVariables name="IsSFCResetting" scope="VAR_GLOBAL" type="BOOL" typeName="BOOL">
      <location/>
    </globalVariables>
    <pous controlTasks="//@resources.0/@tasks.0" callees="//@resources.0/@pous.37" identifier="MAIN">
      <declaration>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <comment identifier="MAIN">
          <statements>//Stack</statements>
          <statements>//Waiting for Signals</statements>
          <statements>//Giving Signals</statements>
          <statements>//Crane</statements>
          <statements>//Stamp</statements>
          <statements>//LargeSortingConveyor</statements>
          <statements>//PicALphaConveyor</statements>
          <statements>//SmallSortingConveyor</statements>
          <statements>//RefillConveyor</statements>
          <statements>//PicAlpha</statements>
          <statements>//PPU</statements>
        </comment>
        <internalVariables name="xPPU" scope="VAR" type="DERIVED" typeName="xPPU">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stack_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stack_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Crane_WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_IsStamping" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_WPAvailable" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Stamp_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorInitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_NumberOfWPsAtConveyor" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlphaConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SmallSortingConveyor_IsSorting" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToReceive" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_AllowedToSend" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_FollowConveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteReceivingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_IsSending" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="RefillConveyor_AutomaticExecuteSendingCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_InitCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_Conveyor_AllowedToOperate" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PicAlpha_AutomaticExecuteCompleted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="PPU_EngineStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="MAIN" id="_qmvE8L34EequD661lQoFzA" text="xPPU();&#xA;xPPU.Stack();&#xA;xPPU.Crane();&#xA;xPPU.Stamp();&#xA;xPPU.LargeSortingConveyor();&#xA;xPPU.PicAlphaConveyor();&#xA;xPPU.SmallSortingConveyor();&#xA;xPPU.RefillConveyor();&#xA;xPPU.PicAlpha();&#xA;xPPU.SafetyDoor();&#xA;xPPU.LightGrid();&#xA;&#xA;&#xA;//Stack&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPPickedUp := xPPU.Crane.Table.AtStack.DI_SwitchTrue AND xPPU.Crane.WPPickedUp;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stack_WPProvided := xPPU.Stack.WPProvided;&#xA;&#x9;Stack_WPType_Black := xPPU.Stack.WPType_Black;&#xA;&#x9;Stack_WPType_White := xPPU.Stack.WPType_White;&#xA;&#x9;Stack_WPType_Metallic := xPPU.Stack.WPType_Metallic;&#xA;&#x9;Stack_WPWeight_Light := xPPU.Stack.WPWeight_Light;&#xA;&#x9;Stack_WPWeight_Medium := xPPU.Stack.WPWeight_Medium;&#xA;&#x9;Stack_WPWeight_Heavy := xPPU.Stack.WPWeight_Heavy;&#x9;&#xA;//Crane&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stack_WPProvided := Stack_WPProvided;&#xA;&#x9;Check_Stack_WPType_Black := Stack_WPType_Black;&#xA;&#x9;Check_Stack_WPType_White := Stack_WPType_White;&#xA;&#x9;Check_Stack_WPType_Metallic := Stack_WPType_Metallic;&#xA;&#x9;Check_LargeSortingConveyor_IsSorting := LargeSortingConveyor_IsSorting;&#xA;&#x9;Check_LargeSortingConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#x9;&#xA;&#x9;Check_Stamp_IsStamping := Stamp_IsStamping;&#xA;&#x9;Check_Stamp_WPAvailable := Stamp_WPAvailable;&#xA;&#x9;Check_Stamp_AutomaticExecuteCompleted := Stamp_AutomaticExecuteCompleted;&#xA;&#x9;Check_RefillConveyor_IsSending := RefillConveyor_IsSending;&#xA;&#x9;//Giving Signals&#xA;&#x9;Crane_WPType_Black := xPPU.Crane.WPType_Black;&#xA;&#x9;Crane_WPType_White := xPPU.Crane.WPType_White;&#xA;&#x9;Crane_WPType_Metallic := xPPU.Crane.WPType_Metallic;&#xA;&#x9;Crane_WPWeight_Light := xPPU.Crane.WPWeight_Light;&#xA;&#x9;Crane_WPWeight_Medium := xPPU.Crane.WPWeight_Medium;&#xA;&#x9;Crane_WPWeight_Heavy := xPPU.Crane.WPWeight_Heavy;&#xA;&#x9;Crane_Conveyor_AllowedToOperate := xPPU.Crane.Conveyor_AllowedToOperate;&#xA;&#x9;Crane_Stamp_AllowedToOperate := xPPU.Crane.Stamp_AllowedToOperate;&#xA;&#x9;Crane_WPPickedUp := xPPU.Crane.Gripper.VacuumSwitch.DI_TakenIn;&#xA;//Stamp&#x9;&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_Stamp_AllowedToOperate := Crane_Stamp_AllowedToOperate;&#xA;&#x9;Check_Stamp_WPWeight_Light := Crane_WPWeight_Light;&#xA;&#x9;Check_Stamp_WPWeight_Medium := Crane_WPWeight_Medium;&#xA;    Check_Stamp_WPWeight_Heavy := Crane_WPWeight_Heavy;&#xA;&#x9;//Giving Signals&#xA;&#x9;Stamp_WPType_Black := xPPU.Stamp.WPType_Black;&#xA;&#x9;Stamp_WPType_White := xPPU.Stamp.WPType_White;&#xA;&#x9;Stamp_WPType_Metallic := xPPU.Stamp.WPType_Metallic;&#xA;&#x9;Stamp_WPWeight_Light := xPPU.Stamp.WPWeight_Light;&#xA;&#x9;Stamp_WPWeight_Medium := xPPU.Stamp.WPWeight_Medium;&#xA;&#x9;Stamp_WPWeight_Heavy := xPPU.Stamp.WPWeight_Heavy;&#xA;&#x9;Stamp_IsStamping := xPPU.Stamp.IsStamping;&#xA;&#x9;Stamp_WPAvailable := xPPU.Stamp.WPAvailable.DI_SwitchTrue;&#xA;&#x9;Stamp_AutomaticExecuteCompleted&#x9;:= xPPU.Stamp.AutomaticExecuteCompleted;&#xA;//LargeSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_LargeSortingConveyor_AllowedToOperate := Crane_Conveyor_AllowedToOperate OR RefillConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorInitCompleted := PicALphaConveyor_InitCompleted;&#x9;&#xA;&#x9;Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted := PicALphaConveyor_AutomaticExecuteReceivingCompleted;&#x9;&#xA;&#x9;//Giving Signals&#xA;&#x9;LargeSortingConveyor_NumberOfWPsAtConveyor := xPPU.LargeSortingConveyor.NumberOfWPsAtConveyor;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToInit := xPPU.LargeSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;LargeSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.LargeSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;LargeSortingConveyor_IsSorting := xPPU.LargeSortingConveyor.IsSorting;&#xA;&#x9;LargeSortingConveyor_AutomaticExecuteCompleted := xPPU.LargeSortingConveyor.AutomaticExecuteCompleted;&#x9;&#xA;//PicALphaConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlphaConveyor_AllowedToInit := LargeSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToReceive := LargeSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_PicAlphaConveyor_AllowedToSend := LargeSortingConveyor_NumberOfWPsAtConveyor=3;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_InitCompleted := SmallSortingConveyor_InitCompleted;&#xA;&#x9;Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted := PicAlpha_AutomaticExecuteCompleted;&#xA;&#x9;Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted := SmallSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlphaConveyor_InitCompleted := xPPU.PicALphaConveyor.InitCompleted;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToInit := xPPU.PicALphaConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;PicAlphaConveyor_PicAlpha_AllowedToOperate := xPPU.PicAlphaConveyor.PicAlpha_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_FollowConveyor_AllowedToOperate := xPPU.PicALphaConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteReceivingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;PicAlphaConveyor_AutomaticExecuteSendingCompleted := xPPU.PicALphaConveyor.AutomaticExecuteSendingCompleted;&#xA;//SmallSortingConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_SmallSortingConveyor_AllowedToInit := PicALphaConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_SmallSortingConveyor_AllowedToOperate := PicALphaConveyor_FollowConveyor_AllowedToOperate;&#x9;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_InitCompleted := RefillConveyor_InitCompleted;&#xA;&#x9;Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted := RefillConveyor_AutomaticExecuteReceivingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;SmallSortingConveyor_InitCompleted := xPPU.SmallSortingConveyor.InitCompleted;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToInit := xPPU.SmallSortingConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;SmallSortingConveyor_FollowConveyor_AllowedToOperate:= xPPU.SmallSortingConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;SmallSortingConveyor_AutomaticExecuteCompleted := xPPU.SmallSortingConveyor.AutomaticExecuteCompleted;&#xA;&#x9;SmallSortingConveyor_IsSorting := xPPU.SmallSortingConveyor.IsSorting;&#x9;&#xA;//RefillConveyor&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_RefillConveyor_AllowedToInit := SmallSortingConveyor_FollowConveyor_AllowedToInit;&#xA;&#x9;Check_RefillConveyor_AllowedToReceive := SmallSortingConveyor_FollowConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_AllowedToSend := NOT Crane_WPPickedUp AND NOT LargeSortingConveyor_IsSorting AND NOT Check_LargeSortingConveyor_AllowedToOperate;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_InitCompleted := LargeSortingConveyor_InitCompleted;&#xA;&#x9;Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted := LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;RefillConveyor_InitCompleted := xPPU.RefillConveyor.InitCompleted;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToInit := xPPU.RefillConveyor.FollowConveyor_AllowedToInit;&#xA;&#x9;RefillConveyor_FollowConveyor_AllowedToOperate := xPPU.RefillConveyor.FollowConveyor_AllowedToOperate;&#xA;&#x9;RefillConveyor_AutomaticExecuteReceivingCompleted := xPPU.RefillConveyor.AutomaticExecuteReceivingCompleted;&#xA;&#x9;RefillConveyor_IsSending := xPPU.RefillConveyor.IsSending;&#xA;&#x9;RefillConveyor_AutomaticExecuteSendingCompleted := xPPU.RefillConveyor.AutomaticExecuteSendingCompleted;&#x9;&#xA;//PicAlpha&#xA;&#x9;//Waiting for Signals&#xA;&#x9;Check_PicAlpha_AllowedToOperate := PicAlphaConveyor_PicAlpha_AllowedToOperate;&#xA;&#x9;Check_PicAlpha_Conveyor_AutomaticExecuteCompleted := PicAlphaConveyor_AutomaticExecuteSendingCompleted;&#xA;&#x9;//Giving Signals&#xA;&#x9;PicAlpha_InitCompleted := xPPU.PicAlpha.InitCompleted;&#xA;&#x9;PicAlpha_Conveyor_AllowedToOperate := xPPU.PicAlpha.Conveyor_AllowedToOperate;&#xA;//PPU&#xA;&#x9;PPU_EngineStop := xPPU.ManuelMode;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;PicAlpha_AutomaticExecuteCompleted := xPPU.PicAlpha.AutomaticExecuteCompleted;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE8b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="6" structuredText="_qmvE8L34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="xPPU"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE8r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="12" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stack"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE8734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="12" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Crane"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE9L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="12" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="Stamp"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE9b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="27" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE9r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="23" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE9734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="27" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE-L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE-b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="15" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE-r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="17" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="SafetyDoor"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qmvE-734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="16" structuredText="_qmvE8L34EequD661lQoFzA">
          <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU"/>
          <functionCall expressionType="FUNCTION_CALL" symbol="LightGrid"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvE_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="91" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          <right xsi:type="STE:BinaryExpression" id="_qmvE_L34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
                  </innerVariable>
                </innerVariable>
              </innerVariable>
            </left>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
              </innerVariable>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvE_734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="42" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qmvE_r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFAL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFA734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFAr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFBL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFB734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFBr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFCb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFCL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFCr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFDb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFDL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="47" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFDr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFEb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="47" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFEL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="53" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFEr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="71" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFFL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="103" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFFr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="43" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFGL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="45" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFGr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="73" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFHL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFH734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="59" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFHr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFIL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFIr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFJL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFJr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFKL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFKr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="72" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFLL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="66" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFLr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="63" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFML34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="VacuumSwitch">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_TakenIn"/>
                </innerVariable>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="61" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFMr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Stamp_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFNb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="50" absEndLine="50" relStartLine="50" relEndLine="50" startColumnPos="1" endColumnPos="51" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFNL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFN734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="53" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFNr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="4" endColumnPos="54" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFOL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFO734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFOr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFPb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFPL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFP734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFPr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFQb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="57" absEndLine="57" relStartLine="57" relEndLine="57" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFQL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFQ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="52" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFQr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFRb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="50" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFRL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFR734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="42" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFRr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="58" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFSL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="WPAvailable">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_SwitchTrue"/>
              </innerVariable>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="72" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFSr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="129" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:BinaryExpression" id="_qmvFTL34EequD661lQoFzA" operator="OR">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFT734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="89" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFTr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFUb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="67" absEndLine="67" relStartLine="67" relEndLine="67" startColumnPos="1" endColumnPos="122" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFUL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFU734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="94" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFUr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFVb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="108" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFVL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFV734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="113" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFVr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFWb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="70" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFWL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFW734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="73" absEndLine="73" relStartLine="73" relEndLine="73" startColumnPos="1" endColumnPos="102" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFWr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFXb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="76" absEndLine="76" relStartLine="76" relEndLine="76" startColumnPos="1" endColumnPos="90" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFXL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFX734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="96" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFXr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFYb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="85" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qmvFYL34EequD661lQoFzA" operator="EQUAL">
            <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFY734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="90" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFYr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFZb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="96" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFZL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="114" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFZr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="70" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFaL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFa734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="100" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFar34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="94" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFbL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFb734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="86" absEndLine="86" relStartLine="86" relEndLine="86" startColumnPos="1" endColumnPos="106" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFbr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFcb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="112" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFcL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFc734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="88" absEndLine="88" relStartLine="88" relEndLine="88" startColumnPos="1" endColumnPos="108" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFcr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="91" absEndLine="91" relStartLine="91" relEndLine="91" startColumnPos="1" endColumnPos="90" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFdL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="92" absEndLine="92" relStartLine="92" relEndLine="92" startColumnPos="1" endColumnPos="96" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFdr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicALphaConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFeb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="93" absEndLine="93" relStartLine="93" relEndLine="93" startColumnPos="1" endColumnPos="88" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFeL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFe734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="94" absEndLine="94" relStartLine="94" relEndLine="94" startColumnPos="1" endColumnPos="121" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFer34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFfb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="96" absEndLine="96" relStartLine="96" relEndLine="96" startColumnPos="1" endColumnPos="78" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFfL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="97" absEndLine="97" relStartLine="97" relEndLine="97" startColumnPos="1" endColumnPos="108" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFfr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFgb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="98" absEndLine="98" relStartLine="98" relEndLine="98" startColumnPos="1" endColumnPos="113" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFgL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="99" absEndLine="99" relStartLine="99" relEndLine="99" startColumnPos="1" endColumnPos="102" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFgr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFhb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="100" absEndLine="100" relStartLine="100" relEndLine="100" startColumnPos="1" endColumnPos="70" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFhL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFh734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="103" absEndLine="103" relStartLine="103" relEndLine="103" startColumnPos="1" endColumnPos="88" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFhr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToInit"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFib34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="104" absEndLine="104" relStartLine="104" relEndLine="104" startColumnPos="1" endColumnPos="94" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFiL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor_FollowConveyor_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFi734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="105" absEndLine="105" relStartLine="105" relEndLine="105" startColumnPos="1" endColumnPos="150" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          <right xsi:type="STE:BinaryExpression" id="_qmvFir34EequD661lQoFzA" operator="AND">
            <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
              <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPPickedUp"/>
            </left>
            <right xsi:type="STE:BinaryExpression" operator="AND">
              <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
              </left>
              <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
              </right>
            </right>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="106" absEndLine="106" relStartLine="106" relEndLine="106" startColumnPos="1" endColumnPos="88" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFjL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_InitCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFj734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="107" absEndLine="107" relStartLine="107" relEndLine="107" startColumnPos="1" endColumnPos="112" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFjr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="109" absEndLine="109" relStartLine="109" relEndLine="109" startColumnPos="1" endColumnPos="66" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="110" absEndLine="110" relStartLine="110" relEndLine="110" startColumnPos="1" endColumnPos="96" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFkr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFlb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="111" absEndLine="111" relStartLine="111" relEndLine="111" startColumnPos="1" endColumnPos="102" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_FollowConveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFlL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="112" absEndLine="112" relStartLine="112" relEndLine="112" startColumnPos="1" endColumnPos="108" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteReceivingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFlr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="113" absEndLine="113" relStartLine="113" relEndLine="113" startColumnPos="1" endColumnPos="58" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSending"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFm734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="114" absEndLine="114" relStartLine="114" relEndLine="114" startColumnPos="1" endColumnPos="104" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor_AutomaticExecuteSendingCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFmr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="117" absEndLine="117" relStartLine="117" relEndLine="117" startColumnPos="1" endColumnPos="78" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFnL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_PicAlpha_AllowedToOperate"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFn734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="118" absEndLine="118" relStartLine="118" relEndLine="118" startColumnPos="1" endColumnPos="103" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFnr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor_AutomaticExecuteSendingCompleted"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFob34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="120" absEndLine="120" relStartLine="120" relEndLine="120" startColumnPos="1" endColumnPos="54" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFoL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="121" absEndLine="121" relStartLine="121" relEndLine="121" startColumnPos="1" endColumnPos="78" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_Conveyor_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            </innerVariable>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="123" absEndLine="123" relStartLine="123" relEndLine="123" startColumnPos="1" endColumnPos="34" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFpL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvFp734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="129" absEndLine="129" relStartLine="129" relEndLine="129" startColumnPos="1" endColumnPos="78" structuredText="_qmvE8L34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qmvFpr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="xPPU">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            </innerVariable>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="BistableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="BistableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Retract" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.0/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.0/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.1/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.1/@actions.1/@implementation/@transitions.2" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.1/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.1/@actions.1/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="InductiveSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPMetallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="InductiveSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="InductiveSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_InductiveSwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MicroSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MicroSwitch">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_SwitchTrue" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="MonostableCylinder" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="MonostableCylinder">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PositionTransmitter" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.5/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.5/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.5/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.5/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.18 //@resources.0/@pous.28 //@resources.0/@pous.29 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Motor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stopped" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningClockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="TurningCounterclockwise" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Motor">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_TurnClockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_TurnCounterclockwise" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="AI_Position" scope="VAR_OUTPUT" type="UINT" typeName="UINT">
          <location type="I" dataType="None"/>
        </outputVariables>
        <outputVariables name="AI_Speed" scope="VAR_OUTPUT" type="UDINT" typeName="UDINT">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Stop">
        <implementation xsi:type="ST:StructuredText" label="ACT_Stop" id="_qmvFqL34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := TRUE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvFqr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmvFqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFrL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmvFqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFrr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="15" structuredText="_qmvFqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmvFrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFsL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qmvFqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFsr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qmvFqL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnClockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnClockwise" id="_qmvFs734EequD661lQoFzA" text="DO_TurnClockwise := TRUE;&#xA;DO_TurnCounterclockwise := FALSE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := TRUE;&#xA;TurningCounterclockwise := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvFtb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmvFs734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFtL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qmvFs734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFtr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFub34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qmvFs734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmvFuL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFu734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="24" structuredText="_qmvFs734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFur34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFvb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="32" structuredText="_qmvFs734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFvL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnCounterclockwise">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnCounterclockwise" id="_qmvFvr34EequD661lQoFzA" text="DO_TurnClockwise := FALSE;&#xA;DO_TurnCounterclockwise := TRUE;&#xA;&#xA;Stopped := FALSE;&#xA;TurningClockwise := FALSE;&#xA;TurningCounterclockwise := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmvFwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmvFvr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFwr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="31" structuredText="_qmvFvr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_TurnCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="16" structuredText="_qmvFvr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stopped"/>
            <right xsi:type="STE:Literal" id="_qmvFw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFxr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="25" structuredText="_qmvFvr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningClockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmvFyL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="31" structuredText="_qmvFvr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TurningCounterclockwise"/>
            <right xsi:type="STE:Literal" id="_qmvFx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.35 //@resources.0/@pous.36" identifier="OperationPanel" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanel">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampWhite" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanel" id="_qmvsDL34EequD661lQoFzA" text="EmergencyStop := NOT DI_EmergencyStop;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;">
        <statements xsi:type="ST:Assignment" id="_qmvsDr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qmvsDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qmvsDb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsEL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qmvsDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmvsD734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qmvsDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qmvsEb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmvsDL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmvsE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qmvsAL34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvsAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qmvsAL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmvsAb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qmvsA734EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmvsBb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmvsA734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmvsBL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_Off" id="_qmvsBr34EequD661lQoFzA" text="DO_LampWhite:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvsCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmvsBr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qmvsB734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampWhite_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampWhite_On" id="_qmvsCb34EequD661lQoFzA" text="DO_LampWhite:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmvsC734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qmvsCb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampWhite"/>
            <right xsi:type="STE:Literal" id="_qmvsCr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.32 //@resources.0/@pous.33" identifier="OperationPanelExtended" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OperationPanelExtended">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_EmergencyStop" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StartButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_AutomaticButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_StopButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_ResetButton" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampGreen" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_LampReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Q2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Reset" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="OperationPanelExtended" id="_qmvsIb34EequD661lQoFzA" text="EmergencyStop := NOT DI_StopButton;&#xA;StartButton := DI_StartButton;&#xA;ManuelMode := NOT DI_AutomaticButton;&#xA;AutomaticMode := DI_AutomaticButton;&#xA;Reset := DI_ResetButton;">
        <statements xsi:type="ST:Assignment" id="_qmvsI734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qmvsIb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:UnaryExpression" id="_qmvsIr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StopButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qmvsIb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qmvsJL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_StartButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="36" structuredText="_qmvsIb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:UnaryExpression" id="_qmvsJr34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
            <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qmvsIb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qmvsKL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_AutomaticButton"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qmvsK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="23" structuredText="_qmvsIb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Reset"/>
          <right xsi:type="STE:VariableExpression" id="_qmvsKr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_ResetButton"/>
        </statements>
      </implementations>
      <actions name="ACT_TurnLampGreen_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_Off" id="_qmvsFb34EequD661lQoFzA" text="DO_LampGreen := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvsF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="21" structuredText="_qmvsFb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmvsFr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampGreen_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampGreen_On" id="_qmvsGL34EequD661lQoFzA" text="DO_LampGreen := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmvsGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qmvsGL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampGreen"/>
            <right xsi:type="STE:Literal" id="_qmvsGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_Off">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_Off" id="_qmvsG734EequD661lQoFzA" text="DO_LampReset:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qmvsHb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qmvsG734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qmvsHL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnLampReset_On">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnLampReset_On" id="_qmvsHr34EequD661lQoFzA" text="DO_LampReset:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qmvsIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="18" structuredText="_qmvsHr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_LampReset"/>
            <right xsi:type="STE:Literal" id="_qmvsH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.34 //@resources.0/@pous.35" identifier="OpticalSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="OpticalSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DI_WPLight" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.29" identifier="PositionTransmitter" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PositionTransmitter">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_PositionReached" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.18" identifier="Potentiometer" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Potentiometer">
          <statements>//AT STACK</statements>
          <statements>//AT STACK RFID</statements>
          <statements>//AT CONVEYOR</statements>
          <statements>//AT CONVEYOR RFID</statements>
          <statements>//AT STAMP</statements>
          <statements>//AT STAMP RFIG</statements>
        </comment>
        <comment identifier="Potentiometer">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_Position" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="delta" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsLL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
        </internalVariables>
        <internalVariables name="iPosStack" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsLb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="24310"/>
        </internalVariables>
        <internalVariables name="iPosStackRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsLr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="23290"/>
        </internalVariables>
        <internalVariables name="iPosConveyor" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsL734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="15930"/>
        </internalVariables>
        <internalVariables name="iPosConveyorRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsML34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="14890"/>
        </internalVariables>
        <internalVariables name="iPosStamp" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsMb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7845"/>
        </internalVariables>
        <internalVariables name="iPosStampRFID" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmvsMr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="6810"/>
        </internalVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStackRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyorRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AtStampRFID" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Potentiometer" id="_qmwTEL34EequD661lQoFzA" text="IF((iPosStack-delta) &lt; AI_Position AND AI_Position &lt; (iPosStack+delta)) THEN //AT STACK&#xA;&#x9;AtStack := TRUE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStackRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosStackRFID+delta)) THEN //AT STACK RFID&#x9;&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := TRUE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosConveyor-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyor+delta)) THEN //AT CONVEYOR&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := TRUE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosConveyorRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosConveyorRFID+delta)) THEN //AT CONVEYOR RFID&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := TRUE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStamp-delta) &lt; AI_Position AND AI_Position &lt; (iPosStamp+delta)) THEN //AT STAMP&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := TRUE;&#xA;&#x9;AtStampRFID := FALSE;&#xA;ELSIF((iPosStampRFID-delta) &lt; AI_Position AND AI_Position &lt; (iPosStampRFID+delta)) THEN //AT STAMP RFIG&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := TRUE;&#xA;ELSE&#xA;&#x9;AtStack := FALSE;&#xA;&#x9;AtStackRFID := FALSE;&#xA;&#x9;AtConveyor := FALSE;&#xA;&#x9;AtConveyorRFID := FALSE;&#xA;&#x9;AtStamp := FALSE;&#xA;&#x9;AtStampRFID := FALSE;&#x9;&#xA;END_IF">
        <statements xsi:type="ST:If" id="_qmwThL34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="50" relStartLine="1" relEndLine="50" endColumnPos="5" structuredText="_qmwTEL34EequD661lQoFzA">
          <conditionalBlocks id="_qmwTIb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="7" relStartLine="1" relEndLine="7" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTFL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTE734EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTEb34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTEr34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStack"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="16" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTF734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTGb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTG734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTHr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTHb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTMr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="14" relStartLine="8" relEndLine="14" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTJb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTJL34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTIr34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStackRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTI734EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStackRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTJ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTJr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTKb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTKL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTKr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTLL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTL734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTLr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTMb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTML34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTQ734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="21" relStartLine="15" relEndLine="21" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTNr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTNb34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTM734EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTNL34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyor"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTN734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTOb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="19" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTQb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTVL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="28" relStartLine="22" relEndLine="28" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTR734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTRr34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTRL34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyorRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTRb34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosConveyorRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTSr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTTb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTTL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTT734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTTr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTUb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTUL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTU734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTUr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTZb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="35" relStartLine="29" relEndLine="35" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTWL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTV734EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTVb34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTVr34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStamp"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTWr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTWb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTW734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTXb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTX734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="16" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTYb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTY734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTdr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="36" absEndLine="42" relStartLine="36" relEndLine="42" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qmwTab34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qmwTaL34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTZr34EequD661lQoFzA" operator="SUBTRACT">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStampRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Position"/>
                  <right xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmwTZ734EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="iPosStampRFID"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="delta"/>
                    </subexpression>
                  </right>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:Assignment" id="_qmwTa734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTbb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTbL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTb734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTbr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTcb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTcL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTc734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTcr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTdb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTdL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
            </substatements>
          </conditionalBlocks>
          <conditionalBlocks id="_qmwTg734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="43" absEndLine="49" relStartLine="43" relEndLine="49" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
            <substatements xsi:type="ST:Assignment" id="_qmwTeL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStack"/>
              <right xsi:type="STE:Literal" id="_qmwTd734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTer34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStackRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTeb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTfL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="20" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyor"/>
              <right xsi:type="STE:Literal" id="_qmwTe734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTfr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="24" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtConveyorRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTfb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTgL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="17" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStamp"/>
              <right xsi:type="STE:Literal" id="_qmwTf734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
            <substatements xsi:type="ST:Assignment" id="_qmwTgr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="21" structuredText="_qmwTEL34EequD661lQoFzA">
              <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AtStampRFID"/>
              <right xsi:type="STE:Literal" id="_qmwTgb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.15 //@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="PresenceSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_WPDetected" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27 //@resources.0/@pous.36" identifier="PressureSensor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="PressureSensor">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="AI_CurrentPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.36" identifier="ProportionalValve" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AO_SetPressure" scope="VAR_INPUT" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </inputVariables>
        <comment identifier="ProportionalValve">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.12" callers="//@resources.0/@pous.28 //@resources.0/@pous.34" identifier="Ramp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="RampFull" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <comment identifier="Ramp">
          <statements>//Hardware</statements>
        </comment>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.26 //@resources.0/@pous.28" identifier="RFID" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Data_to_Write" scope="VAR_INPUT" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </inputVariables>
        <inputVariables name="bRead" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bWrite" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bAntOFF" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bAntON" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RFID">
          <statements>//Bit 0</statements>
          <statements>//Bit 1</statements>
          <statements>//Bit 2</statements>
          <statements>//Bit 3</statements>
          <statements>//Bit 4</statements>
          <statements>//Bit 5</statements>
          <statements>//Bit 6</statements>
          <statements>//Bit 7</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Write 0 at every Position (Deleting old Data)</statements>
          <statements>//Write on specified position specified data (here Pos:= 10, Value:=1)</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Fehlercodeauswertung</statements>
        </comment>
        <comment identifier="RFID">
          <statements>:// copy complete Data to internal Array // Set Loop-Counter to 0</statements>
          <statements>:// Read 4 Byte  // Wait until read done</statements>
          <statements>//copy data and reset command</statements>
          <statements>// Wait until Last command1 is false</statements>
          <statements>40: // increment counter // compare, if last dword copied</statements>
          <statements>50: // copy complete array back to data // set done = true</statements>
        </comment>
        <comment identifier="RFID">
          <statements>:// copy complete Data to internal Array // Set Loop-Counter to 0</statements>
          <statements>:// Write 4 Byte  // Wait until write done</statements>
          <statements>// reset command</statements>
          <statements>// Wait until Last command0 is false</statements>
          <statements>40: // increment counter // compare, if last dword copied</statements>
          <statements>50: // copy complete array back to data // set done = true</statements>
        </comment>
        <comment identifier="RFID">
          <statements>//Hardware</statements>
          <statements>//PAE</statements>
          <statements>//IO_Link Port2_in UID Byte 0</statements>
          <statements>//IO_Link Port2_in UID Byte 1</statements>
          <statements>//IO_Link Port2_in UID Byte 2</statements>
          <statements>//IO_Link Port2_in UID Byte 3</statements>
          <statements>//IO_Link Port2_in UID Byte 4</statements>
          <statements>//IO_Link Port2_in UID Byte 5</statements>
          <statements>//IO_Link Port2_in UID Byte 6</statements>
          <statements>//IO_Link Port2_in UID Byte 7</statements>
          <statements>//PAA</statements>
          <statements>//IO_Link Port2_out Antenne</statements>
          <statements>//IO_Link Port2_out Reserved_1</statements>
          <statements>//IO_Link Port2_out Reserved_2</statements>
          <statements>//IO_Link Port2_out Reserved_3</statements>
          <statements>//IO_Link Port2_out Reserved_4</statements>
          <statements>//IO_Link Port2_out Reserved_5</statements>
          <statements>//IO_Link Port2_out Reserved_6</statements>
          <statements>//Process Image Input</statements>
          <statements>//WRITE</statements>
          <statements>//READ</statements>
          <statements>//Software</statements>
          <statements>//Provces Image Output</statements>
        </comment>
        <internalVariables name="AI_Status" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_error_RFID" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Adr_H" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Adr_L" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_MSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_5" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_6" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_Data_LSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_CMD" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Adr_H" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Adr_L" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_MSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_5" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_6" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AO_Data_LSB" scope="VAR" type="BYTE" typeName="BYTE">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_0" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_CommandCode_3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StausByte_ANT_OFF_Conf" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_RFID_Present" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_ErrorOccured" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="StatusByte_Command_executed" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CMD_Write" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmwThb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2#1"/>
        </internalVariables>
        <internalVariables name="CMD_Read" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmwThr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2#10"/>
        </internalVariables>
        <internalVariables name="CMD_Antenna_Off" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmwTh734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2#10000"/>
        </internalVariables>
        <internalVariables name="CMD_Antenna_On" scope="VAR" type="BYTE" typeName="BYTE">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmw6IL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2#0"/>
        </internalVariables>
        <internalVariables name="Step" scope="VAR" type="INT" typeName="INT">
          <location/>
          <initialValue xsi:type="STE:Literal" id="_qmw6Ib34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
        </internalVariables>
        <internalVariables name="Counter" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="TagData" scope="VAR" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </internalVariables>
        <internalVariables name="DataToWriteCounter" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="RFID_Status" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE">
          <location/>
        </outputVariables>
        <outputVariables name="Error_Number" scope="VAR_OUTPUT" type="BYTE" typeName="BYTE">
          <location/>
        </outputVariables>
        <outputVariables name="Error_Code" scope="VAR_OUTPUT" type="WSTRING" typeName="wstring">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Writing" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Reading" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Done_Resetting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Data_Last_RFID" scope="VAR_OUTPUT" type="DERIVED" typeName="RFID_ByteArray">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RFID" id="_qm1Llr34EequD661lQoFzA" text="ACT_ConvertStatusByteToBits();&#xA;ACT_ErrorCodeTranslation();">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm1Ll734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qm1Llr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ConvertStatusByteToBits"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qm1LmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="26" structuredText="_qm1Llr34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ErrorCodeTranslation"/>
        </statements>
      </implementations>
      <actions name="ACT_AntennaOFF">
        <implementation xsi:type="ST:StructuredText" label="ACT_AntennaOFF" id="_qmw6Ir34EequD661lQoFzA" text="AO_CMD := CMD_Antenna_Off;">
          <statements xsi:type="ST:Assignment" id="_qmw6JL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qmw6Ir34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
            <right xsi:type="STE:VariableExpression" id="_qmw6I734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AntennaON">
        <implementation xsi:type="ST:StructuredText" label="ACT_AntennaON" id="_qmw6Jb34EequD661lQoFzA" text="AO_CMD := CMD_Antenna_On;">
          <statements xsi:type="ST:Assignment" id="_qmw6J734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qmw6Jb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
            <right xsi:type="STE:VariableExpression" id="_qmw6Jr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ConvertStatusByteToBits">
        <implementation xsi:type="ST:StructuredText" label="ACT_ConvertStatusByteToBits" id="_qmw6KL34EequD661lQoFzA" text="//Bit 0&#xA;IF((AI_Status AND 1)=1) THEN&#xA;&#x9;StausByte_CommandCode_0 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_0 := FALSE;&#xA;END_IF&#xA;//Bit 1&#xA;IF((AI_Status AND 2)=2) THEN&#xA;&#x9;StausByte_CommandCode_1 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_1 := FALSE;&#xA;END_IF&#xA;//Bit 2&#xA;IF((AI_Status AND 4)=4) THEN&#xA;&#x9;StausByte_CommandCode_2 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_2 := FALSE;&#xA;END_IF&#xA;//Bit 3&#xA;IF((AI_Status AND 8)=8) THEN&#xA;&#x9;StausByte_CommandCode_3 := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_CommandCode_3 := FALSE;&#xA;END_IF&#xA;//Bit 4&#xA;IF((AI_Status AND 16)=16) THEN&#xA;&#x9;StausByte_ANT_OFF_Conf := TRUE;&#xA;ELSE&#xA;&#x9;StausByte_ANT_OFF_Conf := FALSE;&#xA;END_IF&#xA;//Bit 5&#xA;IF((AI_Status AND 32)=32) THEN&#xA;&#x9;StatusByte_RFID_Present := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_RFID_Present := FALSE;&#xA;END_IF&#xA;//Bit 6&#xA;IF((AI_Status AND 64)=64) THEN&#xA;&#x9;StatusByte_ErrorOccured := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_ErrorOccured := FALSE;&#xA;END_IF&#xA;//Bit 7&#xA;IF((AI_Status AND 128)=128) THEN&#xA;&#x9;StatusByte_Command_executed := TRUE;&#xA;ELSE&#xA;&#x9;StatusByte_Command_executed := FALSE;&#xA;END_IF">
          <statements xsi:type="ST:If" id="_qmw6Mr34EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="6" relStartLine="2" relEndLine="6" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6Lr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="3" relStartLine="2" relEndLine="3" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6K734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Kr34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Kb34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6Lb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                <right xsi:type="STE:Literal" id="_qmw6LL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6Mb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6ML34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                <right xsi:type="STE:Literal" id="_qmw6L734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6PL34EequD661lQoFzA" statementType="IF" absStartLine="8" absEndLine="12" relStartLine="8" relEndLine="12" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6OL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6Nb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6NL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6M734EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6N734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                <right xsi:type="STE:Literal" id="_qmw6Nr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6O734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6Or34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                <right xsi:type="STE:Literal" id="_qmw6Ob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6Rr34EequD661lQoFzA" statementType="IF" absStartLine="14" absEndLine="18" relStartLine="14" relEndLine="18" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6Qr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6P734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Pr34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Pb34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6Qb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_2"/>
                <right xsi:type="STE:Literal" id="_qmw6QL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6Rb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="17" relStartLine="16" relEndLine="17" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6RL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_2"/>
                <right xsi:type="STE:Literal" id="_qmw6Q734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6UL34EequD661lQoFzA" statementType="IF" absStartLine="20" absEndLine="24" relStartLine="20" relEndLine="24" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6TL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6Sb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6SL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6R734EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="8"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="8"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6S734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_3"/>
                <right xsi:type="STE:Literal" id="_qmw6Sr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6T734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="23" relStartLine="22" relEndLine="23" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6Tr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_3"/>
                <right xsi:type="STE:Literal" id="_qmw6Tb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6Wr34EequD661lQoFzA" statementType="IF" absStartLine="26" absEndLine="30" relStartLine="26" relEndLine="30" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6Vr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="26" absEndLine="27" relStartLine="26" relEndLine="27" endColumnPos="31" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6U734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Ur34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Ub34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="16"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="16"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6Vb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_ANT_OFF_Conf"/>
                <right xsi:type="STE:Literal" id="_qmw6VL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6Wb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="28" absEndLine="29" relStartLine="28" relEndLine="29" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6WL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_ANT_OFF_Conf"/>
                <right xsi:type="STE:Literal" id="_qmw6V734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6ZL34EequD661lQoFzA" statementType="IF" absStartLine="32" absEndLine="36" relStartLine="32" relEndLine="36" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6YL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="32" absEndLine="33" relStartLine="32" relEndLine="33" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6Xb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6XL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6W734EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="32"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="32"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6X734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_RFID_Present"/>
                <right xsi:type="STE:Literal" id="_qmw6Xr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6Y734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="34" absEndLine="35" relStartLine="34" relEndLine="35" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6Yr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_RFID_Present"/>
                <right xsi:type="STE:Literal" id="_qmw6Yb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6br34EequD661lQoFzA" statementType="IF" absStartLine="38" absEndLine="42" relStartLine="38" relEndLine="42" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6ar34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="38" absEndLine="39" relStartLine="38" relEndLine="39" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6Z734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Zr34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6Zb34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="64"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="64"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6ab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="32" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_ErrorOccured"/>
                <right xsi:type="STE:Literal" id="_qmw6aL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6bb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="40" absEndLine="41" relStartLine="40" relEndLine="41" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6bL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="33" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_ErrorOccured"/>
                <right xsi:type="STE:Literal" id="_qmw6a734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qmw6eL34EequD661lQoFzA" statementType="IF" absStartLine="44" absEndLine="48" relStartLine="44" relEndLine="48" endColumnPos="5" structuredText="_qmw6KL34EequD661lQoFzA">
            <conditionalBlocks id="_qmw6dL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="44" absEndLine="45" relStartLine="44" relEndLine="45" endColumnPos="36" structuredText="_qmw6KL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmw6cb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmw6cL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:UnaryExpression" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmw6b734EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Status"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="128"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="128"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmw6c734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="36" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                <right xsi:type="STE:Literal" id="_qmw6cr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmw6d734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="46" absEndLine="47" relStartLine="46" relEndLine="47" endColumnPos="37" structuredText="_qmw6KL34EequD661lQoFzA">
              <substatements xsi:type="ST:Assignment" id="_qmw6dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="37" structuredText="_qmw6KL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                <right xsi:type="STE:Literal" id="_qmw6db34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CreateDataToWirte">
        <implementation xsi:type="ST:StructuredText" label="ACT_CreateDataToWirte" id="_qmxhML34EequD661lQoFzA" text="//Write 0 at every Position (Deleting old Data)&#xA;IF(DataToWriteCounter&lt;=127)THEN&#xA;&#x9;Data_to_Write.RFID_Data[DataToWriteCounter]:= INT_TO_BYTE(0);&#xA;&#x9;DataToWriteCounter := DataToWriteCounter +1;&#xA;END_IF&#xA;//Write on specified position specified data (here Pos:= 10, Value:=1)&#xA;Data_to_Write.RFID_Data[2]:= INT_TO_BYTE(1);">
          <statements xsi:type="ST:If" id="_qmxhOr34EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="5" structuredText="_qmxhML34EequD661lQoFzA">
            <conditionalBlocks id="_qmxhOb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" endColumnPos="44" structuredText="_qmxhML34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmxhMr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmxhMb34EequD661lQoFzA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="127"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmxhNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="61" structuredText="_qmxhML34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_qmxhM734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  </innerVariable>
                </left>
                <right xsi:type="STE:FunctionCallExpression" id="_qmxhNb34EequD661lQoFzA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_qmxhNL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmxhOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_qmxhML34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                <right xsi:type="STE:BinaryExpression" id="_qmxhN734EequD661lQoFzA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="DataToWriteCounter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </right>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qmxhPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="43" structuredText="_qmxhML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                <arrayIndices xsi:type="STE:Literal" id="_qmxhO734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
              </innerVariable>
            </left>
            <right xsi:type="STE:FunctionCallExpression" id="_qmxhPb34EequD661lQoFzA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qmxhPL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
              </parameters>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ErrorCodeTranslation">
        <implementation xsi:type="ST:StructuredText" label="ACT_ErrorCodeTranslation" id="_qmyvUL34EequD661lQoFzA" text="Error_Number:=AI_error_RFID;&#xA;&#xA;//Fehlercodeauswertung&#xA;IF(Error_Number=0)THEN&#xA;&#x9;Error_Code := &quot;no Error&quot;;&#xA;ELSIF(Error_Number=1)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Presence Error&quot;;&#x9;&#xA;ELSIF(Error_Number=5)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Parameterization Error&quot;;&#x9;&#xA;ELSIF(Error_Number=6)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Air interface disturbed&quot;;&#xA;ELSIF(Error_Number=12)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Memory Error&quot;;&#xA;ELSIF(Error_Number=13)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Error with the indicated storage adress&quot;;&#x9;&#xA;ELSIF(Error_Number=19)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Buffer Overflow&quot;;&#xA;ELSIF(Error_Number=20)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Serious System Error&quot;;&#xA;ELSIF(Error_Number=21)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Parameterization Error in the RESET-Command&quot;;&#xA;ELSIF(Error_Number=24)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Only RESET-Command allowed&quot;;&#xA;ELSIF(Error_Number=25)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Previous command is still active&quot;;&#xA;ELSIF(Error_Number=28)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Antenna is allready ON/OFF&quot;;&#xA;ELSIF(Error_Number=30)THEN&#x9;&#xA;&#x9;Error_Code := &quot;Wronge number of signs in the telegram&quot;;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_qmyvUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qmyvUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
            <right xsi:type="STE:VariableExpression" id="_qmyvUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_error_RFID"/>
          </statements>
          <statements xsi:type="ST:If" id="_qmyvlL34EequD661lQoFzA" statementType="IF" absStartLine="4" absEndLine="30" relStartLine="4" relEndLine="30" endColumnPos="5" structuredText="_qmyvUL34EequD661lQoFzA">
            <conditionalBlocks id="_qmyvV734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="25" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvVL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvU734EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="0"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="25" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvVb34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;no Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvXL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="31" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvWb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvWL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvW734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="31" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvWr34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Presence Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvYb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="39" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvXr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvXb34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="5"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvX734EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Parameterization Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvZr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" endColumnPos="40" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvY734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvYr34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="6"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvZb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="40" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvZL34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Air interface disturbed&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyva734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="12" absEndLine="13" relStartLine="12" relEndLine="13" endColumnPos="29" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvaL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvZ734EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvab34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Memory Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvcL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" endColumnPos="56" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvbb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvbL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="13"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvb734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="56" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvbr34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Error with the indicated storage adress&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvdb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="17" relStartLine="16" relEndLine="17" endColumnPos="32" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvcr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvcb34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="19"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="32" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvc734EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Buffer Overflow&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyver34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="18" absEndLine="19" relStartLine="18" relEndLine="19" endColumnPos="37" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvd734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvdr34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="20"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyveb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="37" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyveL34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Serious System Error&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvf734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="60" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvfL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyve734EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="21"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvfr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="60" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvfb34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Parameterization Error in the RESET-Command&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvhL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="22" absEndLine="23" relStartLine="22" relEndLine="23" endColumnPos="43" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvgb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvgL34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvg734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="43" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvgr34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Only RESET-Command allowed&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvib34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="25" relStartLine="24" relEndLine="25" endColumnPos="49" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvhr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvhb34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="25"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyviL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="49" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvh734EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Previous command is still active&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvjr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="26" absEndLine="27" relStartLine="26" relEndLine="27" endColumnPos="43" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvi734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvir34EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="28"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="43" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvjL34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Antenna is allready ON/OFF&quot;"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qmyvk734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="28" absEndLine="29" relStartLine="28" relEndLine="29" endColumnPos="55" structuredText="_qmyvUL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qmyvkL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qmyvj734EequD661lQoFzA" operator="EQUAL">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Number"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="30"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qmyvkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="55" structuredText="_qmyvUL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Error_Code"/>
                <right xsi:type="STE:Literal" id="_qmyvkb34EequD661lQoFzA" dataType="WSTRING" expressionType="LITERAL" symbol="&quot;Wronge number of signs in the telegram&quot;"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Read_Write_Test">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Read_Write_Test">
          <steps name="Init_ACT_Read_Write_Test" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0 //@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" local_ID="0" initialStep="true"/>
          <steps name="Read" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.1" local_ID="4" stepLevel="1"/>
          <steps name="Write" incomingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.5/@implementation/@transitions.3" local_ID="9" stepLevel="1"/>
          <transitions condition="NOT Done_Reading AND StatusByte_RFID_Present AND bRead" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Done_Reading" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="6"/>
          <transitions condition="NOT Done_Writing AND StatusByte_RFID_Present AND bWrite" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Done_Writing" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.5/@implementation/@steps.0" local_ID="11"/>
        </implementation>
      </actions>
      <actions name="ACT_ReadFromRFIDTag">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReadFromRFIDTag" id="_qmzWYL34EequD661lQoFzA" text="CASE Step OF &#xA;&#x9;100:// copy complete Data to internal Array // Set Loop-Counter to 0&#xA;&#x9;&#x9;Counter := 0;&#xA;&#x9;&#x9;Step := 110;&#x9;        &#xA;&#x9;        &#xA;&#x9;110:// Read 4 Byte  // Wait until read done&#xA;&#x9;&#x9;AO_Adr_L := INT_TO_BYTE(Counter); &#xA;&#x9;&#x9;AO_CMD := CMD_Read;&#xA; &#xA;&#x9;&#x9;IF(StatusByte_Command_executed AND StausByte_CommandCode_1)  THEN &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Step := 120;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#xA;&#x9;120: //copy data and reset command   &#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter]   := AI_Data_LSB;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+1] := AI_Data_6;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+2] := AI_Data_5;&#xA;&#x9;&#x9;Data_Last_RFID.RFID_Data[Counter+3] := AI_Data_MSB;&#xA;&#x9;&#x9;AO_CMD := CMD_Antenna_On;&#xA;&#x9;&#x9;Step := 130;&#xA;&#xA;&#x9;130: // Wait until Last command1 is false&#xA;&#x9;&#x9;IF (NOT StausByte_CommandCode_1) THEN &#xA;&#x9;&#x9;&#x9;Step := 140;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#x9;        &#xA;    140: // increment counter // compare, if last dword copied&#xA;        Counter := Counter + 4;&#xA;&#x9;    IF(Counter >= 100) THEN&#xA;&#x9;&#x9;&#x9;Step := 150;&#xA;        ELSE&#xA;            Step := 110;&#xA;&#x9;&#x9;END_IF;&#xA;&#x9;        &#xA;    150: // copy complete array back to data // set done = true&#xA;        Done_Reading := TRUE;&#xA;        Step := 10;&#xA;END_CASE">
          <statements xsi:type="ST:Case" id="_qmz9sb34EequD661lQoFzA" statementType="CASE" absStartLine="1" absEndLine="38" relStartLine="1" relEndLine="38" endColumnPos="7" structuredText="_qmzWYL34EequD661lQoFzA">
            <switch xsi:type="STE:VariableExpression" id="_qmz9cL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <cases id="_qmz9dr34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" startColumnPos="1" endColumnPos="13" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9cb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
              <substatements xsi:type="ST:Assignment" id="_qmz9c734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="2" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:Literal" id="_qmz9cr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9db34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="2" endColumnPos="13" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qmz9dL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
              </substatements>
            </cases>
            <cases id="_qmz9g734EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="6" absEndLine="12" relStartLine="6" relEndLine="12" startColumnPos="1" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9d734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
              <substatements xsi:type="ST:Assignment" id="_qmz9er34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="2" endColumnPos="34" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Adr_L"/>
                <right xsi:type="STE:FunctionCallExpression" id="_qmz9eb34EequD661lQoFzA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:VariableExpression" id="_qmz9eL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9fL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="2" endColumnPos="20" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_qmz9e734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Read"/>
              </substatements>
              <substatements xsi:type="ST:If" id="_qmz9gr34EequD661lQoFzA" statementType="IF" absStartLine="10" absEndLine="12" relStartLine="10" relEndLine="12" startColumnPos="2" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
                <conditionalBlocks id="_qmz9gb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="11" relStartLine="10" relEndLine="11" startColumnPos="2" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qmz9fr34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmz9fb34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qmz9gL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="3" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qmz9f734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="120"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qmz9lb34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="14" absEndLine="20" relStartLine="14" relEndLine="20" startColumnPos="1" endColumnPos="13" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9hL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="120"/>
              <substatements xsi:type="ST:Assignment" id="_qmz9h734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="52" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_qmz9hb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_qmz9hr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_LSB"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9ir34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="50" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qmz9iL34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_qmz9ib34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_6"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9jb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="50" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qmz9i734EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_qmz9jL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_5"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9kL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="52" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_Last_RFID">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qmz9jr34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
                    </arrayIndices>
                  </innerVariable>
                </left>
                <right xsi:type="STE:VariableExpression" id="_qmz9j734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_Data_MSB"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9kr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="26" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_qmz9kb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9lL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="13" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qmz9k734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="130"/>
              </substatements>
            </cases>
            <cases id="_qmz9nb34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="22" absEndLine="25" relStartLine="22" relEndLine="25" startColumnPos="1" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9lr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="130"/>
              <substatements xsi:type="ST:If" id="_qmz9nL34EequD661lQoFzA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" startColumnPos="2" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
                <conditionalBlocks id="_qmz9m734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" startColumnPos="2" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qmz9mL34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:UnaryExpression" id="_qmz9l734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_1"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qmz9mr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="3" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qmz9mb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="140"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qmz9qr34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="27" absEndLine="33" relStartLine="27" relEndLine="33" startColumnPos="4" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9nr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="140"/>
              <substatements xsi:type="ST:Assignment" id="_qmz9oL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="8" endColumnPos="30" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:BinaryExpression" id="_qmz9n734EequD661lQoFzA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </right>
              </substatements>
              <substatements xsi:type="ST:If" id="_qmz9qb34EequD661lQoFzA" statementType="IF" absStartLine="29" absEndLine="33" relStartLine="29" relEndLine="33" startColumnPos="5" endColumnPos="8" structuredText="_qmzWYL34EequD661lQoFzA">
                <conditionalBlocks id="_qmz9pb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="30" relStartLine="29" relEndLine="30" startColumnPos="5" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qmz9or34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qmz9ob34EequD661lQoFzA" operator="GREATER_EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="100"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qmz9pL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="3" endColumnPos="14" structuredText="_qmzWYL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qmz9o734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_qmz9qL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="31" absEndLine="32" relStartLine="31" relEndLine="32" startColumnPos="8" endColumnPos="23" structuredText="_qmzWYL34EequD661lQoFzA">
                  <substatements xsi:type="ST:Assignment" id="_qmz9p734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="12" endColumnPos="23" structuredText="_qmzWYL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qmz9pr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="110"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qmz9sL34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="35" absEndLine="37" relStartLine="35" relEndLine="37" startColumnPos="4" endColumnPos="18" structuredText="_qmzWYL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qmz9q734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="150"/>
              <substatements xsi:type="ST:Assignment" id="_qmz9rb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="8" endColumnPos="28" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Done_Reading"/>
                <right xsi:type="STE:Literal" id="_qmz9rL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qmz9r734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="8" endColumnPos="18" structuredText="_qmzWYL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qmz9rr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
              </substatements>
            </cases>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ResetRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ResetRFID">
          <steps name="Init_ACT_ResetRFID" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Antenna_OFF" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:ComplexAction" localId="4" qualifier="N" pouAction="//@resources.0/@pous.16/@actions.0"/>
          </steps>
          <steps name="Turn_Antenna_On" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:ComplexAction" localId="9" qualifier="N" pouAction="//@resources.0/@pous.16/@actions.1"/>
          </steps>
          <steps name="Set_Done_Resetting" incomingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.16/@actions.7/@implementation/@transitions.3" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.16/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT Done_Resetting AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StausByte_ANT_OFF_Conf" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NOT StausByte_ANT_OFF_Conf" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Done_Resetting" isJump="true" sourceStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.16/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
      <actions name="ACT_WriteOnRFIDTag">
        <implementation xsi:type="ST:StructuredText" label="ACT_WriteOnRFIDTag" id="_qm0kgL34EequD661lQoFzA" text="CASE Step OF &#xA;&#x9;200:// copy complete Data to internal Array // Set Loop-Counter to 0&#xA;&#x9;&#x9;Counter := 0;&#xA;&#x9;&#x9;Step := 210;&#x9;        &#xA;&#x9;        &#xA;&#x9;210:// Write 4 Byte  // Wait until write done&#xA;&#x9;&#x9;AO_Adr_L := INT_TO_BYTE(Counter); &#xA;&#x9;&#x9;AO_Data_LSB := Data_to_Write.RFID_Data[Counter];&#xA;&#x9;&#x9;AO_Data_6   := Data_to_Write.RFID_Data[Counter+1];&#xA;&#x9;&#x9;AO_Data_5   := Data_to_Write.RFID_Data[Counter+2];&#xA;&#x9;&#x9;AO_Data_MSB := Data_to_Write.RFID_Data[Counter+3];&#xA;&#x9;&#x9;AO_CMD := CMD_Write;&#xA; &#xA;&#x9;&#x9;IF(StatusByte_Command_executed AND StausByte_CommandCode_0)  THEN &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Step := 220;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#xA;&#x9;220: // reset command    &#xA;&#x9;&#x9;AO_CMD := CMD_Antenna_On;&#xA;&#x9;&#x9;Step := 230;&#xA;&#xA;&#x9;230: // Wait until Last command0 is false&#xA;&#x9;&#x9;IF (NOT StausByte_CommandCode_0) THEN &#xA;&#x9;&#x9;&#x9;Step := 240;&#xA;&#x9;&#x9;END_IF;&#x9;        &#xA;&#x9;        &#xA;    240: // increment counter // compare, if last dword copied&#xA;        Counter := Counter + 4;&#xA;&#x9;    IF(Counter >= 100) THEN&#xA;&#x9;&#x9;&#x9;Step := 250;&#xA;        ELSE&#xA;            Step := 210;&#xA;&#x9;&#x9;END_IF;&#xA;&#x9;        &#xA;    250: // copy complete array back to data // set done = true&#xA;        Done_Writing := TRUE;&#xA;        Step := 10;&#xA;END_CASE">
          <statements xsi:type="ST:Case" id="_qm0kwr34EequD661lQoFzA" statementType="CASE" absStartLine="1" absEndLine="38" relStartLine="1" relEndLine="38" endColumnPos="7" structuredText="_qm0kgL34EequD661lQoFzA">
            <switch xsi:type="STE:VariableExpression" id="_qm0kgb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <cases id="_qm0kh734EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="2" absEndLine="4" relStartLine="2" relEndLine="4" startColumnPos="1" endColumnPos="13" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kgr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="200"/>
              <substatements xsi:type="ST:Assignment" id="_qm0khL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="2" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:Literal" id="_qm0kg734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0khr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="2" endColumnPos="13" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qm0khb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
              </substatements>
            </cases>
            <cases id="_qm0koL34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="6" absEndLine="16" relStartLine="6" relEndLine="16" startColumnPos="1" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kiL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
              <substatements xsi:type="ST:Assignment" id="_qm0ki734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="2" endColumnPos="34" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Adr_L"/>
                <right xsi:type="STE:FunctionCallExpression" id="_qm0kir34EequD661lQoFzA" expressionType="FUNCTION_CALL" symbol="INT_TO_BYTE">
                  <parameters>
                    <assignedValue xsi:type="STE:VariableExpression" id="_qm0kib34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </parameters>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kjr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="2" endColumnPos="49" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_LSB"/>
                <right xsi:type="STE:VariableExpression" id="_qm0kjb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:VariableExpression" id="_qm0kjL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kkb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="2" endColumnPos="51" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_6"/>
                <right xsi:type="STE:VariableExpression" id="_qm0kkL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qm0kj734EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0klL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="2" endColumnPos="51" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_5"/>
                <right xsi:type="STE:VariableExpression" id="_qm0kk734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qm0kkr34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kl734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="2" endColumnPos="51" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_Data_MSB"/>
                <right xsi:type="STE:VariableExpression" id="_qm0klr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Data_to_Write">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RFID_Data">
                    <arrayIndices xsi:type="STE:BinaryExpression" id="_qm0klb34EequD661lQoFzA" operator="ADD">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="3"/>
                    </arrayIndices>
                  </innerVariable>
                </right>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kmb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="2" endColumnPos="21" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_qm0kmL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Write"/>
              </substatements>
              <substatements xsi:type="ST:If" id="_qm0kn734EequD661lQoFzA" statementType="IF" absStartLine="14" absEndLine="16" relStartLine="14" relEndLine="16" startColumnPos="2" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
                <conditionalBlocks id="_qm0knr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="14" absEndLine="15" relStartLine="14" relEndLine="15" startColumnPos="2" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qm0km734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qm0kmr34EequD661lQoFzA" operator="AND">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StatusByte_Command_executed"/>
                      <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qm0knb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="3" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qm0knL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="220"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qm0kpr34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="18" absEndLine="20" relStartLine="18" relEndLine="20" startColumnPos="1" endColumnPos="13" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kob34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="220"/>
              <substatements xsi:type="ST:Assignment" id="_qm0ko734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="26" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_CMD"/>
                <right xsi:type="STE:VariableExpression" id="_qm0kor34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="CMD_Antenna_On"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kpb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="13" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qm0kpL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="230"/>
              </substatements>
            </cases>
            <cases id="_qm0krr34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="22" absEndLine="25" relStartLine="22" relEndLine="25" startColumnPos="1" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kp734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="230"/>
              <substatements xsi:type="ST:If" id="_qm0krb34EequD661lQoFzA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" startColumnPos="2" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
                <conditionalBlocks id="_qm0krL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" startColumnPos="2" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qm0kqb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:UnaryExpression" id="_qm0kqL34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="StausByte_CommandCode_0"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qm0kq734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="3" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qm0kqr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="240"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qm0ku734EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="27" absEndLine="33" relStartLine="27" relEndLine="33" startColumnPos="4" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kr734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="240"/>
              <substatements xsi:type="ST:Assignment" id="_qm0ksb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="8" endColumnPos="30" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                <right xsi:type="STE:BinaryExpression" id="_qm0ksL34EequD661lQoFzA" operator="ADD">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="4"/>
                </right>
              </substatements>
              <substatements xsi:type="ST:If" id="_qm0kur34EequD661lQoFzA" statementType="IF" absStartLine="29" absEndLine="33" relStartLine="29" relEndLine="33" startColumnPos="5" endColumnPos="8" structuredText="_qm0kgL34EequD661lQoFzA">
                <conditionalBlocks id="_qm0ktr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="29" absEndLine="30" relStartLine="29" relEndLine="30" startColumnPos="5" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qm0ks734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qm0ksr34EequD661lQoFzA" operator="GREATER_EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Counter"/>
                      <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="100"/>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:Assignment" id="_qm0ktb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="3" endColumnPos="14" structuredText="_qm0kgL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qm0ktL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="250"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_qm0kub34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="31" absEndLine="32" relStartLine="31" relEndLine="32" startColumnPos="8" endColumnPos="23" structuredText="_qm0kgL34EequD661lQoFzA">
                  <substatements xsi:type="ST:Assignment" id="_qm0kuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="12" endColumnPos="23" structuredText="_qm0kgL34EequD661lQoFzA">
                    <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                    <right xsi:type="STE:Literal" id="_qm0kt734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="210"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </cases>
            <cases id="_qm0kwb34EequD661lQoFzA" statementType="CASE_BLOCK" absStartLine="35" absEndLine="37" relStartLine="35" relEndLine="37" startColumnPos="4" endColumnPos="18" structuredText="_qm0kgL34EequD661lQoFzA">
              <caseExpressions xsi:type="STE:Literal" id="_qm0kvL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="250"/>
              <substatements xsi:type="ST:Assignment" id="_qm0kvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="8" endColumnPos="28" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Done_Writing"/>
                <right xsi:type="STE:Literal" id="_qm0kvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm0kwL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="37" absEndLine="37" relStartLine="37" relEndLine="37" startColumnPos="8" endColumnPos="18" structuredText="_qm0kgL34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
                <right xsi:type="STE:Literal" id="_qm0kv734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="10"/>
              </substatements>
            </cases>
          </statements>
        </implementation>
      </actions>
      <actions name="Read_entry">
        <implementation xsi:type="ST:StructuredText" label="Read_entry" id="_qm1LkL34EequD661lQoFzA" text="Step := 100;">
          <statements xsi:type="ST:Assignment" id="_qm1Lkr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="11" structuredText="_qm1LkL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <right xsi:type="STE:Literal" id="_qm1Lkb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="100"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Write_entry">
        <implementation xsi:type="ST:StructuredText" label="Write_entry" id="_qm1Lk734EequD661lQoFzA" text="Step := 200;">
          <statements xsi:type="ST:Assignment" id="_qm1Llb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="11" structuredText="_qm1Lk734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Step"/>
            <right xsi:type="STE:Literal" id="_qm1LlL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="200"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.28 //@resources.0/@pous.30 //@resources.0/@pous.31 //@resources.0/@pous.34" identifier="Switch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Switch">
          <statements>//Software</statements>
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="DI_Extended" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_Retracted" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_Extend" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Extended" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Retracted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Extend">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Extend">
          <steps name="Init_ACT_Extend" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Extend_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetExtended" incomingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.0/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Extended AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Extended" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Extended" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.0/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
      <actions name="ACT_Retract">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Retract">
          <steps name="Init_ACT_Retract" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Cylinder" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.17/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="SetRetacted" incomingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.17/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.17/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Retracted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="DI_Retracted" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Retracted" isJump="true" sourceStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.17/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.3 //@resources.0/@pous.6 //@resources.0/@pous.4 //@resources.0/@pous.11" callers="//@resources.0/@pous.26" identifier="TurningTable" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="TurningTable">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AtStackInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenStackConveyor" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtConveyorInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="BetweenConveyorStamp" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <internalVariables name="AtStampInd" scope="VAR" type="DERIVED" typeName="InductiveSwitch">
          <location/>
        </internalVariables>
        <outputVariables name="Motor" scope="VAR_OUTPUT" type="DERIVED" typeName="Motor">
          <location/>
        </outputVariables>
        <outputVariables name="AtStack" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="AtConveyor" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="AtStamp" scope="VAR_OUTPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </outputVariables>
        <outputVariables name="Potentiometer" scope="VAR_OUTPUT" type="DERIVED" typeName="Potentiometer">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="TurningTable" id="_qm1Lmb34EequD661lQoFzA" text="Potentiometer();">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm1Lmr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="15" structuredText="_qm1Lmb34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Potentiometer"/>
        </statements>
      </implementations>
    </pous>
    <pous callers="//@resources.0/@pous.28" identifier="UltrasonicSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_UltraSonic" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.26" identifier="VacuumGripper" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripper">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.20/@actions.1/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.20/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.20/@actions.1/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.22 //@resources.0/@pous.23" callers="//@resources.0/@pous.29" identifier="VacuumGripperExtended" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Valve" scope="VAR_INPUT" type="DERIVED" typeName="Valve">
          <location/>
        </inputVariables>
        <inputVariables name="VacuumSwitch" scope="VAR_INPUT" type="DERIVED" typeName="VacuumSwitch">
          <location/>
        </inputVariables>
        <comment identifier="VacuumGripperExtended">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//NOT USED BUT USABLE</statements>
        </comment>
        <internalVariables name="VacuumHit" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryVacuumPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure1" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_VacuumBoundaryFlowPressure2" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_VacuumPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCReset" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="Intaken" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Released" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <actions name="ACT_Intake">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Intake">
          <steps name="Init_ACT_Intake" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPTakenIn" incomingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.0/@implementation/@transitions.2" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT Intaken AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Intaken" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.0/@implementation/@steps.0" local_ID="10"/>
        </implementation>
      </actions>
      <actions name="ACT_Release">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Release">
          <steps name="Init_ACT_Release" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnVacuumOff" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="SetWPReleased" incomingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.21/@actions.1/@implementation/@transitions.2" local_ID="8" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="N" actionVariable="//@resources.0/@pous.21/@declaration/@outputVariables.1"/>
          </steps>
          <transitions condition="NOT Released AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT VacuumSwitch.DI_TakenIn AND TurnVacuumOff.t>T#250ms" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="Released" isJump="true" sourceStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.21/@actions.1/@implementation/@steps.0" local_ID="12"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="VacuumSwitch" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="VacuumSwitch">
          <statements>//Hardware</statements>
        </comment>
        <outputVariables name="DI_TakenIn" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </outputVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.20 //@resources.0/@pous.21" identifier="Valve" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="Valve">
          <statements>//Hardware</statements>
        </comment>
        <internalVariables name="DO_VacuumOn" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_TurnVacuumOff">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOff" id="_qm1Lm734EequD661lQoFzA" text="DO_VacuumOn := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm1Lnb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qm1Lm734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qm1LnL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_TurnVacuumOn">
        <implementation xsi:type="ST:StructuredText" label="ACT_TurnVacuumOn" id="_qm1Lnr34EequD661lQoFzA" text="DO_VacuumOn := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm1LoL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qm1Lnr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_VacuumOn"/>
            <right xsi:type="STE:Literal" id="_qm1Ln734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.37" identifier="ValveBlock" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_BoundaryPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DI_BoundaryFlowPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_PressureSensor" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="AI_FlowPressure" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
        <internalVariables name="DO_SetBlockPressure" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
      <actions name="ACT_BlockadeBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_BlockadeBlockPressure" id="_qm1Lob34EequD661lQoFzA" text="DO_SetBlockPressure := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm1Lo734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qm1Lob34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_qm1Lor34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ReleaseBlockPressure">
        <implementation xsi:type="ST:StructuredText" label="ACT_ReleaseBlockPressure" id="_qm1LpL34EequD661lQoFzA" text="DO_SetBlockPressure := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm1Lpr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm1LpL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="DO_SetBlockPressure"/>
            <right xsi:type="STE:Literal" id="_qm1Lpb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.35" identifier="WeightModule" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_WPWeight" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.20 //@resources.0/@pous.18 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="Crane" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="bSR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bCR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="bStR" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripper">
          <location/>
        </inputVariables>
        <inputVariables name="Table" scope="VAR_INPUT" type="DERIVED" typeName="TurningTable">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPProvided" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Black" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_White" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stack_WPType_Metallic" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_IsSorting" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_LargeSortingConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_IsStamping" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_WPAvailable" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Stamp_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_RefillConveyor_IsSending" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Crane">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="CraneSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStack" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStackRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedConveyorRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStamp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedStampRFID" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Stamp_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="WPPickedUp" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Crane" id="_qm3AwL34EequD661lQoFzA" text="Table();&#xA;Check_Stack_WPProvided := Main.Stack_WPProvided;&#xA;Check_Stack_WPType_Black := Main.Stack_WPType_Black;&#xA;Check_Stack_WPType_White := Main.Stack_WPType_White;&#xA;Check_Stack_WPType_Metallic := Main.Stack_WPType_Metallic;&#xA;Check_LargeSortingConveyor_IsSorting := Main.LargeSortingConveyor_IsSorting;&#xA;Check_LargeSortingConveyor_AutomaticExecuteCompleted := Main.LargeSortingConveyor_AutomaticExecuteCompleted;&#xA;Check_Stamp_IsStamping := Main.Stamp_IsStamping;&#xA;Check_Stamp_WPAvailable := Main.Stamp_WPAvailable;&#xA;Check_Stamp_AutomaticExecuteCompleted := Main.Stamp_AutomaticExecuteCompleted;&#xA;Check_RefillConveyor_IsSending := Main.Check_RefillConveyor_IsSending;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Table.Motor.ACT_Stop();&#xA;END_IF&#xA;&#xA;IF(bSR AND NOT ReachedStackRFID)THEN&#xA;&#x9;ACT_MoveToStackRFID();&#xA;END_IF&#xA;IF(bCR AND NOT ReachedConveyorRFID)THEN&#xA;&#x9;ACT_MoveToConveyorRFID();&#xA;END_IF&#xA;IF(bStR AND NOT ReachedStampRFID)THEN&#xA;&#x9;ACT_MoveToStampRFID();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm3Awb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm3AwL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Table"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Aw734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="47" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPProvided"/>
          <right xsi:type="STE:VariableExpression" id="_qm3Awr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPProvided"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Axb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="51" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Black"/>
          <right xsi:type="STE:VariableExpression" id="_qm3AxL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Ax734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="51" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_White"/>
          <right xsi:type="STE:VariableExpression" id="_qm3Axr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Ayb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="57" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPType_Metallic"/>
          <right xsi:type="STE:VariableExpression" id="_qm3AyL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Ay734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="75" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_IsSorting"/>
          <right xsi:type="STE:VariableExpression" id="_qm3Ayr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_IsSorting"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Azb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="107" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm3AzL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3Az734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="47" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_IsStamping"/>
          <right xsi:type="STE:VariableExpression" id="_qm3Azr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_IsStamping"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3A0b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="49" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_WPAvailable"/>
          <right xsi:type="STE:VariableExpression" id="_qm3A0L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPAvailable"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3A0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="77" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm3A0r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3A1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="69" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          <right xsi:type="STE:VariableExpression" id="_qm3A1L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_IsSending"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3A1734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="39" structuredText="_qm3AwL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm3A1r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm3A2734EequD661lQoFzA" statementType="IF" absStartLine="13" absEndLine="15" relStartLine="13" relEndLine="15" endColumnPos="5" structuredText="_qm3AwL34EequD661lQoFzA">
          <conditionalBlocks id="_qm3A2r34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="13" absEndLine="14" relStartLine="13" relEndLine="14" endColumnPos="23" structuredText="_qm3AwL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm3A2L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm3A2b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="23" structuredText="_qm3AwL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </invokingVariable>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_qm3A4L34EequD661lQoFzA" statementType="IF" absStartLine="17" absEndLine="19" relStartLine="17" relEndLine="19" endColumnPos="5" structuredText="_qm3AwL34EequD661lQoFzA">
          <conditionalBlocks id="_qm3A3734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="17" absEndLine="18" relStartLine="17" relEndLine="18" endColumnPos="22" structuredText="_qm3AwL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qm3A3b34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qm3A3L34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bSR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStackRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm3A3r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="22" structuredText="_qm3AwL34EequD661lQoFzA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStackRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_qm3A5b34EequD661lQoFzA" statementType="IF" absStartLine="20" absEndLine="22" relStartLine="20" relEndLine="22" endColumnPos="5" structuredText="_qm3AwL34EequD661lQoFzA">
          <conditionalBlocks id="_qm3A5L34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="21" relStartLine="20" relEndLine="21" endColumnPos="25" structuredText="_qm3AwL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qm3A4r34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qm3A4b34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bCR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyorRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm3A4734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="25" structuredText="_qm3AwL34EequD661lQoFzA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyorRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
        <statements xsi:type="ST:If" id="_qm3A6r34EequD661lQoFzA" statementType="IF" absStartLine="23" absEndLine="25" relStartLine="23" relEndLine="25" endColumnPos="5" structuredText="_qm3AwL34EequD661lQoFzA">
          <conditionalBlocks id="_qm3A6b34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="24" relStartLine="23" relEndLine="24" endColumnPos="22" structuredText="_qm3AwL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:UnaryExpression" id="_qm3A5734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
              <subexpression xsi:type="STE:BinaryExpression" id="_qm3A5r34EequD661lQoFzA" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="bStR"/>
                <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStampRFID"/>
                </right>
              </subexpression>
            </condition>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm3A6L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="22" structuredText="_qm3AwL34EequD661lQoFzA">
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStampRFID"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_ConveyorAllowedToOperate" id="_qm1yoL34EequD661lQoFzA" text="Conveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm1yor34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qm1yoL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1yob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_StampAllowedToOperate" id="_qm1yo734EequD661lQoFzA" text="Stamp_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm1ypb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="31" structuredText="_qm1yo734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1ypL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm1ypr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;Stamp_AllowedToOperate := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedStack := FALSE;&#xA;ReachedConveyor := FALSE;&#xA;ReachedStamp := FALSE;&#x9;&#xA;WPType_White := FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm1yqL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm1yp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yqr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm1yqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yrL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1yq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yrr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="31" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1yrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ysL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="19" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qm1yr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ysr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="18" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qm1ysb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ytL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStack"/>
            <right xsi:type="STE:Literal" id="_qm1ys734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ytr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedConveyor"/>
            <right xsi:type="STE:Literal" id="_qm1ytb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yuL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="21" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedStamp"/>
            <right xsi:type="STE:Literal" id="_qm1yt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yur34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="21" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qm1yub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yvL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="21" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qm1yu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yvr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="24" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm1yvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ywL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="23" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qm1yv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1ywr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="24" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qm1ywb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yxL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="23" structuredText="_qm1ypr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qm1yw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_ConveyorAllowedToOperate" id="_qm1yxb34EequD661lQoFzA" text="Conveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm1yx734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qm1yxb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1yxr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_StampAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_StampAllowedToOperate" id="_qm1yyL34EequD661lQoFzA" text="Stamp_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm1yyr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qm1yyL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm1yyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStack">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStack" id="_qm1yy734EequD661lQoFzA" text="WPType_White:=Main.Stack_WPType_White;&#xA;WPType_Black:=Main.Stack_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stack_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stack_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stack_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stack_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qm1yzb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qm1yzL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1yz734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qm1yzr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y0b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y0L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y0r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y1L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y1734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qm1yy734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y1r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPTypeEqualsStamp">
        <implementation xsi:type="ST:StructuredText" label="Set_WPTypeEqualsStamp" id="_qm1y2L34EequD661lQoFzA" text="WPType_White:=Main.Stamp_WPType_White;&#xA;WPType_Black:=Main.Stamp_WPType_Black;&#x9;&#xA;WPType_Metallic:=Main.Stamp_WPType_Metallic;&#xA;WPWeight_Light:=Main.Stamp_WPWeight_Light;&#xA;WPWeight_Medium:=Main.Stamp_WPWeight_Medium;&#x9;&#xA;WPWeight_Heavy:=Main.Stamp_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qm1y2r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y2b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_White"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y3L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y2734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Black"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y3r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="43" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y3b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPType_Metallic"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y4L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="41" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y3734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Light"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y4b34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Medium"/>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm1y5L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qm1y2L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qm1y4734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp_WPWeight_Heavy"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyor">
          <steps name="Init_MoveToConveyor" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTC" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.7/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedConveyor" incomingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.7/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTC.t>T#8s AND Not Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyor" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.7/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToConveyorRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToConveyorRFID">
          <steps name="Init_MoveToConveyorRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTCRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.8/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTCRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtConveyorRFID" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedConveyorRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.8/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStack">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStack">
          <steps name="Init_MoveToMagazine" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_Clockwise_MTM" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Counterclockwise" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTS" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStack" incomingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.9/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_Clockwise_MTM.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStack" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.9/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStackRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStackRFID">
          <steps name="Init_MoveToStackRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMoveCrane" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Turn_CounterClockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_CLockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.4" local_ID="13" stepLevel="2"/>
          <steps name="First_Turn_CounterC_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" local_ID="18" stepLevel="2"/>
          <steps name="Second_Turn_Clockwise_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" local_ID="24" stepLevel="3"/>
          <steps name="StopCrane_MTSRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="4"/>
          <steps name="SetReachedStackRFID" incomingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.10/@implementation/@transitions.10" local_ID="33" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="34" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStack.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue OR Table.AtConveyor.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="15"/>
          <transitions condition="NOT (Table.AtStack.DI_SwitchTrue AND Table.AtStamp.DI_SwitchTrue AND Table.AtConveyor.DI_SwitchTrue)" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="First_Turn_CounterC_MTSRFID.t>T#8s AND NOT Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="Table.Potentiometer.AtStackRFID" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="ReachedStackRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.10/@implementation/@steps.0" local_ID="37"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStamp">
          <steps name="Init_MoveToStamp" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTSt" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStamp" incomingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.11/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.6"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTSt.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.AtStamp.DI_SwitchTrue" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStamp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.11/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToStampRFID">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToStampRFID">
          <steps name="Init_MoveToStampRFID" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Turn_CounterClockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Clockwise_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="2"/>
          <steps name="StopCrane_MTStRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" local_ID="13" stepLevel="3"/>
          <steps name="SetReachedStampRFID" incomingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.12/@implementation/@transitions.5" local_ID="16" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="17" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="6"/>
          <transitions condition="Turn_CounterClockwise_MTStRFID.t>T#8s" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Table.Potentiometer.AtStampRFID" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Table.Motor.Stopped" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" local_ID="15"/>
          <transitions condition="ReachedStampRFID" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.12/@implementation/@steps.0" local_ID="20"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_PickUpWP" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_Down" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="SetWPType" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" local_ID="6" stepLevel="2"/>
          <steps name="WPType_Is_WPTypeStack" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WPType_Is_WPTypeStamp" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="Turn_On_Vacuum_PWU" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.13/@implementation/@transitions.8" local_ID="19" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.9" local_ID="28" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@inputVariables.7"/>
          </steps>
          <steps name="SetWPPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.13/@implementation/@transitions.10" local_ID="35" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="36" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="WPWeight_Heavy=Main.Stack_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" local_ID="12"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPWeight_Heavy=Main.Stamp_WPWeight_Heavy;" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.8" local_ID="25"/>
          <transitions condition="Turn_On_Vacuum_PWU.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" local_ID="32"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.13/@implementation/@steps.0" local_ID="39"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_PutWPDown" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="WPWeight_Choice" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.3 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="WPLight" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="WPMedium" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="WPHeavy" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.6" local_ID="17" stepLevel="2"/>
          <steps name="Lower_Crane_PWD" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.4 //@resources.0/@pous.26/@actions.14/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" local_ID="21" stepLevel="3"/>
          <steps name="Put_WP_Down_1" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" local_ID="24" stepLevel="4"/>
          <steps name="Crane_Up" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.9" local_ID="27" stepLevel="5"/>
          <steps name="SetWPPutDown" incomingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.14/@implementation/@transitions.10" local_ID="30" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPLight.t>T#0ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPMedium.t>T#1000ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPHeavy.t>T#2000ms" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" local_ID="23"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" local_ID="29"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.14/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Waiting_For_Stack_To_Provide_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Check_WP_Type" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.13" local_ID="6" stepLevel="2"/>
          <steps name="RFID_Stack" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="Crane_To_Stamp_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.4" local_ID="13" stepLevel="4"/>
          <steps name="Pick_Up_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.5" local_ID="16" stepLevel="5"/>
          <steps name="Check_RC_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Crane_Turning_To_Conveyor_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.7" local_ID="22" stepLevel="7"/>
          <steps name="Putting_Down_WP_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.8" local_ID="25" stepLevel="8"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.9" local_ID="28" stepLevel="9"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.10" local_ID="31" stepLevel="10"/>
          <steps name="CheckStamp_WPAvailable" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.11 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.12" local_ID="34" stepLevel="11"/>
          <steps name="WP_Should_Be_Stamped" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.14 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.24" local_ID="44" stepLevel="3"/>
          <steps name="RFID_Stack2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.15" local_ID="48" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stack_1" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.16" local_ID="51" stepLevel="5"/>
          <steps name="Crane_Pick_Up_Wp_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.17" local_ID="54" stepLevel="6"/>
          <steps name="Check_RC_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.18" local_ID="57" stepLevel="7"/>
          <steps name="Crane_Turning_To_Stamp_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.19" local_ID="60" stepLevel="8"/>
          <steps name="Crane_Put_Down_WP_2" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.20" local_ID="63" stepLevel="9"/>
          <steps name="Stamping_WP" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.21 //@resources.0/@pous.26/@actions.15/@implementation/@transitions.22" local_ID="66" stepLevel="10"/>
          <steps name="CheckStamp_AutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.23" local_ID="74" stepLevel="11"/>
          <steps name="RFID_Stamp" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.24" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.25" local_ID="79" stepLevel="4"/>
          <steps name="Crane_Turning_To_Stamp_3" incomingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.25" outgoingTransitions="//@resources.0/@pous.26/@actions.15/@implementation/@transitions.26" local_ID="82" stepLevel="5"/>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_Stack_WPProvided" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Stack_WPType_Black" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_1.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="ReachedConveyor AND NOT Check_LargeSortingConveyor_IsSorting" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.8" local_ID="24"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.9" local_ID="27"/>
          <transitions condition="Short_Delay.t>T#50ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.9" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.10" local_ID="30"/>
          <transitions condition="Check_LargeSortingConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.10" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" local_ID="33"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.1" local_ID="37"/>
          <transitions condition="Check_Stamp_WPAvailable" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.11" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" local_ID="39"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="NOT Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.13" local_ID="47"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.13" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.14" local_ID="50"/>
          <transitions condition="ReachedStack" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.14" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.15" local_ID="53"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.15" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.16" local_ID="56"/>
          <transitions condition="NOT Check_RefillConveyor_IsSending AND Check_Rc_2.t>T#250ms" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.16" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.17" local_ID="59"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.17" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.18" local_ID="62"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.18" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" local_ID="65"/>
          <transitions condition="Check_Stack_WPType_Metallic OR Check_Stack_WPType_White" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.20" local_ID="69"/>
          <transitions condition="Check_Stack_WPType_Black" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.19" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.4" local_ID="71"/>
          <transitions condition="Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.20" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="76"/>
          <transitions condition="Check_Stamp_IsStamping" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.12" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.21" local_ID="78"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.21" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" local_ID="81"/>
          <transitions condition="ReachedStamp AND NOT Check_Stamp_AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.22" targetStep="//@resources.0/@pous.26/@actions.15/@implementation/@steps.5" local_ID="84"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Crane_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopCrane" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.16/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.2 //@resources.0/@pous.26/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="Crane_EmergencyHandled" incomingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.16/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Table.Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Table.Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.16/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Crane_ACT_Init" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Crane_MoveUp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Turn_To_Conveyor" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.5" local_ID="17" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.26/@declaration/@internalVariables.13"/>
          </steps>
          <steps name="Is_WP_At_Stamp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.1 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.6 //@resources.0/@pous.26/@actions.17/@implementation/@transitions.7" local_ID="23" stepLevel="5"/>
          <steps name="Turn_To_Stamp_Init" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.8" local_ID="29" stepLevel="6"/>
          <steps name="PicWPFromStampUp" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.9" local_ID="32" stepLevel="7"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.26/@actions.17/@implementation/@transitions.10" local_ID="37" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="N" actionVariable="//@resources.0/@pous.26/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedConveyor" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.4" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="NOT Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Check_Stamp_WPAvailable" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.5" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.6" local_ID="28"/>
          <transitions condition="ReachedStamp" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.6" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.7" local_ID="31"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.26/@actions.17/@implementation/@steps.0" local_ID="41"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.13 //@resources.0/@pous.38 //@resources.0/@pous.39 //@resources.0/@pous.40 //@resources.0/@pous.41 //@resources.0/@pous.42 //@resources.0/@pous.43 //@resources.0/@pous.44 //@resources.0/@pous.45" callers="//@resources.0/@pous.37" identifier="EnergyMonitor" type="FUNCTIONBLOCK">
      <declaration>
        <comment identifier="EnergyMonitor">
          <statements>//Hardware Input Variables</statements>
          <statements>//Hardware Output Variables</statements>
        </comment>
        <internalVariables name="BK_1_6_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_2_3_7_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="BK_4_5_8_9_10_11_Wattmeter" scope="VAR" type="DERIVED" typeName="Wattmeter">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_80l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="GearPoint_120l_min" scope="VAR" type="DERIVED" typeName="GearPointFlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor_4bar" scope="VAR" type="DERIVED" typeName="PressureSensor_4bar">
          <location/>
        </internalVariables>
        <internalVariables name="Flow_2to200l_min" scope="VAR" type="DERIVED" typeName="FlowSensor">
          <location/>
        </internalVariables>
        <internalVariables name="Transducer_0to10AC_0to10V" scope="VAR" type="DERIVED" typeName="A_to_V_Transducer">
          <location/>
        </internalVariables>
        <internalVariables name="ExtSensor_0to10V" scope="VAR" type="DERIVED" typeName="V_Sensor">
          <location/>
        </internalVariables>
        <internalVariables name="PressureSensor" scope="VAR" type="DERIVED" typeName="PressureSensor">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_left" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="SmallContacter_right" scope="VAR" type="DERIVED" typeName="ProtectiveContact">
          <location/>
        </internalVariables>
        <internalVariables name="ChangeoverMagnetVaveRelay" scope="VAR" type="DERIVED" typeName="MagnetValve">
          <location/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.6 //@resources.0/@pous.5 //@resources.0/@pous.12 //@resources.0/@pous.9 //@resources.0/@pous.2 //@resources.0/@pous.15 //@resources.0/@pous.19 //@resources.0/@pous.17 //@resources.0/@pous.16" callers="//@resources.0/@pous.37" identifier="LargeSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator1" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Seperator2" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp1" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp1" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp1" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="UltrasonicSensor" scope="VAR_INPUT" type="DERIVED" typeName="UltrasonicSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="OptRamp2" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndRamp2" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp2" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="OptEnd" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp3" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="RFID" scope="VAR_INPUT" type="DERIVED" typeName="RFID">
          <location/>
        </inputVariables>
        <inputVariables name="OptBeginning" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorInitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyorAutoamticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="LargeSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//NOT USED BUT USABLE</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="UINT" typeName="UINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="NumberOfWPsAtConveyor" scope="VAR_OUTPUT" type="USINT" typeName="USINT">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LargeSortingConveyor" id="_qm3n2b34EequD661lQoFzA" text="Panel();&#xA;ACT_CountWPsAtConveyor();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_AllowedToOperate := Main.Check_LargeSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyorInitCompleted := Main.Check_LargeSortingConveyor_FollowConveyorInitCompleted;&#xA;Check_FollowConveyorAutoamticExecuteCompleted := Main.Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm3n2r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm3n2b34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:FunctionCallStatement" id="_qm3n2734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qm3n2b34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CountWPsAtConveyor"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n3b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="32" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n3L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n3734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="30" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n3r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n4b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n4L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n4734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="36" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n4r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n5b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="74" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n5L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n5734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="96" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorInitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n5r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorInitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n6b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="120" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyorAutoamticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n6L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_LargeSortingConveyor_FollowConveyorAutoamticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm3n6734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="39" structuredText="_qm3n2b34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm3n6r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm4O4734EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="13" relStartLine="11" relEndLine="13" endColumnPos="5" structuredText="_qm3n2b34EequD661lQoFzA">
          <conditionalBlocks id="_qm4O4r34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="12" relStartLine="11" relEndLine="12" endColumnPos="17" structuredText="_qm3n2b34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm4O4L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm4O4b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="17" structuredText="_qm3n2b34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qm3A6734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm3A7b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qm3A6734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm3A7L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm3A7r34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Ramp1:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp2:=FALSE;&#xA;CurrentTarget_Ramp3:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm3A8L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm3A7734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A8r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm3A8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A9L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm3A8734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A9r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm3A9b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qm3A9734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A-r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qm3A-b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A_L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qm3A-734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3A_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qm3A_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BAL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qm3A_734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qm3BAb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm3BA734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BBr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="26" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp1"/>
            <right xsi:type="STE:Literal" id="_qm3BBb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="29" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qm3BB734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BCr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="26" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp2"/>
            <right xsi:type="STE:Literal" id="_qm3BCb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm3BDL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" endColumnPos="26" structuredText="_qm3A7r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp3"/>
            <right xsi:type="STE:Literal" id="_qm3BC734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qm3BDb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm3BD734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qm3BDb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm3BDr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_OneWP">
        <implementation xsi:type="ST:StructuredText" label="Set_OneWP" id="_qm3BEL34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=1;">
          <statements xsi:type="ST:Assignment" id="_qm3BEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qm3BEL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qm3BEb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qm3BE734EequD661lQoFzA" text="Priority_Black := 4;">
          <statements xsi:type="ST:Assignment" id="_qm3BFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qm3BE734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qm3BFL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qm3BFr34EequD661lQoFzA" text="Priority_Metallic := 3;">
          <statements xsi:type="ST:Assignment" id="_qm3BGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm3BFr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm3BF734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qm3BGb34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qm3BG734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qm3BGb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qm3BGr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ThreeWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ThreeWP" id="_qm3n0L34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=3;">
          <statements xsi:type="ST:Assignment" id="_qm3n0r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qm3n0L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qm3n0b34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_TwoWP">
        <implementation xsi:type="ST:StructuredText" label="Set_TwoWP" id="_qm3n0734EequD661lQoFzA" text="NumberOfWPsAtConveyor:=2;">
          <statements xsi:type="ST:Assignment" id="_qm3n1b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qm3n0734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qm3n1L34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_ZeroWP">
        <implementation xsi:type="ST:StructuredText" label="Set_ZeroWP" id="_qm3n1r34EequD661lQoFzA" text="NumberOfWPsAtConveyor:=0;">
          <statements xsi:type="ST:Assignment" id="_qm3n2L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qm3n1r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPsAtConveyor"/>
            <right xsi:type="STE:Literal" id="_qm3n1734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.5" local_ID="13" stepLevel="2"/>
          <steps name="Ramp_1" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp1Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" local_ID="35" stepLevel="4"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" local_ID="41" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="42" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="43" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="44" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="45" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.14" local_ID="52" stepLevel="2"/>
          <steps name="Ramp_2" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" local_ID="56" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="58" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="59" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="60" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp2Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.17" local_ID="74" stepLevel="4"/>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.20 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.21" local_ID="86" stepLevel="2"/>
          <steps name="Ramp_3" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" local_ID="90" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="91" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="92" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.9"/>
            <actions xsi:type="SFC:SimpleAction" localId="93" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="94" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Choice_Ramp3Full" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.23 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.24" local_ID="105" stepLevel="4"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.10/@implementation/@transitions.25" local_ID="115" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="116" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" local_ID="12"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="24"/>
          <transitions condition="Priority_White=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="27"/>
          <transitions condition="Priority_White=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="30"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" local_ID="34"/>
          <transitions condition="NOT Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="38"/>
          <transitions condition="Ramp1.RampFull.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="40"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="48"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" local_ID="51"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="55"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.3" local_ID="63"/>
          <transitions condition="Priority_Black=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="66"/>
          <transitions condition="Priority_Black=4" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="69"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" local_ID="73"/>
          <transitions condition="NOT Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="77"/>
          <transitions condition="Ramp2.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.5" local_ID="79"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" local_ID="85"/>
          <transitions condition="Priority_Metallic=3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="89"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="97"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" local_ID="100"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" local_ID="104"/>
          <transitions condition="NOT Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" local_ID="108"/>
          <transitions condition="Ramp3.RampFull.DI_WPDetected" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.7" local_ID="110"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.10/@implementation/@steps.0" local_ID="119"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.3 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2" local_ID="11" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.4" local_ID="18" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" local_ID="25" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="26" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.2 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.11/@implementation/@transitions.7" local_ID="31" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptRamp1.DI_WPLight AND NOT IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT IndRamp1.DI_WPMetallic AND NOT OptRamp1.DI_WPLight" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" local_ID="17"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="IndRamp1.DI_WPMetallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" local_ID="24"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.11/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_CountWPsAtConveyor">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CountWPsAtConveyor">
          <steps name="Init_ACT_CountWPsAtConveyor" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.4 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.8 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" local_ID="0" initialStep="true"/>
          <steps name="Wait500ms_0" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.3" local_ID="4" stepLevel="1"/>
          <steps name="Zero_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.2" local_ID="8" stepLevel="2"/>
          <steps name="Wait500ms_1" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.7" local_ID="17" stepLevel="1"/>
          <steps name="One_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.6" local_ID="21" stepLevel="2"/>
          <steps name="Wait500ms_2" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.10" local_ID="30" stepLevel="1"/>
          <steps name="Two_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.11" local_ID="34" stepLevel="2"/>
          <steps name="Wait500ms_3" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13 //@resources.0/@pous.28/@actions.12/@implementation/@transitions.15" local_ID="43" stepLevel="1"/>
          <steps name="Three_WP" incomingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.12/@implementation/@transitions.14" local_ID="47" stepLevel="2"/>
          <transitions condition="UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" local_ID="3"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND UltrasonicSensor.AI_UltraSonic>=15200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" local_ID="7"/>
          <transitions condition="NumberOfWPsAtConveyor=0" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Wait500ms_0.t>T#500ms AND NOT UltrasonicSensor.AI_UltraSonic>=15200" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" local_ID="20"/>
          <transitions condition="NumberOfWPsAtConveyor=1" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="23"/>
          <transitions condition="Wait500ms_1.t>T#500ms AND NOT (15200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=13200)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="25"/>
          <transitions condition="13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND (13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" local_ID="33"/>
          <transitions condition="Wait500ms_2.t>T#500ms AND NOT(13200>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=8500)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="36"/>
          <transitions condition="NumberOfWPsAtConveyor=2" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="40"/>
          <transitions condition="8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" local_ID="42"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND (8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" local_ID="46"/>
          <transitions condition="NumberOfWPsAtConveyor=3" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="49"/>
          <transitions condition="Wait500ms_3.t>T#500ms AND NOT(8500>UltrasonicSensor.AI_UltraSonic AND UltrasonicSensor.AI_UltraSonic>=4000)" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.12/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:ComplexAction" localId="5" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.1"/>
          </steps>
          <steps name="Wait_Till_Detection" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" local_ID="9" stepLevel="2"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" local_ID="12" stepLevel="3"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" local_ID="15" stepLevel="4"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="RFID_ReadWrite" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6" local_ID="21" stepLevel="6"/>
          <steps name="TrunConveyorOnAgain" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.11 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.17 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" local_ID="24" stepLevel="7"/>
          <steps name="TurnConveyorOff_1" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" local_ID="28" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="29" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher1_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9" local_ID="33" stepLevel="9"/>
          <steps name="Pusher1_Retracting" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.10" local_ID="36" stepLevel="10"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" local_ID="41" stepLevel="8"/>
          <steps name="Transporting_To_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" local_ID="44" stepLevel="9"/>
          <steps name="AllowFollowConveyorToReceiveWP" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" local_ID="47" stepLevel="10"/>
          <steps name="TurnConveyorOff_4" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.15" local_ID="50" stepLevel="11"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.16" local_ID="53" stepLevel="12"/>
          <steps name="TurnConveyorOff_2" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" local_ID="58" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="59" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Pusher2_Extending" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.19" local_ID="63" stepLevel="9"/>
          <steps name="Pusher2_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.20" local_ID="66" stepLevel="10"/>
          <steps name="TurnConveyorOff_3" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.21" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.22" local_ID="71" stepLevel="8">
            <actions xsi:type="SFC:ComplexAction" localId="72" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.10 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.16 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.20 //@resources.0/@pous.28/@actions.13/@implementation/@transitions.22" outgoingTransitions="//@resources.0/@pous.28/@actions.13/@implementation/@transitions.23" local_ID="77" stepLevel="13">
            <actions xsi:type="SFC:SimpleAction" localId="78" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.10"/>
            <actions xsi:type="SFC:SimpleAction" localId="79" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="PsBeginning.DI_WPDetected" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Wait_Till_Detection.t>T#300ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="CurrentTarget_Ramp1" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" local_ID="27"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.8" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" local_ID="32"/>
          <transitions condition="Seperator1.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.9" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" local_ID="35"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.10" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="38"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" local_ID="40"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.11" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" local_ID="43"/>
          <transitions condition="Transporting_To_Conveyor.t>T#1500ms" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.12" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="Check_FollowConveyorAutoamticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.13" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" local_ID="49"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.14" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" local_ID="52"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.15" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="55"/>
          <transitions condition="CurrentTarget_Ramp2" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" local_ID="57"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.16" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" local_ID="62"/>
          <transitions condition="Seperator2.Extended" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.17" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" local_ID="65"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.18" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="68"/>
          <transitions condition="CurrentTarget_Ramp3" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" local_ID="70"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.19" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" local_ID="75"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.20" targetStep="//@resources.0/@pous.28/@actions.13/@implementation/@steps.0" local_ID="82"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="LargeSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.14/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.14/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Pusher1_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Pusher2_Retracting_ES" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Switch_Retract" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.15/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.9"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Seperator1.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="Seperator2.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.15/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Conveyor_ACT_Init" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="TurnConveyorOn" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="S" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" local_ID="14" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="15" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" local_ID="19" stepLevel="5"/>
          <steps name="Reset_AllowFollowConveyorToInit" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" local_ID="22" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="R" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.28/@actions.16/@implementation/@transitions.7" local_ID="27" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.28/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="FollowConveyor_AllowedToInit" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" local_ID="13"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" local_ID="21"/>
          <transitions condition="NOT FollowConveyor_AllowedToInit AND Check_FollowConveyorInitCompleted" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" local_ID="26"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.28/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.10 //@resources.0/@pous.6 //@resources.0/@pous.21 //@resources.0/@pous.5" callers="//@resources.0/@pous.37" identifier="PicAlpha" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="AtPosition1" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition2" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition3" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="AtPosition4" scope="VAR_INPUT" type="DERIVED" typeName="PositionTransmitter">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Gripper" scope="VAR_INPUT" type="DERIVED" typeName="VacuumGripperExtended">
          <location/>
        </inputVariables>
        <inputVariables name="LiftingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Conveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlpha">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC</statements>
        </comment>
        <internalVariables name="WPPickedUp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPPutDown" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition1" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition2" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition3" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="ReachedPosition4" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="Conveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlpha" id="_qm4O9734EequD661lQoFzA" text="Check_AllowedToOperate := MAIN.Check_PicAlpha_AllowedToOperate;&#xA;Check_Conveyor_AutomaticExecuteCompleted := MAIN.Check_PicAlpha_Conveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qm4O-b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qm4O9734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qm4O-L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm4O-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="98" structuredText="_qm4O9734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Conveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm4O-r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_Conveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm4O_b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="39" structuredText="_qm4O9734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm4O_L34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm4PAb34EequD661lQoFzA" statementType="IF" absStartLine="4" absEndLine="6" relStartLine="4" relEndLine="6" endColumnPos="5" structuredText="_qm4O9734EequD661lQoFzA">
          <conditionalBlocks id="_qm4PAL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="4" absEndLine="5" relStartLine="4" relEndLine="5" endColumnPos="17" structuredText="_qm4O9734EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm4O_r34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm4O_734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="17" structuredText="_qm4O9734EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm4O5L34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;Conveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPPickedUp := FALSE;&#xA;WPPutDown := FALSE;&#xA;ReachedPosition1 := FALSE;&#xA;ReachedPosition2 := FALSE;&#xA;ReachedPosition3 := FALSE;&#xA;ReachedPosition4 := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm4O5r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm4O5b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O6L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Conveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm4O5734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O6r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm4O6b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O7L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPickedUp"/>
            <right xsi:type="STE:Literal" id="_qm4O6734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O7r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="18" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPPutDown"/>
            <right xsi:type="STE:Literal" id="_qm4O7b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O8L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="25" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition1"/>
            <right xsi:type="STE:Literal" id="_qm4O7734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O8r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="25" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition2"/>
            <right xsi:type="STE:Literal" id="_qm4O8b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O9L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="25" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition3"/>
            <right xsi:type="STE:Literal" id="_qm4O8734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm4O9r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="25" structuredText="_qm4O5L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ReachedPosition4"/>
            <right xsi:type="STE:Literal" id="_qm4O9b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos1">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos1">
          <steps name="Init_ACT_MoveToPos1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Turn_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.1/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position1_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.1/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT ReachedPosition1 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT (AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition1.DI_PositionReached AND Turn_Backwards_Pos1.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition1" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.1/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos2">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos2">
          <steps name="Init_ACT_MoveToPos2" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Turn_Backwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Turn_Forwards_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos2" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.2/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position2_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.2/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT ReachedPosition2 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition3.DI_PositionReached OR AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT (AtPosition1.DI_PositionReached AND AtPosition3.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition2.DI_PositionReached AND Turn_Backwards_Pos2.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition2" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.2/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos3">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos3">
          <steps name="Init_ACT_MoveToPos3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.3 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.4" local_ID="12" stepLevel="2"/>
          <steps name="Move_Backwards_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" local_ID="17" stepLevel="2"/>
          <steps name="Move_Forwards__Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" local_ID="23" stepLevel="3"/>
          <steps name="Stop_Motor_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.6 //@resources.0/@pous.29/@actions.3/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" local_ID="28" stepLevel="4"/>
          <steps name="Position3_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.29/@actions.3/@implementation/@transitions.10" local_ID="31" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="32" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.4"/>
          </steps>
          <transitions condition="NOT ReachedPosition3 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="9"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="14"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition4.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="NOT AtPosition3.DI_PositionReached AND Move_Backwards_Pos3.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" local_ID="30"/>
          <transitions condition="ReachedPosition3" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.7" targetStep="//@resources.0/@pous.29/@actions.3/@implementation/@steps.0" local_ID="35"/>
        </implementation>
      </actions>
      <actions name="ACT_MoveToPos4">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_MoveToPos4">
          <steps name="Init_ACT_MoveToPos4" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="DecideHowToMove_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Move_Forwards" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Move_Backwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" local_ID="12" stepLevel="2"/>
          <steps name="Move_Forwards_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" local_ID="18" stepLevel="3"/>
          <steps name="Stop_Motor_Pos4" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.29/@actions.4/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" local_ID="23" stepLevel="4"/>
          <steps name="Position4_Reached" incomingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.29/@actions.4/@implementation/@transitions.8" local_ID="26" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.5"/>
          </steps>
          <transitions condition="NOT ReachedPosition4 AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AtPosition1.DI_PositionReached OR AtPosition2.DI_PositionReached OR AtPosition3.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="9"/>
          <transitions condition="NOT(AtPosition1.DI_PositionReached AND AtPosition2.DI_PositionReached AND AtPosition3.DI_PositionReached)" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="15"/>
          <transitions condition="NOT AtPosition4.DI_PositionReached AND Move_Backwards_Pos4.t>T#4s" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="AtPosition4.DI_PositionReached" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="ReachedPosition4" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.4/@implementation/@steps.0" local_ID="30"/>
        </implementation>
      </actions>
      <actions name="ACT_PickUpWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PickUpWP">
          <steps name="Init_ACT_PickUpWP" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Turn_VacuumOn" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="WP_PickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.4" local_ID="13" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.5/@implementation/@transitions.6" local_ID="20" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="21" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@inputVariables.7"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" local_ID="12"/>
          <transitions condition="WPPickedUp" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="17"/>
          <transitions condition="Turn_VacuumOn.t>T#2s AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.5/@implementation/@steps.0" local_ID="24"/>
        </implementation>
      </actions>
      <actions name="ACT_PutDownWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_PutDownWP">
          <steps name="Init_ACT_PutDownWP" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="PicAlpha_Down" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Releasing_WP" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PicAlpha_Up" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="WP_PutDown" incomingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.6/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Extended" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="WPPutDown" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.6/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Move_To_Pos1" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="PickUpWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Move_To_Pos3" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="PutDownWP" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.7/@implementation/@transitions.6" local_ID="18" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="19" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.2"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="ReachedPosition1" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.29/@actions.7/@implementation/@steps.0" local_ID="22"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopPicAlpha" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" local_ID="6" stepLevel="2"/>
          <steps name="Turn_Vacuum_Off" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="3"/>
          <steps name="Retract_LiftingCylinder" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.29/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" local_ID="16" stepLevel="4"/>
          <steps name="PicAlpha_EmergencyHandled" incomingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="20" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped AND Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Motor.Stopped AND NOT Gripper.Intaken" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="Gripper.Released" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="LiftingCylinder.Retracted" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" local_ID="18"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.8/@implementation/@steps.0" local_ID="23"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Move_Up" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="WPAllreadyPickedUp" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Move_ToPos3" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3"/>
          <steps name="Put_WP_On_Conveyor" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" local_ID="17" stepLevel="4"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.29/@actions.9/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.29/@actions.9/@implementation/@transitions.6" local_ID="21" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.29/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="LiftingCylinder.Retracted AND NOT Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="6"/>
          <transitions condition="LiftingCylinder.Retracted AND Gripper.VacuumSwitch.DI_TakenIn" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="WPPickedUp" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="ReachedPosition3" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="WPPutDown" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.5" targetStep="//@resources.0/@pous.29/@actions.9/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="RefillConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBegining" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="RefillConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSending" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="RefillConveyor" id="_qm5dAL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_RefillConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_RefillConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_RefillConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_RefillConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qm5dAr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="62" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dAb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm5dBL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="68" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dA734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm5dBr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="62" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dBb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm5dCL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="92" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dB734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm5dCr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="116" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dCb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_RefillConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm5dDL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="39" structuredText="_qm5dAL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm5dC734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm5dEL34EequD661lQoFzA" statementType="IF" absStartLine="7" absEndLine="9" relStartLine="7" relEndLine="9" endColumnPos="5" structuredText="_qm5dAL34EequD661lQoFzA">
          <conditionalBlocks id="_qm5dD734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="7" absEndLine="8" relStartLine="7" relEndLine="8" endColumnPos="17" structuredText="_qm5dAL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm5dDb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm5dDr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="17" structuredText="_qm5dAL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="CountUp_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="CountUp_WPNumber" id="_qm418L34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs+1;">
          <statements xsi:type="ST:Assignment" id="_qm418r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm418L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qm418b34EequD661lQoFzA" operator="ADD">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qm418734EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qm419b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm418734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qm419L34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qm419r34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm41-L34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qm419r34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm419734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qm41-b34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm41-734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qm41-b34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm41-r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm41_L34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;&#xA;Check_FollowConveyor_InitCompleted := FALSE;&#xA;Check_AllowedToReceive := FALSE;&#xA;Check_AllowedToSend := FALSE;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm41_r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm41_b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42AL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm41_734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42Ar34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm42Ab34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42BL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="43" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qm42A734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42Br34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="41" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qm42Bb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42CL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qm42B734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42Cr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="20" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qm42Cb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42DL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm42C734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42Dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="31" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
            <right xsi:type="STE:Literal" id="_qm42Db34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42EL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="28" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
            <right xsi:type="STE:Literal" id="_qm42D734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm42Er34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="55" structuredText="_qm41_L34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm42Eb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qm42E734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm42Fb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qm42E734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm42FL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qm42Fr34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm42GL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qm42Fr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm42F734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.7/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.7/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="CountUpWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" local_ID="23" stepLevel="5"/>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.7" local_ID="26" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.12" local_ID="33" stepLevel="2"/>
          <steps name="Set_IsSending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Check_ifStillAllowedToOperate" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" local_ID="42" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" local_ID="49" stepLevel="5"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" local_ID="52" stepLevel="6"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" local_ID="55" stepLevel="7">
            <actions xsi:type="SFC:ComplexAction" localId="56" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" local_ID="61"/>
          <steps name="Receiving_again" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.16" local_ID="62" stepLevel="8"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18 //@resources.0/@pous.30/@actions.8/@implementation/@transitions.20" local_ID="69"/>
          <steps name="SendingCompleted" incomingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.30/@actions.8/@implementation/@transitions.19" local_ID="73">
            <actions xsi:type="SFC:SimpleAction" localId="74" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="75" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.5"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" local_ID="25"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="30"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" local_ID="32"/>
          <transitions condition="Check_AllowedToSend AND NumberOfWPs=3 AND Interstep_Sending.t>T#750ms" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" local_ID="36"/>
          <transitions condition="IsSending" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" local_ID="41"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="44"/>
          <transitions condition="(NOT Check_AllowedToSend OR NOT NumberOfWPs=3) AND Interstep_Sending.t>T#750ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="46"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" local_ID="51"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" local_ID="54"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" local_ID="59"/>
          <transitions condition="Check_AllowedToReceive" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.14" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.2" local_ID="64"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" local_ID="68"/>
          <transitions condition="NumberOfWPs=0" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" local_ID="72"/>
          <transitions condition="NOT IsSending AND AutomaticExecuteSendingCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.16" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.0" local_ID="78"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.15" targetStep="//@resources.0/@pous.30/@actions.8/@implementation/@steps.10" local_ID="80"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="RefillConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.9/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.9/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.30/@actions.10/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" local_ID="19" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="20" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.30/@actions.10/@implementation/@transitions.6" local_ID="24" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="25" qualifier="S" actionVariable="//@resources.0/@pous.30/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" local_ID="23"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.30/@actions.10/@implementation/@steps.0" local_ID="28"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.17 //@resources.0/@pous.6" callers="//@resources.0/@pous.37" identifier="PicAlphaConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsEnd" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToReceive" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToSend" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_PicAlpha_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="PicAlphaConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="NumberOfWPs" scope="VAR" type="INT" typeName="INT">
          <location/>
        </internalVariables>
        <internalVariables name="WPSeperated" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="PicAlpha_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteReceivingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteSendingCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="PicAlphaConveyor" id="_qm6EEL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_PicAlphaConveyor_AllowedToInit;&#xA;Check_AllowedToReceive := Main.Check_PicAlphaConveyor_AllowedToReceive;&#xA;Check_AllowedToSend := Main.Check_PicAlphaConveyor_AllowedToSend;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_InitCompleted;&#xA;Check_PicAlpha_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qm6EEr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="64" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EEb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EFL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="70" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToReceive"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EE734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToReceive"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="64" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToSend"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EFb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_AllowedToSend"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EGL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="94" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EF734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EGr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="106" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlpha_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EGb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_PicAlpha_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="118" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EG734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_PicAlphaConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EHr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="39" structuredText="_qm6EEL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EHb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm6EIr34EequD661lQoFzA" statementType="IF" absStartLine="8" absEndLine="10" relStartLine="8" relEndLine="10" endColumnPos="5" structuredText="_qm6EEL34EequD661lQoFzA">
          <conditionalBlocks id="_qm6EIb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="8" absEndLine="9" relStartLine="8" relEndLine="9" endColumnPos="17" structuredText="_qm6EEL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm6EH734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm6EIL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="17" structuredText="_qm6EEL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reduce_WPNumber">
        <implementation xsi:type="ST:StructuredText" label="Reduce_WPNumber" id="_qm5dEb34EequD661lQoFzA" text="NumberOfWPs := NumberOfWPs-1;">
          <statements xsi:type="ST:Assignment" id="_qm5dE734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm5dEb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:BinaryExpression" id="_qm5dEr34EequD661lQoFzA" operator="SUBTRACT">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
              <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="1"/>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qm5dFL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm5dFr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qm5dFL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm5dFb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToOperate" id="_qm5dF734EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm5dGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="40" structuredText="_qm5dF734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dGL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm5dGr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;PicAlpha_AllowedToOperate := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteReceivingCompleted := FALSE;&#xA;AutomaticExecuteSendingCompleted := FALSE;&#xA;&#xA;NumberOfWPs := 0;&#xA;WPSeperated := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm5dHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm5dG734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dHr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm5dHb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dIL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="34" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dH734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="40" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dJL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="43" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteReceivingCompleted"/>
            <right xsi:type="STE:Literal" id="_qm5dI734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="41" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteSendingCompleted"/>
            <right xsi:type="STE:Literal" id="_qm5dJb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="16" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qm5dJ734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm5dKr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qm5dGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSeperated"/>
            <right xsi:type="STE:Literal" id="_qm5dKb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Rest_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Rest_PicAlpha_AllowedToOperate" id="_qm5dK734EequD661lQoFzA" text="PicAlpha_AllowedToOperate := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm5dLb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="34" structuredText="_qm5dK734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dLL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qm5dLr34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm5dML34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qm5dLr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm5dL734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToOperate" id="_qm5dMb34EequD661lQoFzA" text="FollowConveyor_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm5dM734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="39" structuredText="_qm5dMb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dMr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_NumberOfWPsTo3">
        <implementation xsi:type="ST:StructuredText" label="Set_NumberOfWPsTo3" id="_qm5dNL34EequD661lQoFzA" text="NumberOfWPs := 3;">
          <statements xsi:type="ST:Assignment" id="_qm5dNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qm5dNL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="NumberOfWPs"/>
            <right xsi:type="STE:Literal" id="_qm5dNb34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="3"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PicAlpha_AllowedToOperate">
        <implementation xsi:type="ST:StructuredText" label="Set_PicAlpha_AllowedToOperate" id="_qm5dN734EequD661lQoFzA" text="PicAlpha_AllowedToOperate := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm5dOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="33" structuredText="_qm5dN734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm5dOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_SeperateWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SeperateWP">
          <steps name="Init_ACT_SeperateWP" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="WP_Seperated" incomingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.9/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPSeperated AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPSeperated" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.9/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Init_ACT_AutomaticExecute" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Choice_ReceivingSending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" local_ID="3" stepLevel="1"/>
          <steps name="Interstep_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.3" local_ID="7" stepLevel="2"/>
          <steps name="ConveyorForwards_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" local_ID="15" stepLevel="3"/>
          <steps name="StopConveyor_Receiving" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" local_ID="18" stepLevel="4">
            <actions xsi:type="SFC:ComplexAction" localId="19" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="ReceivingCompleted" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.6" local_ID="23" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="24" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.4"/>
          </steps>
          <steps name="Interstep_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.9" local_ID="30" stepLevel="2"/>
          <steps name="ThreeWPsAvailable" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" local_ID="38" stepLevel="3"/>
          <steps name="PicAlphaOperating" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" local_ID="41" stepLevel="4"/>
          <steps name="ConveyorForwards_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" local_ID="44" stepLevel="5"/>
          <steps name="SortWP_fromPicAlpha" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" local_ID="47" stepLevel="6"/>
          <steps name="ReduceWPNumber" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" local_ID="50" stepLevel="7"/>
          <steps name="ConveyorForwards_Sending_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" local_ID="53" stepLevel="8"/>
          <steps name="SeperateWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" local_ID="56" stepLevel="9"/>
          <steps name="StopConveyor_Sending" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.16" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" local_ID="59" stepLevel="10">
            <actions xsi:type="SFC:ComplexAction" localId="60" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="SortWP" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" local_ID="64" stepLevel="11"/>
          <steps name="ReduceWPNumber_again" incomingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.31/@actions.10/@implementation/@transitions.19 //@resources.0/@pous.31/@actions.10/@implementation/@transitions.20" local_ID="67" stepLevel="12"/>
          <transitions condition="NOT AutomaticExecuteReceivingCompleted AND NOT AutomaticExecuteSendingCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToReceive" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" local_ID="10"/>
          <transitions condition="NOT Check_AllowedToReceive AND Interstep_Receiving.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="12"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" local_ID="17"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" local_ID="22"/>
          <transitions condition="AutomaticExecuteReceivingCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="27"/>
          <transitions condition="Check_AllowedToSend" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" local_ID="29"/>
          <transitions condition="Check_AllowedToSend AND Interstep_Sending.t>T#100ms" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" local_ID="33"/>
          <transitions condition="NOT Check_AllowedToSend AND Interstep_Sending.t>T#100ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="35"/>
          <transitions condition="NumberOfWPs=3" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" local_ID="40"/>
          <transitions condition="Check_PicAlpha_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" local_ID="43"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" local_ID="46"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" local_ID="49"/>
          <transitions condition="NumberOfWPs=2" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="52"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" local_ID="55"/>
          <transitions condition="WPSeperated" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" local_ID="58"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="Check_FollowConveyor_AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="NumberOfWPs&lt;=0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.0" local_ID="70"/>
          <transitions condition="NumberOfWPs>0" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.31/@actions.10/@implementation/@steps.12" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Init_ACT_EmergencyStop" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteReceivingCompleted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.11/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1 //@resources.0/@pous.31/@actions.12/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="StopConveyor" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" local_ID="22" stepLevel="5">
            <actions xsi:type="SFC:ComplexAction" localId="23" qualifier="D" pouAction="//@resources.0/@pous.6/@actions.0"/>
          </steps>
          <steps name="AllowFollowConveyor_ToInitialise" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" local_ID="27" stepLevel="6"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.31/@actions.12/@implementation/@transitions.8" local_ID="30" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.31/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Wait.t>T#2s" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.5" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.6" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" local_ID="29"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.7" targetStep="//@resources.0/@pous.31/@actions.12/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="SafetyDoor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="SafetyDoor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SafetyDoor" id="_qm6EI734EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm6EJL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm6EI734EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qm6EI734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EJb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qm6EI734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EJ734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EKr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qm6EI734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EKb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6ELL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qm6EI734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EK734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.8" callers="//@resources.0/@pous.37" identifier="LightGrid" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanelExtended">
          <location/>
        </inputVariables>
        <comment identifier="LightGrid">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
        </comment>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="LightGrid" id="_qm6ELb34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm6ELr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm6ELb34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EML34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qm6ELb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EL734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6EMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qm6ELb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EMb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6ENL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qm6ELb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm6EM734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6ENr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qm6ELb34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm6ENb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
      </implementations>
    </pous>
    <pous callees="//@resources.0/@pous.12 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.17 //@resources.0/@pous.6 //@resources.0/@pous.15" callers="//@resources.0/@pous.37" identifier="SmallSortingConveyor" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="PsBeginning" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="IndSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OptSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PsBevorSwitch" scope="VAR_INPUT" type="DERIVED" typeName="PresenceSensor">
          <location/>
        </inputVariables>
        <inputVariables name="Switch" scope="VAR_INPUT" type="DERIVED" typeName="Switch">
          <location/>
        </inputVariables>
        <inputVariables name="Motor" scope="VAR_INPUT" type="DERIVED" typeName="Motor">
          <location/>
        </inputVariables>
        <inputVariables name="Ramp" scope="VAR_INPUT" type="DERIVED" typeName="Ramp">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToInit" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_AllowedToOperate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_InitCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_FollowConveyor_AutomaticExecuteCompleted" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_EngineStop" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="SmallSortingConveyor">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="ConveyorSpeed" scope="VAR" type="INT" typeName="INT">
          <location type="Q" dataType="None"/>
        </internalVariables>
        <internalVariables name="WPSorted" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPTypeChecked" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="TargetChanged" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Conveyor" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="CurrentTarget_Ramp" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_White" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Black" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="Priority_Metallic" scope="VAR" type="USINT" typeName="USINT">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToInit" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="FollowConveyor_AllowedToOperate" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsSorting" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="SmallSortingConveyor" id="_qm6rLL34EequD661lQoFzA" text="Check_AllowedToInit := Main.Check_SmallSortingConveyor_AllowedToInit;&#xA;Check_AllowedToOperate := Main.Check_SmallSortingConveyor_AllowedToOperate;&#xA;Check_FollowConveyor_InitCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_InitCompleted;&#xA;Check_FollowConveyor_AutomaticExecuteCompleted := Main.Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted;&#xA;Check_EngineStop := MAIN.PPU_EngineStop;&#xA;IF Check_EngineStop THEN&#xA;&#x9;Motor.ACT_Stop();&#xA;END_IF">
        <statements xsi:type="ST:Assignment" id="_qm6rLr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="68" structuredText="_qm6rLL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToInit"/>
          <right xsi:type="STE:VariableExpression" id="_qm6rLb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToInit"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6rML34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="74" structuredText="_qm6rLL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
          <right xsi:type="STE:VariableExpression" id="_qm6rL734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6rMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="98" structuredText="_qm6rLL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_InitCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm6rMb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_InitCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6rNL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="122" structuredText="_qm6rLL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_FollowConveyor_AutomaticExecuteCompleted"/>
          <right xsi:type="STE:VariableExpression" id="_qm6rM734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_SmallSortingConveyor_FollowConveyor_AutomaticExecuteCompleted"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm6rNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="39" structuredText="_qm6rLL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm6rNb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="MAIN">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PPU_EngineStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:If" id="_qm6rOr34EequD661lQoFzA" statementType="IF" absStartLine="6" absEndLine="8" relStartLine="6" relEndLine="8" endColumnPos="5" structuredText="_qm6rLL34EequD661lQoFzA">
          <conditionalBlocks id="_qm6rOb34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="7" relStartLine="6" relEndLine="7" endColumnPos="17" structuredText="_qm6rLL34EequD661lQoFzA" else="false">
            <condition xsi:type="STE:VariableExpression" id="_qm6rN734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_EngineStop"/>
            <substatements xsi:type="ST:FunctionCallStatement" id="_qm6rOL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="17" structuredText="_qm6rLL34EequD661lQoFzA">
              <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
            </substatements>
          </conditionalBlocks>
        </statements>
      </implementations>
      <actions name="Reset_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Reset_FollowConveyorAllowedToInit" id="_qm6EN734EequD661lQoFzA" text="FollowConveyor_AllowedToInit := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm6EOb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="37" structuredText="_qm6EN734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm6EOL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm6EOr34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;FollowConveyor_AllowedToInit := FALSE;&#xA;FollowConveyor_AllowedToOperate := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;IsSorting:=FALSE;&#xA;&#xA;WPSorted:=FALSE;&#xA;WPTypeChecked:=FALSE;&#xA;TargetChanged:=FALSE;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;CurrentTarget_Conveyor:=FALSE;&#xA;CurrentTarget_Ramp:=FALSE;&#xA;Check_AllowedToOperate :=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm6EPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm6EO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="37" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm6EPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="40" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm6EP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EQr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm6EQb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ERL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="16" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSorting"/>
            <right xsi:type="STE:Literal" id="_qm6EQ734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ERr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="15" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPSorted"/>
            <right xsi:type="STE:Literal" id="_qm6ERb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ESL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="20" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPTypeChecked"/>
            <right xsi:type="STE:Literal" id="_qm6ER734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ESr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="20" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="TargetChanged"/>
            <right xsi:type="STE:Literal" id="_qm6ESb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ETL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="19" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qm6ES734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6ETr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="19" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qm6ETb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EUL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="22" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm6ET734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="29" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Conveyor"/>
            <right xsi:type="STE:Literal" id="_qm6EUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" endColumnPos="25" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="CurrentTarget_Ramp"/>
            <right xsi:type="STE:Literal" id="_qm6EU734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm6EVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" endColumnPos="30" structuredText="_qm6EOr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_AllowedToOperate"/>
            <right xsi:type="STE:Literal" id="_qm6EVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_FollowConveyorAllowedToInit">
        <implementation xsi:type="ST:StructuredText" label="Set_FollowConveyorAllowedToInit" id="_qm6rIL34EequD661lQoFzA" text="FollowConveyor_AllowedToInit := TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm6rIr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="36" structuredText="_qm6rIL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="FollowConveyor_AllowedToInit"/>
            <right xsi:type="STE:Literal" id="_qm6rIb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityBlack">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityBlack" id="_qm6rI734EequD661lQoFzA" text="Priority_Black := 2;">
          <statements xsi:type="ST:Assignment" id="_qm6rJb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qm6rI734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Black"/>
            <right xsi:type="STE:Literal" id="_qm6rJL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="2"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityMetallic">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityMetallic" id="_qm6rJr34EequD661lQoFzA" text="Priority_Metallic := 1;">
          <statements xsi:type="ST:Assignment" id="_qm6rKL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm6rJr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm6rJ734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_PriorityWhite">
        <implementation xsi:type="ST:StructuredText" label="Set_PriorityWhite" id="_qm6rKb34EequD661lQoFzA" text="Priority_White := 1;">
          <statements xsi:type="ST:Assignment" id="_qm6rK734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="19" structuredText="_qm6rKb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Priority_White"/>
            <right xsi:type="STE:Literal" id="_qm6rKr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="1"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ChangeTarget">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ChangeTarget">
          <steps name="ACT_ChangeTarget_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetTargets" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.7"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.7" local_ID="26" stepLevel="2"/>
          <steps name="Ramp_End" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.8" local_ID="30" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.8"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.6/@implementation/@transitions.11" local_ID="43" stepLevel="2"/>
          <steps name="SetTargetChanged" incomingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.6/@implementation/@transitions.12" local_ID="53" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="54" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.3"/>
          </steps>
          <transitions condition="NOT TargetChanged AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Priority_White=1" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="Priority_White=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="23"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" local_ID="25"/>
          <transitions condition="Priority_Black=2" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="Priority_Black=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="34"/>
          <transitions condition="CurrentTarget_Ramp" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" local_ID="38"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" local_ID="42"/>
          <transitions condition="Priority_Metallic=1" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.3" local_ID="46"/>
          <transitions condition="Priority_Metallic=2" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.5" local_ID="49"/>
          <transitions condition="TargetChanged" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.6/@implementation/@steps.0" local_ID="57"/>
        </implementation>
      </actions>
      <actions name="ACT_CheckWPType">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_CheckWPType">
          <steps name="Conveyor_ACT_CheckWPType_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Reset_WPType" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" local_ID="3" stepLevel="1">
            <actions xsi:type="SFC:SimpleAction" localId="4" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="5" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="6" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Wait_a_little_bit" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" local_ID="11" stepLevel="2"/>
          <steps name="WP_Is_White" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3" local_ID="15" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="16" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="WP_Is_Metallic" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.5" local_ID="22" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Is_Black" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" local_ID="30" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="WP_Type_Checked" incomingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.3 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.7/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.7/@implementation/@transitions.8" local_ID="36" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="37" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.2"/>
          </steps>
          <transitions condition="NOT WPTypeChecked AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" local_ID="10"/>
          <transitions condition="Wait_a_little_bit.t>T#100ms AND NOT IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" local_ID="14"/>
          <transitions condition="WPType_White" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="19"/>
          <transitions condition="IndSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="26"/>
          <transitions condition="Reset_WPType.t>T#1s AND NOT IndSensor.DI_WPMetallic AND NOT OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" local_ID="29"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" local_ID="34"/>
          <transitions condition="WPTypeChecked" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.7/@implementation/@steps.0" local_ID="40"/>
        </implementation>
      </actions>
      <actions name="ACT_SortWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_SortWP">
          <steps name="Init_ACT_SortWP" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Checking_WP_Type" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Changing_Target" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="Chose_Right_Destination" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" local_ID="15" stepLevel="5"/>
          <steps name="Switch_Extending" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" local_ID="19" stepLevel="6"/>
          <steps name="Allow_FollowConveyorToOperate" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" local_ID="22" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Wait2sec" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" local_ID="27" stepLevel="8"/>
          <steps name="Stop_Allowence" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" local_ID="30" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="31" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.2"/>
          </steps>
          <steps name="Switch_Retracting" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10" local_ID="35" stepLevel="10"/>
          <steps name="Transporting_To_Ramp" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" local_ID="40" stepLevel="6"/>
          <steps name="TurnConveyorOff" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.10 //@resources.0/@pous.34/@actions.8/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" local_ID="44" stepLevel="11"/>
          <steps name="WP_Is_Sorted" incomingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.34/@actions.8/@implementation/@transitions.14" local_ID="47" stepLevel="12">
            <actions xsi:type="SFC:SimpleAction" localId="48" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@internalVariables.1"/>
          </steps>
          <transitions condition="NOT WPSorted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Wait.t>T#900ms OR IndSensor.DI_WPMetallic OR OptSensor.DI_WPLight" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="WPTypeChecked" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="TargetChanged" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="CurrentTarget_Conveyor" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" local_ID="18"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" local_ID="21"/>
          <transitions condition="FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" local_ID="26"/>
          <transitions condition="Wait2sec.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.8" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" local_ID="29"/>
          <transitions condition="NOT FollowConveyor_AllowedToOperate" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.9" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" local_ID="34"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.10" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="37"/>
          <transitions condition="CurrentTarget_Ramp" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" local_ID="39"/>
          <transitions condition="Transporting_To_Ramp.t>T#2s" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.11" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" local_ID="42"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.12" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" local_ID="46"/>
          <transitions condition="WPSorted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.13" targetStep="//@resources.0/@pous.34/@actions.8/@implementation/@steps.0" local_ID="51"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="SmallSortingConveyor_ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.9/@implementation/@transitions.2" local_ID="3" stepLevel="1"/>
          <steps name="Sort_WP" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" local_ID="11" stepLevel="2"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.9/@implementation/@transitions.4" local_ID="14" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="15" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="Check_AllowedToOperate AND NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Check_AllowedToOperate AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="NOT Check_AllowedToOperate AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="8"/>
          <transitions condition="WPSorted" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" local_ID="13"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.9/@implementation/@steps.0" local_ID="18"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Conveyor_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stop_Conveyor" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Retract_Switch" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Conveyor_EmergencyHandled" incomingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.10/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.10/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Init_ACT_Init" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Interstep" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1 //@resources.0/@pous.34/@actions.11/@implementation/@transitions.2" local_ID="5" stepLevel="1"/>
          <steps name="ConveyorForwards" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" local_ID="13" stepLevel="2"/>
          <steps name="ExtendSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" local_ID="16" stepLevel="3"/>
          <steps name="Allow_FollowConveyorToInit" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" local_ID="19" stepLevel="4"/>
          <steps name="RetractSwitch" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" local_ID="22" stepLevel="5"/>
          <steps name="Stop_Conveyors" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" local_ID="25" stepLevel="6"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.34/@actions.11/@implementation/@transitions.8" local_ID="28" stepLevel="7">
            <actions xsi:type="SFC:SimpleAction" localId="29" qualifier="S" actionVariable="//@resources.0/@pous.34/@declaration/@outputVariables.0"/>
          </steps>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" local_ID="4"/>
          <transitions condition="Check_AllowedToInit AND NOT InitCompleted AND Interstep.t>T#500ms" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="(NOT Check_AllowedToInit OR InitCompleted) AND Interstep.t>T#500ms" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="10"/>
          <transitions condition="Motor.TurningClockwise" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" local_ID="15"/>
          <transitions condition="Switch.Extended" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" local_ID="18"/>
          <transitions condition="Check_FollowConveyor_InitCompleted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" local_ID="21"/>
          <transitions condition="Switch.Retracted" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" local_ID="24"/>
          <transitions condition="Motor.Stopped" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.7" targetStep="//@resources.0/@pous.34/@actions.11/@implementation/@steps.0" local_ID="32"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.5 //@resources.0/@pous.7 //@resources.0/@pous.4 //@resources.0/@pous.2 //@resources.0/@pous.9 //@resources.0/@pous.25" callers="//@resources.0/@pous.37" identifier="Stack" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Seperator" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="InductiveSensor" scope="VAR_INPUT" type="DERIVED" typeName="InductiveSensor">
          <location/>
        </inputVariables>
        <inputVariables name="OpticalSensor" scope="VAR_INPUT" type="DERIVED" typeName="OpticalSensor">
          <location/>
        </inputVariables>
        <inputVariables name="WeightModule" scope="VAR_INPUT" type="DERIVED" typeName="WeightModule">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPPickedUp" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stack">
          <statements>//WPType</statements>
          <statements>//WPWeight</statements>
        </comment>
        <comment identifier="Stack">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPProvided" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stack" id="_qm75QL34EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_WPPickedUp := Main.Check_Stack_WPPickedUp;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm75Qb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm75QL34EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm75Q734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qm75QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qm75Qr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm75Rb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qm75QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm75RL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm75R734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qm75QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm75Rr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm75Sb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qm75QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm75SL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm75S734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="47" structuredText="_qm75QL34EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPPickedUp"/>
          <right xsi:type="STE:VariableExpression" id="_qm75Sr34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stack_WPPickedUp"/>
          </right>
        </statements>
      </implementations>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qm6rO734EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm6rPb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qm6rO734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm6rPL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm7SML34EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;WPType_White:=FALSE;&#xA;WPType_Black:=FALSE;&#xA;WPType_Metallic:=FALSE;&#xA;WPWeight_Light:=FALSE;&#xA;WPWeight_Medium:=FALSE;&#xA;WPWeight_Heavy:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm7SMr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm7SMb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SNL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm7SM734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SNr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="19" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qm7SNb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SOL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="19" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qm7SN734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SOr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="22" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm7SOb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SPL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qm7SO734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SPr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="22" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qm7SPb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7SQL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="21" structuredText="_qm7SML34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qm7SP734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer250ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer250ms" id="_qm7SQb34EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#250MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm7SRL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm7SQb34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm7SQr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm7SQ734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#250MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPParameters_AND_WPProvided">
        <implementation xsi:type="ST:StructuredText" label="Set_WPParameters_AND_WPProvided" id="_qm7SRb34EequD661lQoFzA" text="//WPType&#xA;IF(NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=TRUE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=TRUE;&#xA;&#x9;WPType_Metallic:=FALSE;&#xA;ELSIF(InductiveSensor.DI_WPMetallic)THEN&#xA;&#x9;WPType_Black:=FALSE;&#xA;&#x9;WPType_White:=FALSE;&#xA;&#x9;WPType_Metallic:=TRUE;&#xA;END_IF&#xA;//WPWeight&#xA;IF(WeightModule.AI_WPWeight&lt;12000)THEN&#xA;&#x9;WPWeight_Light:=TRUE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=TRUE;&#xA;&#x9;WPWeight_Heavy:=FALSE;&#xA;ELSIF(2400&lt;=WeightModule.AI_WPWeight)THEN&#xA;&#x9;WPWeight_Light:=FALSE;&#xA;&#x9;WPWeight_Medium:=FALSE;&#xA;&#x9;WPWeight_Heavy:=TRUE;&#x9;&#xA;END_IF&#xA;&#xA;WPProvided:=TRUE;">
          <statements xsi:type="ST:If" id="_qm7SYb34EequD661lQoFzA" statementType="IF" absStartLine="2" absEndLine="14" relStartLine="2" relEndLine="14" endColumnPos="5" structuredText="_qm7SRb34EequD661lQoFzA">
            <conditionalBlocks id="_qm7STr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="2" absEndLine="5" relStartLine="2" relEndLine="5" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7SR734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm7SRr34EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                    </subexpression>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7SSb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="19" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qm7SSL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SS734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="20" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qm7SSr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7STb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qm7STL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qm7SV734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="6" absEndLine="9" relStartLine="6" relEndLine="9" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7SUL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm7ST734EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:UnaryExpression" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                    <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                    </subexpression>
                  </left>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="OpticalSensor">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPLight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7SUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="20" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qm7SUb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="19" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qm7SU734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qm7SVb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qm7SYL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="10" absEndLine="13" relStartLine="10" relEndLine="13" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7SWb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qm7SWL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="InductiveSensor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_WPMetallic"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7SW734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="20" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
                <right xsi:type="STE:Literal" id="_qm7SWr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SXb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="20" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
                <right xsi:type="STE:Literal" id="_qm7SXL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SX734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
                <right xsi:type="STE:Literal" id="_qm7SXr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:If" id="_qm7Sfb34EequD661lQoFzA" statementType="IF" absStartLine="16" absEndLine="28" relStartLine="16" relEndLine="28" endColumnPos="5" structuredText="_qm7SRb34EequD661lQoFzA">
            <conditionalBlocks id="_qm7Sar34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="16" absEndLine="19" relStartLine="16" relEndLine="19" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7SY734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm7SYr34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </left>
                  <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7SZb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="21" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qm7SZL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7SZ734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qm7SZr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7Sab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qm7SaL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qm7Sc734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="20" absEndLine="23" relStartLine="20" relEndLine="23" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7SbL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm7Sa734EequD661lQoFzA" operator="AND">
                  <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                    <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="12000"/>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </right>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="LESSER_THAN">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="24000"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7Sbr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qm7Sbb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7ScL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qm7Sb734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7Scr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qm7Scb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qm7SfL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="24" absEndLine="27" relStartLine="24" relEndLine="27" endColumnPos="21" structuredText="_qm7SRb34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm7Sdb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm7SdL34EequD661lQoFzA" operator="LESSER_EQUAL">
                  <left xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2400"/>
                  <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="WeightModule">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_WPWeight"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm7Sd734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="22" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
                <right xsi:type="STE:Literal" id="_qm7Sdr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7Seb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="23" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
                <right xsi:type="STE:Literal" id="_qm7SeL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm7Se734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="21" structuredText="_qm7SRb34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
                <right xsi:type="STE:Literal" id="_qm7Ser34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm7Sf734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" endColumnPos="16" structuredText="_qm7SRb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPProvided"/>
            <right xsi:type="STE:Literal" id="_qm7Sfr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_ProvideWP">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_ProvideWP">
          <steps name="ACT_ProvideWP_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="WP_Ready" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.5 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" local_ID="6" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="7" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
            <actions xsi:type="SFC:SimpleAction" localId="8" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
            <actions xsi:type="SFC:SimpleAction" localId="9" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
            <actions xsi:type="SFC:SimpleAction" localId="11" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
            <actions xsi:type="SFC:SimpleAction" localId="12" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="Black" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" local_ID="17" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="18" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.2"/>
          </steps>
          <steps name="Light" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4" local_ID="22" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="23" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.4"/>
          </steps>
          <steps name="White" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.6" local_ID="29" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="30" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.1"/>
          </steps>
          <steps name="Metallic" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" local_ID="37" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="38" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.3"/>
          </steps>
          <steps name="Weight_Choice" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.9 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.10 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" local_ID="42" stepLevel="4"/>
          <steps name="Medium" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.10" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.11" local_ID="49" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="50" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.5"/>
          </steps>
          <steps name="Heavy" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.12" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" local_ID="56" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="57" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.6"/>
          </steps>
          <steps name="WP_Provided" incomingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.4 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.11 //@resources.0/@pous.35/@actions.4/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.35/@actions.4/@implementation/@transitions.14" local_ID="63" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="64" qualifier="S" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Seperator.Extended AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND NOT OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" local_ID="16"/>
          <transitions condition="WPType_Black" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="21"/>
          <transitions condition="WPWeight_Light" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="26"/>
          <transitions condition="NOT InductiveSensor.DI_WPMetallic AND OpticalSensor.DI_WPLight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" local_ID="28"/>
          <transitions condition="WPType_White" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="33"/>
          <transitions condition="InductiveSensor.DI_WPMetallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" local_ID="36"/>
          <transitions condition="WPType_Metallic" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.6" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" local_ID="41"/>
          <transitions condition="WeightModule.AI_WPWeight&lt;12000" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.4" local_ID="45"/>
          <transitions condition="12000&lt;=WeightModule.AI_WPWeight AND WeightModule.AI_WPWeight&lt;24000" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" local_ID="48"/>
          <transitions condition="WPWeight_Medium" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.8" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="53"/>
          <transitions condition="2400&lt;=WeightModule.AI_WPWeight" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.7" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" local_ID="55"/>
          <transitions condition="WPWeight_Heavy" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.9" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" local_ID="60"/>
          <transitions condition="WPProvided" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.10" targetStep="//@resources.0/@pous.35/@actions.4/@implementation/@steps.0" local_ID="67"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="ACT_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Short_Delay" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" local_ID="3" stepLevel="1"/>
          <steps name="Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2" local_ID="7" stepLevel="2"/>
          <steps name="Dont_Provide_WP" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" local_ID="12" stepLevel="2">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <steps name="Waiting_For_Crane_To_Pick_Up" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.2 //@resources.0/@pous.35/@actions.5/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" local_ID="18" stepLevel="3"/>
          <steps name="Stack_Retracing" incomingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.35/@actions.5/@implementation/@transitions.6" local_ID="21" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="R" actionVariable="//@resources.0/@pous.35/@declaration/@internalVariables.0"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Timer.Q AND NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" local_ID="6"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="9"/>
          <transitions condition="Timer.Q AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" local_ID="16"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue AND Check_WPPickedUp" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.4" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" local_ID="20"/>
          <transitions condition="Seperator.Retracted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.5" targetStep="//@resources.0/@pous.35/@actions.5/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Magazine_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stack_Retracting" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Stack_EmergencyHandled" incomingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.6/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.6/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stack_ACT_Init" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" local_ID="0" initialStep="true"/>
          <steps name="Set_WP_Parameters" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" local_ID="6" stepLevel="1"/>
          <steps name="Retract_Cylinder_Init" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.0 //@resources.0/@pous.35/@actions.7/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" local_ID="10" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.35/@actions.7/@implementation/@transitions.4" local_ID="13" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="N" actionVariable="//@resources.0/@pous.35/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="3"/>
          <transitions condition="NOT InitCompleted AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" local_ID="5"/>
          <transitions condition="WPProvided" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.1" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Seperator.Retracted" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.2" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" local_ID="12"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.3" targetStep="//@resources.0/@pous.35/@actions.7/@implementation/@steps.0" local_ID="17"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.7 //@resources.0/@pous.13 //@resources.0/@pous.14 //@resources.0/@pous.4 //@resources.0/@pous.5 //@resources.0/@pous.1" callers="//@resources.0/@pous.37" identifier="Stamp" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Panel" scope="VAR_INPUT" type="DERIVED" typeName="OperationPanel">
          <location/>
        </inputVariables>
        <inputVariables name="PressureSensor" scope="VAR_INPUT" type="DERIVED" typeName="PressureSensor">
          <location/>
        </inputVariables>
        <inputVariables name="PropValve" scope="VAR_INPUT" type="DERIVED" typeName="ProportionalValve">
          <location/>
        </inputVariables>
        <inputVariables name="WPAvailable" scope="VAR_INPUT" type="DERIVED" typeName="MicroSwitch">
          <location/>
        </inputVariables>
        <inputVariables name="StampingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="MonostableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SlidingCylinder" scope="VAR_INPUT" type="DERIVED" typeName="BistableCylinder">
          <location/>
        </inputVariables>
        <inputVariables name="SoftwareEmergency" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_Allowed_To_Operate" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Light" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Medium" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="Check_WPWeight_Heavy" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="Stamp">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="WPStamped" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_White" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Black" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPType_Metallic" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Light" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Medium" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="WPWeight_Heavy" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="IsStamping" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="ST:StructuredText" label="Stamp" id="_qm8gV734EequD661lQoFzA" text="Panel();&#xA;StartButton := Panel.StartButton;&#xA;ManuelMode := Panel.ManuelMode; &#xA;AutomaticMode := Panel.AutomaticMode;&#xA;EmergencyStop := Panel.EmergencyStop;&#xA;Check_Allowed_To_Operate := Main.Check_Stamp_AllowedToOperate;&#xA;Check_WPWeight_Light:=Main.Crane_WPWeight_Light;&#xA;Check_WPWeight_Medium:=Main.Crane_WPWeight_Medium;&#xA;Check_WPWeight_Heavy:=Main.Crane_WPWeight_Heavy;">
        <statements xsi:type="ST:FunctionCallStatement" id="_qm8gWL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="7" structuredText="_qm8gV734EequD661lQoFzA">
          <functionCall expressionType="FUNCTION_CALL" symbol="Panel"/>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gWr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="32" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gWb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gXL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="30" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gW734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gXr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="36" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gXb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gYL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="36" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gX734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="61" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Allowed_To_Operate"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gYb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_Stamp_AllowedToOperate"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="47" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gY734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Light"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gZr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="49" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gZb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Medium"/>
          </right>
        </statements>
        <statements xsi:type="ST:Assignment" id="_qm8gaL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="47" structuredText="_qm8gV734EequD661lQoFzA">
          <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          <right xsi:type="STE:VariableExpression" id="_qm8gZ734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Main">
            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane_WPWeight_Heavy"/>
          </right>
        </statements>
      </implementations>
      <actions name="ExtendStampingCylinder_AND_Timer1500ms">
        <implementation xsi:type="ST:StructuredText" label="ExtendStampingCylinder_AND_Timer1500ms" id="_qm75TL34EequD661lQoFzA" text="StampingCylinder.ACT_Extend();&#xA;Timer(IN:=TRUE, PT:=T#1500MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm75Tb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qm75TL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm75UL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="29" structuredText="_qm75TL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75Tr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75T734EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Pressure">
        <implementation xsi:type="ST:StructuredText" label="Reset_Pressure" id="_qm75Ub34EequD661lQoFzA" text="PropValve.AO_SetPressure:=0;">
          <statements xsi:type="ST:Assignment" id="_qm75U734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="27" structuredText="_qm75Ub34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm75Ur34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Timer">
        <implementation xsi:type="ST:StructuredText" label="Reset_Timer" id="_qm75VL34EequD661lQoFzA" text="Timer(IN:=FALSE);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm75Vr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="16" structuredText="_qm75VL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75Vb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Reset_Variables">
        <implementation xsi:type="ST:StructuredText" label="Reset_Variables" id="_qm75V734EequD661lQoFzA" text="InitCompleted := FALSE;&#xA;AutomaticExecuteCompleted := FALSE;&#xA;&#xA;propValve.AO_SetPressure:=0;&#xA;IsStamping:=FALSE;&#xA;WPStamped:=FALSE;&#xA;WPType_Black := FALSE;&#xA;WPType_White := FALSE;&#xA;WPType_Metallic := FALSE;&#xA;WPWeight_Light := FALSE;&#xA;WPWeight_Medium := FALSE;&#xA;WPWeight_Heavy := FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm75Wb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="22" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm75WL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75W734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="34" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm75Wr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75Xb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="27" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="propValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm75XL34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75X734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="17" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="IsStamping"/>
            <right xsi:type="STE:Literal" id="_qm75Xr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75Yb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="16" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPStamped"/>
            <right xsi:type="STE:Literal" id="_qm75YL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75Y734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="21" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Black"/>
            <right xsi:type="STE:Literal" id="_qm75Yr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75Zb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="21" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_White"/>
            <right xsi:type="STE:Literal" id="_qm75ZL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75Z734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="24" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPType_Metallic"/>
            <right xsi:type="STE:Literal" id="_qm75Zr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75ab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="23" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:Literal" id="_qm75aL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75a734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="24" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:Literal" id="_qm75ar34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm75bb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="23" structuredText="_qm75V734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:Literal" id="_qm75bL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_HeavyPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_HeavyPressure" id="_qm75br34EequD661lQoFzA" text="PropValve.AO_SetPressure:=7000;">
          <statements xsi:type="ST:Assignment" id="_qm75cL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qm75br34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm75b734EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="7000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_LightPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_LightPressure" id="_qm75cb34EequD661lQoFzA" text="PropValve.AO_SetPressure:=4000;">
          <statements xsi:type="ST:Assignment" id="_qm75c734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qm75cb34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm75cr34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="4000"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_MediumPressure">
        <implementation xsi:type="ST:StructuredText" label="Set_MediumPressure" id="_qm75dL34EequD661lQoFzA" text="PropValve.AO_SetPressure:=5500;">
          <statements xsi:type="ST:Assignment" id="_qm75dr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="30" structuredText="_qm75dL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PropValve">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AO_SetPressure"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm75db34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="5500"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer1000ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer1000ms" id="_qm75d734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#1000MS);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm75er34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qm75d734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75eL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75eb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1000MS"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_Timer500ms">
        <implementation xsi:type="ST:StructuredText" label="Set_Timer500ms" id="_qm75e734EequD661lQoFzA" text="Timer(IN:=TRUE, PT:=T#500ms);">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm75fr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="28" structuredText="_qm75e734EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75fL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm75fb34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
        </implementation>
      </actions>
      <actions name="Set_WPWeight">
        <implementation xsi:type="ST:StructuredText" label="Set_WPWeight" id="_qm8gUL34EequD661lQoFzA" text="WPWeight_Light := Check_WPWeight_Light;&#xA;WPWeight_Medium := Check_WPWeight_Medium;&#xA;WPWeight_Heavy := Check_WPWeight_Heavy;">
          <statements xsi:type="ST:Assignment" id="_qm8gUr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qm8gUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Light"/>
            <right xsi:type="STE:VariableExpression" id="_qm8gUb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Light"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm8gVL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="40" structuredText="_qm8gUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Medium"/>
            <right xsi:type="STE:VariableExpression" id="_qm8gU734EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Medium"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm8gVr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="38" structuredText="_qm8gUL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="WPWeight_Heavy"/>
            <right xsi:type="STE:VariableExpression" id="_qm8gVb34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="Check_WPWeight_Heavy"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Stamp">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Stamp">
          <steps name="Stamp_ACT_Stamp" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Get_WPWeight_From_Crane" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Slider_Retract" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.4 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" local_ID="6" stepLevel="2"/>
          <steps name="SetLightPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3" local_ID="10" stepLevel="3"/>
          <steps name="SetMediumPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.5" local_ID="15" stepLevel="3"/>
          <steps name="SetHeavyPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" local_ID="20" stepLevel="3"/>
          <steps name="Extend_StampingCylinder" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.3 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.5 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" local_ID="24" stepLevel="4"/>
          <steps name="CheckCorrectPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.11 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" local_ID="28" stepLevel="5"/>
          <steps name="HeavyPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.9" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10" local_ID="32" stepLevel="6"/>
          <steps name="MediumPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.11" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.12" local_ID="37" stepLevel="6"/>
          <steps name="LightPressureOk" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.13" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" local_ID="42" stepLevel="6"/>
          <steps name="Error" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.15" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.16" local_ID="48" stepLevel="5">
            <actions xsi:type="SFC:SimpleAction" localId="49" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@inputVariables.6"/>
          </steps>
          <steps name="Wait" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.10 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.12 //@resources.0/@pous.36/@actions.10/@implementation/@transitions.14" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" local_ID="55" stepLevel="7"/>
          <steps name="ResetPressure" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.17" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" local_ID="58" stepLevel="8"/>
          <steps name="Move_Stamp_Up" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.18" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" local_ID="61" stepLevel="9"/>
          <steps name="Slider_Extend" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.19" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" local_ID="64" stepLevel="10"/>
          <steps name="WP_Stamped" incomingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.20" outgoingTransitions="//@resources.0/@pous.36/@actions.10/@implementation/@transitions.21" local_ID="67" stepLevel="11">
            <actions xsi:type="SFC:SimpleAction" localId="68" qualifier="S" actionVariable="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="69" qualifier="R" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <transitions condition="IsStamping AND NOT WPStamped AND WPAvailable.DI_SwitchTrue AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="WPWeight_Light=Check_WPWeight_Light AND WPWeight_Medium=Check_WPWeight_Medium AND WPWeight_Heavy=Check_WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" local_ID="9"/>
          <transitions condition="PropValve.AO_SetPressure=4000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="12"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" local_ID="14"/>
          <transitions condition="PropValve.AO_SetPressure=5500" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="SlidingCylinder.Retracted AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" local_ID="19"/>
          <transitions condition="PropValve.AO_SetPressure=7000" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" local_ID="22"/>
          <transitions condition="StampingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" local_ID="27"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 18000) AND WPWeight_Heavy" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" local_ID="31"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.8" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="34"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 5300) AND (PressureSensor.AI_CurrentPressure &lt; 17000) AND WPWeight_Medium" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" local_ID="36"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.9" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="39"/>
          <transitions condition="(PressureSensor.AI_CurrentPressure > 4800) AND (PressureSensor.AI_CurrentPressure &lt; 5200) AND WPWeight_Light" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.7" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" local_ID="41"/>
          <transitions condition="TRUE" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.10" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" local_ID="44"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" local_ID="47"/>
          <transitions condition="SoftwareEmergency" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.11" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="52"/>
          <transitions condition="Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.12" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" local_ID="57"/>
          <transitions condition="PropValve.AO_SetPressure=0" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.13" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" local_ID="60"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.14" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" local_ID="63"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.15" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" local_ID="66"/>
          <transitions condition="WPStamped" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.16" targetStep="//@resources.0/@pous.36/@actions.10/@implementation/@steps.0" local_ID="72"/>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="Stamp_AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Dummy1" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Dummy2" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="Intersetp" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PrepareStamping" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="R" actionVariable="//@resources.0/@pous.36/@declaration/@internalVariables.0"/>
            <actions xsi:type="SFC:SimpleAction" localId="14" qualifier="S" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.7"/>
          </steps>
          <steps name="Stamp_WP" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" local_ID="18" stepLevel="5"/>
          <steps name="SetAutomaticExecuteCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.36/@actions.11/@implementation/@transitions.6" local_ID="21" stepLevel="6">
            <actions xsi:type="SFC:SimpleAction" localId="22" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.4"/>
          </steps>
          <transitions condition="NOT AutomaticExecuteCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Check_Allowed_To_Operate AND WPAvailable.DI_SwitchTrue" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="Check_Allowed_To_Operate AND Timer.Q" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="IsStamping AND NOT WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" local_ID="17"/>
          <transitions condition="WPStamped" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.5" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" local_ID="20"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.6" targetStep="//@resources.0/@pous.36/@actions.11/@implementation/@steps.0" local_ID="25"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="Stamp_ACT_EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="ResetVariables" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Stamp_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SlidingCylinder_Retracting" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="Stamp_EmergencyHandled" incomingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.36/@actions.12/@implementation/@transitions.4" local_ID="12" stepLevel="4">
            <actions xsi:type="SFC:SimpleAction" localId="13" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="Not EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="NOT InitCompleted AND NOT AutomaticExecuteCompleted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.4" targetStep="//@resources.0/@pous.36/@actions.12/@implementation/@steps.0" local_ID="16"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Stamp_ACT_Init" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Retract_Stamping_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Extend_Sliding_Cylinder_Init" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="SetInitCompleted" incomingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.36/@actions.13/@implementation/@transitions.3" local_ID="9" stepLevel="3">
            <actions xsi:type="SFC:SimpleAction" localId="10" qualifier="N" actionVariable="//@resources.0/@pous.36/@declaration/@outputVariables.3"/>
          </steps>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="StampingCylinder.Retracted" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.1" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="SlidingCylinder.Extended" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.2" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.3" targetStep="//@resources.0/@pous.36/@actions.13/@implementation/@steps.0" local_ID="13"/>
        </implementation>
      </actions>
    </pous>
    <pous callees="//@resources.0/@pous.35 //@resources.0/@pous.26 //@resources.0/@pous.28 //@resources.0/@pous.36 //@resources.0/@pous.31 //@resources.0/@pous.34 //@resources.0/@pous.30 //@resources.0/@pous.29 //@resources.0/@pous.32 //@resources.0/@pous.33 //@resources.0/@pous.27 //@resources.0/@pous.24" callers="//@resources.0/@pous.0" identifier="xPPU" type="FUNCTIONBLOCK">
      <declaration>
        <inputVariables name="Stack" scope="VAR_INPUT" type="DERIVED" typeName="Stack">
          <location/>
        </inputVariables>
        <inputVariables name="Crane" scope="VAR_INPUT" type="DERIVED" typeName="Crane">
          <location/>
        </inputVariables>
        <inputVariables name="LargeSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="LargeSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="Stamp" scope="VAR_INPUT" type="DERIVED" typeName="Stamp">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlphaConveyor" scope="VAR_INPUT" type="DERIVED" typeName="PicAlphaConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="SmallSortingConveyor" scope="VAR_INPUT" type="DERIVED" typeName="SmallSortingConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="RefillConveyor" scope="VAR_INPUT" type="DERIVED" typeName="RefillConveyor">
          <location/>
        </inputVariables>
        <inputVariables name="PicAlpha" scope="VAR_INPUT" type="DERIVED" typeName="PicAlpha">
          <location/>
        </inputVariables>
        <inputVariables name="SafetyDoor" scope="VAR_INPUT" type="DERIVED" typeName="SafetyDoor">
          <location/>
        </inputVariables>
        <inputVariables name="LightGrid" scope="VAR_INPUT" type="DERIVED" typeName="LightGrid">
          <location/>
        </inputVariables>
        <inputVariables name="EngergyMonitoringHardware" scope="VAR_INPUT" type="DERIVED" typeName="EnergyMonitor">
          <location/>
        </inputVariables>
        <inputVariables name="Block_LSCSep1_LSCSep2" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_SSC_PAC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stack_Crane" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="Block_Stamp_RC" scope="VAR_INPUT" type="DERIVED" typeName="ValveBlock">
          <location/>
        </inputVariables>
        <inputVariables name="DI_NO_EMERGENCY" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </inputVariables>
        <inputVariables name="SFCReset" scope="VAR_INPUT" type="BOOL" typeName="BOOL">
          <location/>
        </inputVariables>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Variables</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//GREEN</statements>
          <statements>//WHITE</statements>
        </comment>
        <comment identifier="xPPU">
          <statements>//Hardware</statements>
          <statements>//Software</statements>
          <statements>//Only for SFC implementation</statements>
        </comment>
        <internalVariables name="Timer" scope="VAR" type="DERIVED" typeName="TON">
          <location/>
        </internalVariables>
        <internalVariables name="SFCInit" scope="VAR" type="BOOL" typeName="BOOL">
          <location/>
        </internalVariables>
        <outputVariables name="StartButton" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="ManuelMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticMode" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="InitCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="AutomaticExecuteCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyStop" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="EmergencyHandled" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
        <outputVariables name="SFCResetCompleted" scope="VAR_OUTPUT" type="BOOL" typeName="BOOL">
          <location/>
        </outputVariables>
      </declaration>
      <implementations xsi:type="SFC:SequentialFunctionChart" label="xPPU">
        <steps name="Init" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" local_ID="0" initialStep="true"/>
        <steps name="SFC_Reset_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" local_ID="3" stepLevel="1"/>
        <steps name="Start" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2 //@resources.0/@pous.37/@implementations.0/@transitions.3" local_ID="6" stepLevel="2"/>
        <steps name="ManuelMode_active" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.4" local_ID="12" stepLevel="3"/>
        <steps name="Initialisation_2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5 //@resources.0/@pous.37/@implementations.0/@transitions.6 //@resources.0/@pous.37/@implementations.0/@transitions.7" local_ID="17" stepLevel="3"/>
        <steps name="AutomaticExecute" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8 //@resources.0/@pous.37/@implementations.0/@transitions.9 //@resources.0/@pous.37/@implementations.0/@transitions.10" local_ID="28" stepLevel="4"/>
        <steps name="ManuelMode_Active2" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.10" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.11" local_ID="37" stepLevel="5"/>
        <steps name="Emergency_Stop" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" local_ID="42" stepLevel="5"/>
        <steps name="SFC_Reset" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.12" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" local_ID="45" stepLevel="6"/>
        <steps name="Ready_To_Initialise" incomingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.13" outgoingTransitions="//@resources.0/@pous.37/@implementations.0/@transitions.14" local_ID="48" stepLevel="7"/>
        <transitions condition="TRUE" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.0" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.1" local_ID="2"/>
        <transitions condition="SFCResetResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.1" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="5"/>
        <transitions condition="StartButton AND AutomaticMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.4" local_ID="9"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.2" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="11"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.3" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.2" local_ID="14"/>
        <transitions condition="InitCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="20"/>
        <transitions condition="EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="22"/>
        <transitions condition="ManuelMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.4" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.3" local_ID="25"/>
        <transitions condition="EmergencyStop" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.7" local_ID="31"/>
        <transitions condition="StartButton" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="33"/>
        <transitions condition="ManuelMode" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.5" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.6" local_ID="36"/>
        <transitions condition="AutomaticMode" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.6" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.5" local_ID="39"/>
        <transitions condition="EmergencyHandled" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.7" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.8" local_ID="44"/>
        <transitions condition="SFCResetCompleted" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.8" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.9" local_ID="47"/>
        <transitions condition="NOT EmergencyStop" isJump="true" sourceStep="//@resources.0/@pous.37/@implementations.0/@steps.9" targetStep="//@resources.0/@pous.37/@implementations.0/@steps.0" local_ID="50"/>
      </implementations>
      <actions name="ACT_CheckEmergency">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckEmergency" id="_qm8gab34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;">
          <statements xsi:type="ST:Assignment" id="_qm8ga734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qm8gab34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qm8gar34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_CheckManuelMode">
        <implementation xsi:type="ST:StructuredText" label="ACT_CheckManuelMode" id="_qm8gbL34EequD661lQoFzA" text="ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_qm8gbr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="134" structuredText="_qm8gbL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm8gbb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm8gcL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="156" structuredText="_qm8gbL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm8gb734EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_Start">
        <implementation xsi:type="ST:StructuredText" label="ACT_Start" id="_qm9HYL34EequD661lQoFzA" text="StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:Assignment" id="_qm9HYr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="140" structuredText="_qm9HYL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9HYb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9HZL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="134" structuredText="_qm9HYL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9HY734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9HZr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="156" structuredText="_qm9HYL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9HZb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="AutomaticExecute_entry">
        <implementation xsi:type="ST:StructuredText" label="AutomaticExecute_entry" id="_qm9HZ734EequD661lQoFzA" text="AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;Stack.Panel.ACT_TurnLampGreen_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_On();">
          <statements xsi:type="ST:Assignment" id="_qm9Hab34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="32" structuredText="_qm9HZ734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm9HaL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Har34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Ha734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9HbL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hbb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="49" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hbr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="34" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hb734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="34" structuredText="_qm9HZ734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
          </statements>
        </implementation>
      </actions>
      <actions name="CallAll_AutomationExecutes">
        <implementation xsi:type="ST:StructuredText" label="CallAll_AutomationExecutes" id="_qm9HcL34EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;ManuelMode := Stack.ManuelMode OR LargeSortingConveyor.ManuelMode OR Stamp.ManuelMode OR SafetyDoor.ManuelMode OR LightGrid.ManuelMode;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;&#xA;Crane.ACT_AutomaticExecute();&#xA;Stack.ACT_AutomaticExecute();&#xA;Stamp.ACT_AutomaticExecute();&#xA;LargeSortingConveyor.ACT_AutomaticExecute();&#xA;PicAlphaConveyor.ACT_AutomaticExecute();&#xA;SmallSortingConveyor.ACT_AutomaticExecute();&#xA;RefillConveyor.ACT_AutomaticExecute();&#xA;PicAlpha.ACT_AutomaticExecute();&#xA;ACT_FaultAirPressureDetection();">
          <statements xsi:type="ST:Assignment" id="_qm9Hcr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qm9HcL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9Hcb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9HdL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_qm9HcL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9Hc734EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9Hdr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="134" structuredText="_qm9HcL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9Hdb34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ManuelMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9HeL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="156" structuredText="_qm9HcL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9Hd734EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Heb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="28" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Her34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="28" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9He734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="28" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9HfL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="43" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hfb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" endColumnPos="39" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hfr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" endColumnPos="43" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hf734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" endColumnPos="37" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9HgL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" endColumnPos="31" structuredText="_qm9HcL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hgb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" endColumnPos="31" structuredText="_qm9HcL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_FaultAirPressureDetection"/>
          </statements>
        </implementation>
      </actions>
      <actions name="EmergencyStop_entry">
        <implementation xsi:type="ST:StructuredText" label="EmergencyStop_entry" id="_qm9Hgr34EequD661lQoFzA" text="EmergencyHandled:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#xA;Stack.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qm9HhL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="23" structuredText="_qm9Hgr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyHandled"/>
            <right xsi:type="STE:Literal" id="_qm9Hg734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hhb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="50" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="35" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="35" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9HiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qm9Hgr34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="Init_entry">
        <implementation xsi:type="ST:StructuredText" label="Init_entry" id="_qm9Hi734EequD661lQoFzA" text="InitCompleted:=FALSE;&#xA;&#xA;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#xA;Stack.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;Stack.Panel.ACT_TurnLampGreen_Off();&#x9;&#xA;Stamp.Panel.ACT_TurnLampGreen_Off();">
          <statements xsi:type="ST:Assignment" id="_qm9Hjb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="20" structuredText="_qm9Hi734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm9HjL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" endColumnPos="49" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hj734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" endColumnPos="34" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9HkL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" endColumnPos="34" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hkb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" endColumnPos="50" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" endColumnPos="35" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9Hk734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" endColumnPos="35" structuredText="_qm9Hi734EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
          </statements>
        </implementation>
      </actions>
      <actions name="LightBlinking">
        <implementation xsi:type="ST:StructuredText" label="LightBlinking" id="_qm9ucL34EequD661lQoFzA" text="Timer(IN := NOT Timer.Q, PT:=T#1500ms);&#xA;&#xA;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;//GREEN&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;ELSE&#xA;&#x9;//WHITE&#xA;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;END_IF&#xA;&#xA;AutomaticMode := Stack.AutomaticMode AND LargeSortingConveyor.AutomaticMode AND Stamp.AutomaticMode AND SafetyDoor.AutomaticMode AND LightGrid.AutomaticMode;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm9uc734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="38" structuredText="_qm9ucL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
              <parameters>
                <assignedValue xsi:type="STE:UnaryExpression" id="_qm9ucb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                  <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                  </subexpression>
                </assignedValue>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
              </parameters>
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm9ucr34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#1500ms"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:If" id="_qm9ujL34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="27" relStartLine="3" relEndLine="27" endColumnPos="5" structuredText="_qm9ucL34EequD661lQoFzA">
            <conditionalBlocks id="_qm9ugL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="14" relStartLine="3" relEndLine="14" endColumnPos="40" structuredText="_qm9ucL34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm9udb34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm9udL34EequD661lQoFzA" operator="LESSER_THAN">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="DIV">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9udr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="35" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ud734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="50" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ueL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="35" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ueb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="40" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uer34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="39" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ue734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="36" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ufL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="51" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ufb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="36" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ufr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="41" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uf734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="40" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
              </substatements>
            </conditionalBlocks>
            <conditionalBlocks id="_qm9ui734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="15" absEndLine="26" relStartLine="15" relEndLine="26" endColumnPos="39" structuredText="_qm9ucL34EequD661lQoFzA">
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ugb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="1" endColumnPos="36" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ugr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="51" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9ug734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="36" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uhL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="41" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uhb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="40" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="35" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uh734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="50" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uiL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="35" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uib34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="40" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm9uir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="39" structuredText="_qm9ucL34EequD661lQoFzA">
                <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                </invokingVariable>
                <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
              </substatements>
            </conditionalBlocks>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9ujr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" endColumnPos="156" structuredText="_qm9ucL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9ujb34EequD661lQoFzA" operator="AND">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="AND">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="AND">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="AND">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticMode"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
        </implementation>
      </actions>
      <actions name="Ready_To_Initialise_active">
        <implementation xsi:type="ST:StructuredText" label="Ready_To_Initialise_active" id="_qm9uj734EequD661lQoFzA" text="EmergencyStop := Stack.EmergencyStop OR LargeSortingConveyor.EmergencyStop OR Stamp.EmergencyStop OR SafetyDoor.EmergencyStop OR LightGrid.EmergencyStop OR Crane.SoftwareEmergency OR Stamp.SoftwareEmergency OR PicAlpha.SoftwareEmergency;&#xA;StartButton := Stack.StartButton OR LargeSortingConveyor.StartButton OR Stamp.StartButton OR SafetyDoor.StartButton OR LightGrid.StartButton;&#xA;IF(StartButton)THEN&#xA;&#x9;Stamp.SoftwareEmergency:=FALSE;&#xA;&#x9;Crane.SoftwareEmergency:=FALSE;&#xA;&#x9;PicAlpha.SoftwareEmergency:=FALSE;&#xA;END_IF">
          <statements xsi:type="ST:Assignment" id="_qm9ukb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="236" structuredText="_qm9uj734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9ukL34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="OR">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </left>
                          <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                          </right>
                        </right>
                      </right>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm9uk734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="140" structuredText="_qm9uj734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
            <right xsi:type="STE:BinaryExpression" id="_qm9ukr34EequD661lQoFzA" operator="OR">
              <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </left>
              <right xsi:type="STE:BinaryExpression" operator="OR">
                <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                </left>
                <right xsi:type="STE:BinaryExpression" operator="OR">
                  <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                    <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </left>
                    <right xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
                    </right>
                  </right>
                </right>
              </right>
            </right>
          </statements>
          <statements xsi:type="ST:If" id="_qm9unb34EequD661lQoFzA" statementType="IF" absStartLine="3" absEndLine="7" relStartLine="3" relEndLine="7" endColumnPos="5" structuredText="_qm9uj734EequD661lQoFzA">
            <conditionalBlocks id="_qm9unL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="3" absEndLine="6" relStartLine="3" relEndLine="6" endColumnPos="34" structuredText="_qm9uj734EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm9ulb34EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:VariableExpression" id="_qm9ulL34EequD661lQoFzA" dataType="DERIVED" expressionType="VARIABLE" Symbol="StartButton"/>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm9ul734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="31" structuredText="_qm9uj734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qm9ulr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm9umb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="31" structuredText="_qm9uj734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qm9umL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
              <substatements xsi:type="ST:Assignment" id="_qm9um734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="34" structuredText="_qm9uj734EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
                  <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SoftwareEmergency"/>
                </left>
                <right xsi:type="STE:Literal" id="_qm9umr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_active" id="_qm-VgL34EequD661lQoFzA" text="(*PPU*)&#xA;&#x9;//Variables&#xA;&#x9;InitCompleted:=FALSE;&#xA;&#x9;AutomaticExecuteCompleted:=FALSE;&#xA;&#xA;(*Crane Reset*)&#xA;&#x9;Crane(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#xA;(*LargeSortingConveyor Reset*)&#xA;&#x9;LargeSortingConveyor(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*Stack Reset*)&#xA;&#x9;Stack(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=TRUE);&#xA;&#xA;(*Stamp Reset*)&#xA;&#x9;Stamp(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=TRUE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=TRUE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=TRUE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=TRUE);&#xA;&#x9;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm-Vgr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="21" structuredText="_qm-VgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="InitCompleted"/>
            <right xsi:type="STE:Literal" id="_qm-Vgb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm-VhL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="33" structuredText="_qm-VgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="AutomaticExecuteCompleted"/>
            <right xsi:type="STE:Literal" id="_qm-Vg734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vhr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="22" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vhb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-ViL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="31" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vh734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vir34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="43" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vib34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VjL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vi734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vjr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="41" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vjb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VkL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="38" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vj734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vkr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="38" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vkb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VlL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="1" endColumnPos="35" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vk734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vlr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="36" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vlb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VmL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="1" endColumnPos="37" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vl734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vmr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="46" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vmb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VnL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="58" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vm734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vnr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="54" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vnb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VoL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="53" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vn734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vor34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="48" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vob34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VpL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="22" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vpr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="31" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vpb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VqL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="1" endColumnPos="43" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vqr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="36" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VrL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="22" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vrr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="31" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VsL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="43" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="32" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VtL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="33" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vs734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vtr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="39" absEndLine="39" relStartLine="39" relEndLine="39" startColumnPos="1" endColumnPos="42" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vtb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="40" absEndLine="40" relStartLine="40" relEndLine="40" startColumnPos="1" endColumnPos="54" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vt734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="48" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vub34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VvL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="37" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vu734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vvr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="46" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vvb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VwL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="58" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vv734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vwr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="47" absEndLine="47" relStartLine="47" relEndLine="47" startColumnPos="1" endColumnPos="48" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vwb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VxL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="54" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vw734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="49" absEndLine="49" relStartLine="49" relEndLine="49" startColumnPos="1" endColumnPos="53" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vxb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VyL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="31" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vyr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-VzL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="52" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vy734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-Vzr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="55" absEndLine="55" relStartLine="55" relEndLine="55" startColumnPos="1" endColumnPos="46" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V0L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="58" absEndLine="58" relStartLine="58" relEndLine="58" startColumnPos="1" endColumnPos="25" structuredText="_qm-VgL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-Vz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V0r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="34" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V0b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V1L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="46" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V0734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V1r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V1b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V2L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V1734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V2r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V2b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="40" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V2734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V3r34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="65" absEndLine="65" relStartLine="65" relEndLine="65" startColumnPos="1" endColumnPos="38" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V3b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm-V4L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="39" structuredText="_qm-VgL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm-V3734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm-V4r34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="68" absEndLine="68" relStartLine="68" relEndLine="68" endColumnPos="23" structuredText="_qm-VgL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qm-V4b34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_entry" id="_qm-8kL34EequD661lQoFzA" text="SFCResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm-8kr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="24" structuredText="_qm-8kL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qm-8kb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm-8lL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qm-8kL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm-8k734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_active">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_active" id="_qm_joL34EequD661lQoFzA" text="(*Crane Reset*)&#x9;&#xA;&#x9;Crane(SFCReset:=FALSE);&#xA;&#x9;Crane.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_EmergencyStop(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToConveyor(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStack(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_MoveToStamp(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PickUpWP(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Crane.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;Crane.LiftingCylinder.ACT_Retract();&#xA;&#x9;Crane.Gripper.ACT_Release();&#xA;&#x9;Crane.Table.Motor.ACT_Stop();&#x9;&#xA;&#x9;//Variables&#xA;&#x9;Crane.SFCReset:=FALSE;&#xA;&#x9;&#xA;                                                               &#xA;(*LargeSortingConveyor Reset*)  &#xA;&#x9;LargeSortingConveyor(SFCReset:=FALSE);                                &#xA;&#x9;LargeSortingConveyor.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#x9;&#x9;&#xA;&#x9;LargeSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;LargeSortingConveyor.Motor.ACT_Stop();&#xA;&#x9;LargeSortingConveyor.Seperator1.ACT_Retract();&#xA;&#x9;LargeSortingConveyor.Seperator2.ACT_Retract();&#xA;&#x9;//Variables&#xA;&#x9;LargeSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;                                                            &#xA;(*Stack Reset*)   &#xA;&#x9;Stack(SFCReset:=FALSE);                                              &#xA;&#x9;Stack.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stack.ACT_ProvideWP(SFCReset:=FALSE);&#x9;&#xA;&#x9;Stack.Seperator.ACT_Retract();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stack.SFCReset:=FALSE;&#xA;                                                        &#xA;(*Stamp Reset*)  &#xA;&#x9;Stamp(SFCReset:=FALSE);                                               &#xA;&#x9;Stamp.ACT_Init(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_AutomaticExecute(SFCReset:=FALSE);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;Stamp.ACT_Stamp(SFCReset:=FALSE);&#xA;&#x9;Stamp.StampingCylinder.ACT_Retract();&#xA;&#x9;Stamp.SlidingCylinder.ACT_Extend();&#xA;&#x9;//Variables&#x9;&#xA;&#x9;Stamp.SFCReset:=FALSE;&#xA;&#xA;(*PicAlphaConveyor Reset*)&#xA;&#x9;PicAlphaConveyor(SFCReset:=FALSE); &#xA;&#x9;PicAlphaConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlphaConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlphaConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*SmallSortingConveyor Reset*)&#xA;&#x9;SmallSortingConveyor(SFCReset:=FALSE); &#xA;&#x9;SmallSortingConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_SortWP(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_ChangeTarget(SFCReset:=FALSE);&#xA;&#x9;SmallSortingConveyor.ACT_CheckWPType(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;SmallSortingConveyor.SFCReset:=FALSE;&#xA;&#x9;&#xA;(*RefillConveyor Reset*)&#xA;&#x9;RefillConveyor(SFCReset:=FALSE); &#xA;&#x9;RefillConveyor.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;RefillConveyor.ACT_SeperateWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;RefillConveyor.SFCReset:=FALSE;&#x9;&#xA;&#x9;&#xA;(*PicAlpha Reset*)&#xA;&#x9;PicAlpha(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_Init(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_AutomaticExecute(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos1(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos2(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos3(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_MoveToPos4(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PickUpWP(SFCReset:=FALSE);&#xA;&#x9;PicAlpha.ACT_PutDownWP(SFCReset:=FALSE);&#xA;&#x9;//Variables&#xA;&#x9;PicAlpha.SFCReset:=FALSE;&#x9;&#xA;&#x9;                                                            &#xA;SFCResetResetCompleted:=TRUE;&#xA;SFCResetCompleted:=TRUE;">
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jor34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" startColumnPos="1" endColumnPos="23" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Crane">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_job34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jpL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="3" absEndLine="3" relStartLine="3" relEndLine="3" startColumnPos="1" endColumnPos="32" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jo734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jpr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="4" absEndLine="4" relStartLine="4" relEndLine="4" startColumnPos="1" endColumnPos="44" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jpb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jqL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="5" absEndLine="5" relStartLine="5" relEndLine="5" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_EmergencyStop">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jp734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jqr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="6" absEndLine="6" relStartLine="6" relEndLine="6" startColumnPos="1" endColumnPos="42" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jqb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jrL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="7" absEndLine="7" relStartLine="7" relEndLine="7" startColumnPos="1" endColumnPos="39" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jq734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jrr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="8" absEndLine="8" relStartLine="8" relEndLine="8" startColumnPos="1" endColumnPos="39" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToStamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jrb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jsL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="36" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jr734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="37" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jsb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_js734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="11" absEndLine="11" relStartLine="11" relEndLine="11" startColumnPos="1" endColumnPos="36" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LiftingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jtL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="12" absEndLine="12" relStartLine="12" relEndLine="12" startColumnPos="1" endColumnPos="28" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Gripper"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Release"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jtb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="1" endColumnPos="29" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Table">
                <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
              </innerVariable>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_jt734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="1" endColumnPos="22" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Crane">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_jtr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="1" endColumnPos="38" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="LargeSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_juL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_ju734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="1" endColumnPos="47" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jur34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jvb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="1" endColumnPos="59" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jvL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jv734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="1" endColumnPos="55" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jvr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jwb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="23" absEndLine="23" relStartLine="23" relEndLine="23" startColumnPos="1" endColumnPos="54" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jwL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jw734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="24" absEndLine="24" relStartLine="24" relEndLine="24" startColumnPos="1" endColumnPos="49" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jwr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jxL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="1" endColumnPos="38" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Motor"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stop"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jxb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="1" endColumnPos="46" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator1"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jxr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="1" endColumnPos="46" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator2"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_jyL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="1" endColumnPos="37" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_jx734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jyr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="1" endColumnPos="23" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stack">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jyb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jzL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="1" endColumnPos="32" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jy734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_jzr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="1" endColumnPos="44" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jzb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j0L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="35" absEndLine="35" relStartLine="35" relEndLine="35" startColumnPos="1" endColumnPos="37" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ProvideWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_jz734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j0b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="36" absEndLine="36" relStartLine="36" relEndLine="36" startColumnPos="1" endColumnPos="30" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Seperator"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_j0734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="38" absEndLine="38" relStartLine="38" relEndLine="38" startColumnPos="1" endColumnPos="22" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_j0r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j1b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="41" absEndLine="41" relStartLine="41" relEndLine="41" startColumnPos="1" endColumnPos="23" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j1L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j1734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="42" absEndLine="42" relStartLine="42" relEndLine="42" startColumnPos="1" endColumnPos="32" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j1r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j2b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="43" absEndLine="43" relStartLine="43" relEndLine="43" startColumnPos="1" endColumnPos="44" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j2L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j2734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="44" absEndLine="44" relStartLine="44" relEndLine="44" startColumnPos="1" endColumnPos="33" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Stamp">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j2r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j3L34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="45" absEndLine="45" relStartLine="45" relEndLine="45" startColumnPos="1" endColumnPos="37" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="StampingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Retract"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j3b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="46" absEndLine="46" relStartLine="46" relEndLine="46" startColumnPos="1" endColumnPos="35" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SlidingCylinder"/>
            </invokingVariable>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Extend"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_j3734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="48" absEndLine="48" relStartLine="48" relEndLine="48" startColumnPos="1" endColumnPos="22" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_j3r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j4b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="51" absEndLine="51" relStartLine="51" relEndLine="51" startColumnPos="1" endColumnPos="34" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlphaConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j4L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j4734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="52" absEndLine="52" relStartLine="52" relEndLine="52" startColumnPos="1" endColumnPos="43" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j4r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j5b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="53" absEndLine="53" relStartLine="53" relEndLine="53" startColumnPos="1" endColumnPos="55" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j5L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j5734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="54" absEndLine="54" relStartLine="54" relEndLine="54" startColumnPos="1" endColumnPos="49" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j5r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_j6b34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="56" absEndLine="56" relStartLine="56" relEndLine="56" startColumnPos="1" endColumnPos="33" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlphaConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_j6L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j6734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="59" absEndLine="59" relStartLine="59" relEndLine="59" startColumnPos="1" endColumnPos="38" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="SmallSortingConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j6r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j7b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="60" absEndLine="60" relStartLine="60" relEndLine="60" startColumnPos="1" endColumnPos="47" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j7L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j7734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="61" absEndLine="61" relStartLine="61" relEndLine="61" startColumnPos="1" endColumnPos="59" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j7r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j8b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="62" absEndLine="62" relStartLine="62" relEndLine="62" startColumnPos="1" endColumnPos="49" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SortWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j8L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j8734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="63" absEndLine="63" relStartLine="63" relEndLine="63" startColumnPos="1" endColumnPos="55" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_ChangeTarget">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j8r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j9b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="64" absEndLine="64" relStartLine="64" relEndLine="64" startColumnPos="1" endColumnPos="54" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_CheckWPType">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j9L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_j9734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="66" absEndLine="66" relStartLine="66" relEndLine="66" startColumnPos="1" endColumnPos="37" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SmallSortingConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_j9r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j-b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="69" absEndLine="69" relStartLine="69" relEndLine="69" startColumnPos="1" endColumnPos="32" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="RefillConveyor">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j-L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j-734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="70" absEndLine="70" relStartLine="70" relEndLine="70" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j-r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j_b34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="71" absEndLine="71" relStartLine="71" relEndLine="71" startColumnPos="1" endColumnPos="53" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j_L34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_j_734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="72" absEndLine="72" relStartLine="72" relEndLine="72" startColumnPos="1" endColumnPos="47" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_SeperateWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_j_r34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_kAb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="74" absEndLine="74" relStartLine="74" relEndLine="74" startColumnPos="1" endColumnPos="31" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="RefillConveyor">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_kAL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kA734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="77" absEndLine="77" relStartLine="77" relEndLine="77" startColumnPos="1" endColumnPos="26" structuredText="_qm_joL34EequD661lQoFzA">
            <functionCall expressionType="FUNCTION_CALL" symbol="PicAlpha">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kAr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kBb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="78" absEndLine="78" relStartLine="78" relEndLine="78" startColumnPos="1" endColumnPos="35" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_Init">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kBL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kB734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="79" absEndLine="79" relStartLine="79" relEndLine="79" startColumnPos="1" endColumnPos="47" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_AutomaticExecute">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kBr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kCb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="80" absEndLine="80" relStartLine="80" relEndLine="80" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos1">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kCL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kC734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="81" absEndLine="81" relStartLine="81" relEndLine="81" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos2">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kCr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kDb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="82" absEndLine="82" relStartLine="82" relEndLine="82" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos3">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kDL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kD734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="83" absEndLine="83" relStartLine="83" relEndLine="83" startColumnPos="1" endColumnPos="41" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_MoveToPos4">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kDr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kEb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="84" absEndLine="84" relStartLine="84" relEndLine="84" startColumnPos="1" endColumnPos="39" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PickUpWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kEL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:FunctionCallStatement" id="_qm_kE734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="85" absEndLine="85" relStartLine="85" relEndLine="85" startColumnPos="1" endColumnPos="40" structuredText="_qm_joL34EequD661lQoFzA">
            <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha"/>
            <functionCall expressionType="FUNCTION_CALL" symbol="ACT_PutDownWP">
              <parameters>
                <assignedValue xsi:type="STE:Literal" id="_qm_kEr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                <input dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
              </parameters>
            </functionCall>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_kFb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="87" absEndLine="87" relStartLine="87" relEndLine="87" startColumnPos="1" endColumnPos="25" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="PicAlpha">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCReset"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_kFL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_kF734EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="89" absEndLine="89" relStartLine="89" relEndLine="89" endColumnPos="28" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qm_kFr34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_kGb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="90" absEndLine="90" relStartLine="90" relEndLine="90" endColumnPos="23" structuredText="_qm_joL34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qm_kGL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_entry">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_entry" id="_qm_kGr34EequD661lQoFzA" text="SFCResetResetCompleted:=FALSE;&#xA;GVL.IsSFCResetting:=TRUE;">
          <statements xsi:type="ST:Assignment" id="_qm_kHL34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="29" structuredText="_qm_kGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="SFCResetResetCompleted"/>
            <right xsi:type="STE:Literal" id="_qm_kG734EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
          <statements xsi:type="ST:Assignment" id="_qm_kHr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="2" absEndLine="2" relStartLine="2" relEndLine="2" endColumnPos="24" structuredText="_qm_kGr34EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_kHb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="SFC_Reset_Reset_exit">
        <implementation xsi:type="ST:StructuredText" label="SFC_Reset_Reset_exit" id="_qm_kH734EequD661lQoFzA" text="GVL.IsSFCResetting:=FALSE;">
          <statements xsi:type="ST:Assignment" id="_qm_kIb34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="1" absEndLine="1" relStartLine="1" relEndLine="1" endColumnPos="25" structuredText="_qm_kH734EequD661lQoFzA">
            <left dataType="DERIVED" expressionType="VARIABLE" Symbol="GVL">
              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="IsSFCResetting"/>
            </left>
            <right xsi:type="STE:Literal" id="_qm_kIL34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_FaultAirPressureDetection">
        <implementation xsi:type="ST:StructuredText" label="ACT_FaultAirPressureDetection" id="_qm_kIr34EequD661lQoFzA" text="IF(&#xA;&#x9;Block_LSCSep1_LSCSep2.DI_BoundaryPressure = FALSE &#xA;&#x9;OR Block_SSC_PAC.DI_BoundaryPressure = FALSE&#xA;&#x9;OR Block_Stack_Crane.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR Block_Stamp_RC.AI_PressureSensor &lt;= 10000&#xA;&#x9;OR EngergyMonitoringHardware.PressureSensor_4bar.DI_PressureReached = FALSE &#xA;)&#xA;THEN&#xA; EmergencyStop := TRUE; &#xA; Timer(IN := NOT Timer.Q, PT:=T#500MS);&#xA;&#x9;IF (Timer.ET &lt; Timer.PT/2) THEN&#xA;&#x9;&#x9;//GREEN&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_On();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_Off();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_Off();&#xA;&#x9;ELSE&#xA;&#x9;&#x9;//WHITE&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampGreen_Off();&#xA;&#x9;&#x9;Stack.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;LargeSortingConveyor.Panel.ACT_TurnLampWhite_On();&#x9;&#xA;&#x9;&#x9;Stamp.Panel.ACT_TurnLampWhite_On();&#xA;&#x9;&#x9;SafetyDoor.Panel.ACT_TurnLampReset_On();&#xA;&#x9;&#x9;LightGrid.Panel.ACT_TurnLampReset_On();&#xA;&#x9;END_IF&#xA;END_IF">
          <statements xsi:type="ST:If" id="_qnAKwb34EequD661lQoFzA" statementType="IF" absStartLine="1" absEndLine="36" relStartLine="1" relEndLine="36" endColumnPos="5" structuredText="_qm_kIr34EequD661lQoFzA">
            <conditionalBlocks id="_qnAKwL34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="1" absEndLine="35" relStartLine="1" relEndLine="35" endColumnPos="6" structuredText="_qm_kIr34EequD661lQoFzA" else="false">
              <condition xsi:type="STE:UnaryExpression" id="_qm_kJL34EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                <subexpression xsi:type="STE:BinaryExpression" id="_qm_kI734EequD661lQoFzA" operator="OR">
                  <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                    <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_LSCSep1_LSCSep2">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                    </left>
                    <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                  </left>
                  <right xsi:type="STE:BinaryExpression" operator="OR">
                    <left xsi:type="STE:BinaryExpression" operator="EQUAL">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_SSC_PAC">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_BoundaryPressure"/>
                      </left>
                      <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                    </left>
                    <right xsi:type="STE:BinaryExpression" operator="OR">
                      <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stack_Crane">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="OR">
                        <left xsi:type="STE:BinaryExpression" operator="LESSER_EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Block_Stamp_RC">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="AI_PressureSensor"/>
                          </left>
                          <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="10000"/>
                        </left>
                        <right xsi:type="STE:BinaryExpression" operator="EQUAL">
                          <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="EngergyMonitoringHardware">
                            <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PressureSensor_4bar">
                              <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="DI_PressureReached"/>
                            </innerVariable>
                          </left>
                          <right xsi:type="STE:Literal" dataType="BOOL" expressionType="LITERAL" symbol="FALSE"/>
                        </right>
                      </right>
                    </right>
                  </right>
                </subexpression>
              </condition>
              <substatements xsi:type="ST:Assignment" id="_qm_kJr34EequD661lQoFzA" statementType="ASSIGNMENT" absStartLine="9" absEndLine="9" relStartLine="9" relEndLine="9" startColumnPos="1" endColumnPos="22" structuredText="_qm_kIr34EequD661lQoFzA">
                <left dataType="DERIVED" expressionType="VARIABLE" Symbol="EmergencyStop"/>
                <right xsi:type="STE:Literal" id="_qm_kJb34EequD661lQoFzA" dataType="BOOL" expressionType="LITERAL" symbol="TRUE"/>
              </substatements>
              <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kKb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="10" absEndLine="10" relStartLine="10" relEndLine="10" startColumnPos="1" endColumnPos="38" structuredText="_qm_kIr34EequD661lQoFzA">
                <functionCall expressionType="FUNCTION_CALL" symbol="Timer">
                  <parameters>
                    <assignedValue xsi:type="STE:UnaryExpression" id="_qm_kJ734EequD661lQoFzA" dataType="DERIVED" expressionType="UNARY" operator="NOT">
                      <subexpression xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Q"/>
                      </subexpression>
                    </assignedValue>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="IN"/>
                  </parameters>
                  <parameters>
                    <assignedValue xsi:type="STE:Literal" id="_qm_kKL34EequD661lQoFzA" dataType="TIME" expressionType="LITERAL" symbol="T#500MS"/>
                    <input dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                  </parameters>
                </functionCall>
              </substatements>
              <substatements xsi:type="ST:If" id="_qnAKv734EequD661lQoFzA" statementType="IF" absStartLine="11" absEndLine="35" relStartLine="11" relEndLine="35" startColumnPos="1" endColumnPos="6" structuredText="_qm_kIr34EequD661lQoFzA">
                <conditionalBlocks id="_qnAKs734EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="11" absEndLine="22" relStartLine="11" relEndLine="22" startColumnPos="1" endColumnPos="41" structuredText="_qm_kIr34EequD661lQoFzA" else="false">
                  <condition xsi:type="STE:UnaryExpression" id="_qm_kK734EequD661lQoFzA" expressionType="UNARY" operator="PARENTHESIS">
                    <subexpression xsi:type="STE:BinaryExpression" id="_qm_kKr34EequD661lQoFzA" operator="LESSER_THAN">
                      <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                        <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="ET"/>
                      </left>
                      <right xsi:type="STE:BinaryExpression" operator="DIV">
                        <left xsi:type="STE:VariableExpression" dataType="DERIVED" expressionType="VARIABLE" Symbol="Timer">
                          <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="PT"/>
                        </left>
                        <right xsi:type="STE:Literal" dataType="DINT" expressionType="LITERAL" symbol="2"/>
                      </right>
                    </subexpression>
                  </condition>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kLL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="13" absEndLine="13" relStartLine="13" relEndLine="13" startColumnPos="2" endColumnPos="36" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kLb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="14" absEndLine="14" relStartLine="14" relEndLine="14" startColumnPos="2" endColumnPos="51" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kLr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="15" absEndLine="15" relStartLine="15" relEndLine="15" startColumnPos="2" endColumnPos="36" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kL734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="16" absEndLine="16" relStartLine="16" relEndLine="16" startColumnPos="2" endColumnPos="41" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kML34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="17" absEndLine="17" relStartLine="17" relEndLine="17" startColumnPos="2" endColumnPos="40" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kMb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="18" absEndLine="18" relStartLine="18" relEndLine="18" startColumnPos="2" endColumnPos="37" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qm_kMr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="19" absEndLine="19" relStartLine="19" relEndLine="19" startColumnPos="2" endColumnPos="52" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKsL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="20" absEndLine="20" relStartLine="20" relEndLine="20" startColumnPos="2" endColumnPos="37" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKsb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="21" absEndLine="21" relStartLine="21" relEndLine="21" startColumnPos="2" endColumnPos="42" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKsr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="22" absEndLine="22" relStartLine="22" relEndLine="22" startColumnPos="2" endColumnPos="41" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_Off"/>
                  </substatements>
                </conditionalBlocks>
                <conditionalBlocks id="_qnAKvr34EequD661lQoFzA" statementType="CONDITIONAL_BLOCK" absStartLine="23" absEndLine="34" relStartLine="23" relEndLine="34" startColumnPos="1" endColumnPos="40" structuredText="_qm_kIr34EequD661lQoFzA">
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKtL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="25" absEndLine="25" relStartLine="25" relEndLine="25" startColumnPos="2" endColumnPos="37" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKtb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="26" absEndLine="26" relStartLine="26" relEndLine="26" startColumnPos="2" endColumnPos="52" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKtr34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="27" absEndLine="27" relStartLine="27" relEndLine="27" startColumnPos="2" endColumnPos="37" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKt734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="28" absEndLine="28" relStartLine="28" relEndLine="28" startColumnPos="2" endColumnPos="42" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKuL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="29" absEndLine="29" relStartLine="29" relEndLine="29" startColumnPos="2" endColumnPos="41" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampGreen_Off"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKub34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="30" absEndLine="30" relStartLine="30" relEndLine="30" startColumnPos="2" endColumnPos="36" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stack">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKur34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="31" absEndLine="31" relStartLine="31" relEndLine="31" startColumnPos="2" endColumnPos="51" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LargeSortingConveyor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKu734EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="32" absEndLine="32" relStartLine="32" relEndLine="32" startColumnPos="2" endColumnPos="36" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Stamp">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampWhite_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKvL34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="33" absEndLine="33" relStartLine="33" relEndLine="33" startColumnPos="2" endColumnPos="41" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="SafetyDoor">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                  <substatements xsi:type="ST:FunctionCallStatement" id="_qnAKvb34EequD661lQoFzA" statementType="FUNCTION_CALL" absStartLine="34" absEndLine="34" relStartLine="34" relEndLine="34" startColumnPos="2" endColumnPos="40" structuredText="_qm_kIr34EequD661lQoFzA">
                    <invokingVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="LightGrid">
                      <innerVariable dataType="DERIVED" expressionType="VARIABLE" Symbol="Panel"/>
                    </invokingVariable>
                    <functionCall expressionType="FUNCTION_CALL" symbol="ACT_TurnLampReset_On"/>
                  </substatements>
                </conditionalBlocks>
              </substatements>
            </conditionalBlocks>
          </statements>
        </implementation>
      </actions>
      <actions name="ACT_AutomaticExecute">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_AutomaticExecute">
          <steps name="AutomaticExecute_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Call_All" incomingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.15/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <transitions condition="Not AutomaticExecuteCompleted AND SFCResetCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="AutomaticExecuteCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.15/@implementation/@steps.0" local_ID="5"/>
        </implementation>
      </actions>
      <actions name="ACT_EmergencyStop">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_EmergencyStop">
          <steps name="EmergencyStop_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" local_ID="0" initialStep="true"/>
          <steps name="Stack_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" local_ID="3" stepLevel="1"/>
          <steps name="Crane_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" local_ID="6" stepLevel="2"/>
          <steps name="LargeSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" local_ID="9" stepLevel="3"/>
          <steps name="PicAlphaConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" local_ID="12" stepLevel="4"/>
          <steps name="SmallSortingConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" local_ID="15" stepLevel="5"/>
          <steps name="RefillConveyor_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" local_ID="18" stepLevel="6"/>
          <steps name="Stamp_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.6" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" local_ID="21" stepLevel="7"/>
          <steps name="PicAlpha_ES" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.7" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" local_ID="24" stepLevel="8"/>
          <steps name="Emergency_Handled" incomingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.8" outgoingTransitions="//@resources.0/@pous.37/@actions.16/@implementation/@transitions.9" local_ID="27" stepLevel="9">
            <actions xsi:type="SFC:SimpleAction" localId="28" qualifier="N" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.6"/>
          </steps>
          <transitions condition="NOT EmergencyHandled AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" local_ID="2"/>
          <transitions condition="Stack.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" local_ID="5"/>
          <transitions condition="Crane.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" local_ID="8"/>
          <transitions condition="LargeSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" local_ID="11"/>
          <transitions condition="PicAlphaConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.4" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" local_ID="14"/>
          <transitions condition="SmallSortingConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.5" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" local_ID="17"/>
          <transitions condition="RefillConveyor.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.6" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" local_ID="20"/>
          <transitions condition="Stamp.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" local_ID="23"/>
          <transitions condition="PicAlpha.EmergencyHandled" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" local_ID="26"/>
          <transitions condition="EmergencyHandled" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.9" targetStep="//@resources.0/@pous.37/@actions.16/@implementation/@steps.0" local_ID="31"/>
        </implementation>
      </actions>
      <actions name="ACT_Init">
        <implementation xsi:type="SFC:SequentialFunctionChart" label="ACT_Init">
          <steps name="Initialisation_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" local_ID="0" initialStep="true">
            <actions xsi:type="SFC:SimpleAction" localId="1" qualifier="R" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.0"/>
          </steps>
          <steps name="Stamp_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" local_ID="6"/>
          <steps name="Crane_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.1" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" local_ID="9"/>
          <steps name="PicAlpha_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.2" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" local_ID="12"/>
          <steps name="LargeSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="16"/>
          <steps name="PicAlphaConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="17"/>
          <steps name="SmallSortingConveyor_Init" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="18"/>
          <steps name="RefillConveoyr_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.3" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" local_ID="19"/>
          <steps name="Stack_Init" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.4" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" local_ID="23"/>
          <steps name="Init_Completed" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.5" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="26">
            <actions xsi:type="SFC:SimpleAction" localId="27" qualifier="N" actionVariable="//@resources.0/@pous.37/@declaration/@outputVariables.3"/>
          </steps>
          <steps name="FaultAirPressureDetection" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="29"/>
          <steps name="EmergencyChecking" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="30"/>
          <steps name="ManuelModeCehcking" incomingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.0" outgoingTransitions="//@resources.0/@pous.37/@actions.17/@implementation/@transitions.6" local_ID="31" stepLevel="1"/>
          <transitions condition="NOT InitCompleted AND NOT GVL.IsSFCResetting" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.12" local_ID="4"/>
          <transitions condition="Stamp.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.1" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" local_ID="8"/>
          <transitions condition="Crane.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.2" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" local_ID="11"/>
          <transitions condition="PicAlpha.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.3" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.7" local_ID="14"/>
          <transitions condition="LargeSortingConveyor.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.4 //@resources.0/@pous.37/@actions.17/@implementation/@steps.5 //@resources.0/@pous.37/@actions.17/@implementation/@steps.6 //@resources.0/@pous.37/@actions.17/@implementation/@steps.7" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" local_ID="22"/>
          <transitions condition="Stack.InitCompleted" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.8" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9" local_ID="25"/>
          <transitions condition="InitCompleted" isJump="true" sourceStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.9 //@resources.0/@pous.37/@actions.17/@implementation/@steps.10 //@resources.0/@pous.37/@actions.17/@implementation/@steps.11 //@resources.0/@pous.37/@actions.17/@implementation/@steps.12" targetStep="//@resources.0/@pous.37/@actions.17/@implementation/@steps.0" local_ID="34"/>
        </implementation>
      </actions>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="A_to_V_Transducer" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_AmperToVolt" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="FlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Flow" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="GearPointFlowSensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_ReachedGearPoint" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="MagnetValve" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Changeover" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="PressureSensor_4bar" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DI_PressureReached" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="ProtectiveContact" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="DO_Plug" scope="VAR" type="BOOL" typeName="BOOL">
          <location type="Q" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="V_Sensor" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Voltage" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <pous callers="//@resources.0/@pous.27" identifier="Wattmeter" type="FUNCTIONBLOCK">
      <declaration>
        <internalVariables name="AI_Energy" scope="VAR" type="INT" typeName="INT">
          <location type="I" dataType="None"/>
        </internalVariables>
      </declaration>
    </pous>
    <tasks name="PlcTask" controlledPrograms="//@resources.0/@pous.0"/>
    <types name="RFID_ByteArray">
      <variables xsi:type="C:ArrayVariable" name="RFID_Data" scope="VAR" type="BYTE" typeName="BYTE" array="true">
        <location/>
        <lowerBound xsi:type="STE:Literal" id="_qmt20L34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="0"/>
        <upperBound xsi:type="STE:Literal" id="_qmud4L34EequD661lQoFzA" dataType="DINT" expressionType="LITERAL" symbol="127"/>
      </variables>
    </types>
  </resources>
</C:Configuration>
